on: [push, pull_request]

env:
  UV_FROZEN: 1

name: CI
jobs:
  test:
    name: Integration
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version:
          - '3.11'
          - '3.12'
    env:
      # Disable colors and formatting in Rich console output
      TERM: dumb
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v2
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install mreg-cli
        run: uv sync
      - name: Test and compare api calls
        run: uv run ci/run_testsuite_and_record.sh
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: .coverage-integration-${{ matrix.python-version }}
          path: ci/.coverage
          if-no-files-found: error
          include-hidden-files: true
      
  tox:
    name: tox
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v2
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --group ci
      - name: Test building with tox
        run: uv run tox r

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v18
        with:
          config: '.markdownlint.json'
          globs: '**/*.md'

  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v2
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync
      - name: Run unit tests with coverage
        run: uv run coverage run -m pytest
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: .coverage-unit-${{ matrix.python-version }}
          path: .coverage
          if-no-files-found: error
          include-hidden-files: true
      
  coveralls:
    if: ${{ github.event_name == 'pull_request' || github.repository == 'unioslo/mreg-cli' }}
    name: Coveralls
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python 3.12
        run: uv python install 3.12
      - name: Download coverage files
        uses: actions/download-artifact@v4
      - name: Install Coveralls & Coverage
        run: |
          uv venv --no-project
          uv pip install coveralls coverage
      - name: Combine coverage files
        run: uv run coverage combine
      - name: Run Coveralls
        run: uv run coveralls
        env:
          # Note: Set service name to work around
          # https://github.com/TheKevJames/coveralls-python/issues/252
          COVERALLS_SERVICE_NAME: github
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: mreg-cli-coveralls
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  finish:
    name: Indicate completion to coveralls.io
    needs: coveralls
    runs-on: ubuntu-latest
    steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Set up Python 3.12
      run: uv python install 3.12
    - name: Install coveralls
      run: |
        uv venv
        uv pip install --upgrade coveralls
    - name: Finished
      run: uv run coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

