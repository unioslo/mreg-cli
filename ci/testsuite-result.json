[
  {
    "command": "zone create example.org hostmaster@example.org ns1.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone create example.org hostmaster@example.org ns1.example.org  # should require force because ns1 is unknown",
    "ok": [],
    "warning": [
      "ns1.example.org is not in mreg, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/ns1.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/ns1.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone create example.org hostmaster@example.org ns1.example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone create example.org hostmaster@example.org ns1.example.org -force",
    "ok": [
      "Created zone example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/zones/forward/",
        "data": {
          "name": "example.org",
          "email": "hostmaster@example.org",
          "primary_ns": [
            "ns1.example.org"
          ]
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2025-08-26T11:56:35.531281+02:00",
              "updated_at": "2025-08-26T11:56:35.531321+02:00",
              "name": "ns1.example.org",
              "ttl": null
            }
          ],
          "created_at": "2025-08-26T11:56:35.478972+02:00",
          "updated_at": "2025-08-26T11:56:35.541992+02:00",
          "updated": true,
          "primary_ns": "ns1.example.org",
          "email": "hostmaster@example.org",
          "serialno_updated_at": "2025-08-26T11:56:35.477876+02:00",
          "refresh": 10800,
          "retry": 3600,
          "expire": 1814400,
          "soa_ttl": 43200,
          "default_ttl": 43200,
          "name": "example.org"
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone info example.org",
    "command_filter": "Serialnumber",
    "command_filter_negate": true,
    "command_issued": "zone info example.org |! Serialnumber # Serialnumber includes the date: https://github.com/unioslo/mreg/blob/master/mreg/utils.py#L78",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:               example.org",
      "        Nameservers:        hostname            TTL",
      "                            ns1.example.org     <not set>",
      "Primary NS:         ns1.example.org",
      "Email:              hostmaster@example.org",
      "Serial:             3241211000",
      "Refresh:            10800",
      "Retry:              3600",
      "Expire:             1814400",
      "SOA TTL:            43200",
      "Default TTL:        43200"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:39.714536+01:00",
              "updated_at": "2024-12-11T16:44:39.714557+01:00",
              "name": "ns1.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:39.734053+01:00",
          "updated": true,
          "primary_ns": "ns1.example.org",
          "email": "hostmaster@example.org",
          "serialno_updated_at": "2024-12-11T16:44:39.700924+01:00",
          "refresh": 10800,
          "retry": 3600,
          "expire": 1814400,
          "soa_ttl": 43200,
          "default_ttl": 43200,
          "name": "example.org"
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone list -forward",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone list -forward",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Zones:",
      " example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "nameservers": [
                {
                  "created_at": "2024-12-11T16:44:39.714536+01:00",
                  "updated_at": "2024-12-11T16:44:39.714557+01:00",
                  "name": "ns1.example.org",
                  "ttl": null
                }
              ],
              "created_at": "2024-12-11T16:44:39.701254+01:00",
              "updated_at": "2024-12-11T16:44:39.734053+01:00",
              "updated": true,
              "primary_ns": "ns1.example.org",
              "email": "hostmaster@example.org",
              "serialno_updated_at": "2024-12-11T16:44:39.700924+01:00",
              "refresh": 10800,
              "retry": 3600,
              "expire": 1814400,
              "soa_ttl": 43200,
              "default_ttl": 43200,
              "name": "example.org"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone set_ns example.org ns2.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone set_ns example.org ns2.example.org  #  requires force because ns2 is unknown",
    "ok": [],
    "warning": [
      "ns2.example.org is not in mreg, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/ns2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/ns2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone set_ns example.org ns2.example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone set_ns example.org ns2.example.org -force",
    "ok": [
      "Updated nameservers for example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/zones/forward/example.org/nameservers",
        "data": {
          "primary_ns": [
            "ns2.example.org"
          ]
        },
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone set_soa example.org -email hostperson@example.org -serialno 12345 -refresh 360 -retry 1800 -expire 2400 -soa-ttl 1800",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone set_soa example.org -email hostperson@example.org -serialno 12345 -refresh 360 -retry 1800 -expire 2400 -soa-ttl 1800",
    "ok": [
      "Updated SOA for example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:40.381405+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostmaster@example.org",
          "serialno_updated_at": "2024-12-11T16:44:39.700924+01:00",
          "refresh": 10800,
          "retry": 3600,
          "expire": 1814400,
          "soa_ttl": 43200,
          "default_ttl": 43200,
          "name": "example.org"
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/zones/forward/example.org",
        "data": {
          "email": "hostperson@example.org",
          "serialno": 12345,
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "nameservers": [
                {
                  "created_at": "2024-12-11T16:44:40.356452+01:00",
                  "updated_at": "2024-12-11T16:44:40.356481+01:00",
                  "name": "ns2.example.org",
                  "ttl": null
                }
              ],
              "created_at": "2024-12-11T16:44:39.701254+01:00",
              "updated_at": "2024-12-11T16:44:40.481572+01:00",
              "updated": true,
              "primary_ns": "ns2.example.org",
              "email": "hostperson@example.org",
              "serialno_updated_at": "2024-12-11T16:44:40.474871+01:00",
              "refresh": 360,
              "retry": 1800,
              "expire": 2400,
              "soa_ttl": 1800,
              "default_ttl": 43200,
              "name": "example.org"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone set_default_ttl example.org 60",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone set_default_ttl example.org 60    # should fail, must be >= 300",
    "ok": [],
    "warning": [
      "Invalid TTL value: 60 (300->68400)"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:40.481572+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2024-12-11T16:44:40.474871+01:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 43200,
          "name": "example.org"
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone set_default_ttl example.org 300",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone set_default_ttl example.org 300",
    "ok": [
      "Set default TTL for example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/zones/forward/example.org",
        "data": {
          "default_ttl": 300
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "nameservers": [
                {
                  "created_at": "2025-08-26T11:56:35.781651+02:00",
                  "updated_at": "2025-08-26T11:56:35.781663+02:00",
                  "name": "ns2.example.org",
                  "ttl": null
                }
              ],
              "created_at": "2025-08-26T11:56:35.478972+02:00",
              "updated_at": "2025-08-26T11:56:36.225371+02:00",
              "updated": true,
              "primary_ns": "ns2.example.org",
              "email": "hostperson@example.org",
              "serialno_updated_at": "2025-08-26T11:56:36.090230+02:00",
              "refresh": 360,
              "retry": 1800,
              "expire": 2400,
              "soa_ttl": 1800,
              "default_ttl": 300,
              "name": "example.org"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.2.0/28 -desc \"TinyNet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.2.0/28 -desc \"TinyNet\"",
    "ok": [
      "created network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:42.905787+01:00",
          "updated_at": "2025-03-19T10:10:42.905797+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network list_used_addresses 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_used_addresses 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "No used addresses on network 10.0.2.0/28"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:42.905787+01:00",
          "updated_at": "2025-03-19T10:10:42.905797+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_host_list",
        "data": {},
        "status": 200,
        "response": {}
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/ptroverride_host_list",
        "data": {},
        "status": 200,
        "response": {}
      }
    ],
    "time": null
  },
  {
    "command": "network list_unused_addresses 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_unused_addresses 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "10.0.2.4                 ",
      "10.0.2.5                 ",
      "10.0.2.6                 ",
      "10.0.2.7                 ",
      "10.0.2.8                 ",
      "10.0.2.9                 ",
      "10.0.2.10                ",
      "10.0.2.11                ",
      "10.0.2.12                ",
      "10.0.2.13                ",
      "10.0.2.14                "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/unused_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.2.4",
          "10.0.2.5",
          "10.0.2.6",
          "10.0.2.7",
          "10.0.2.8",
          "10.0.2.9",
          "10.0.2.10",
          "10.0.2.11",
          "10.0.2.12",
          "10.0.2.13",
          "10.0.2.14"
        ]
      }
    ],
    "time": null
  },
  {
    "command": "network set_reserved 10.0.2.0/28 8",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_reserved 10.0.2.0/28 8",
    "ok": [
      "Updated reserved to '8' for 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {
          "reserved": 8
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:36.423688+02:00",
              "updated_at": "2025-08-26T11:56:36.676664+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 8
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add tinyhost -ip 10.0.2.0/28 -contact tinyhost@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add tinyhost -ip 10.0.2.0/28 -contact tinyhost@example.org",
    "ok": [
      "Created host tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinyhost.example.org",
      "Contact:      tinyhost@example.org",
      "A_Records:",
      "              IP         MAC         ",
      "              10.0.2.9   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Mon May 19 10:27:40 2025",
      "Updated:      Mon May 19 10:27:40 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:39.315409+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:39.429829+02:00",
          "updated_at": "2025-05-19T10:27:39.940849+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 8
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "network": "10.0.2.0/28"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-05-19T10:27:40.217613+02:00",
              "updated_at": "2025-05-19T10:27:40.217622+02:00",
              "ipaddress": "10.0.2.9",
              "host": 1
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-05-19T10:27:40.189212+02:00",
              "updated_at": "2025-05-19T10:27:40.189220+02:00",
              "txt": "v=spf1 -all",
              "host": 1
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:40.185380+02:00",
          "updated_at": "2025-05-19T10:27:40.185394+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.9",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:39.429829+02:00",
          "updated_at": "2025-05-19T10:27:39.940849+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 8
        }
      }
    ],
    "time": null
  },
  {
    "command": "network list_used_addresses 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_used_addresses 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "10.0.2.9                                      tinyhost.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:42.905787+01:00",
          "updated_at": "2025-03-19T10:10:43.080147+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 8
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_host_list",
        "data": {},
        "status": 200,
        "response": {
          "10.0.2.9": [
            "tinyhost.example.org"
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/ptroverride_host_list",
        "data": {},
        "status": 200,
        "response": {}
      }
    ],
    "time": null
  },
  {
    "command": "network list_unused_addresses 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_unused_addresses 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "10.0.2.10                ",
      "10.0.2.11                ",
      "10.0.2.12                ",
      "10.0.2.13                ",
      "10.0.2.14                "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/unused_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.2.10",
          "10.0.2.11",
          "10.0.2.12",
          "10.0.2.13",
          "10.0.2.14"
        ]
      }
    ],
    "time": null
  },
  {
    "command": "host remove tinyhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove tinyhost",
    "ok": [
      "removed tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-03-20T15:36:57.187507+01:00",
              "updated_at": "2025-03-20T15:36:57.187513+01:00",
              "ipaddress": "10.0.2.9",
              "host": 1
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-03-20T15:36:57.167324+01:00",
              "updated_at": "2025-03-20T15:36:57.167330+01:00",
              "txt": "v=spf1 -all",
              "host": 1
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:57.165140+01:00",
          "updated_at": "2025-03-20T15:36:57.165146+01:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.2.0/28 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.2.0/28 -force",
    "ok": [
      "Removed network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:42.905787+01:00",
          "updated_at": "2025-03-19T10:10:43.080147+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 8
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 2001:db8::/64 -desc \"Lorem ipsum dolor sit amet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 2001:db8::/64 -desc \"Lorem ipsum dolor sit amet\"",
    "ok": [
      "created network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001:db8::/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:43.865439+01:00",
          "updated_at": "2025-03-19T10:10:43.865451+01:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network list_used_addresses 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_used_addresses 2001:db8::/64",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "No used addresses on network 2001:db8::/64"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:43.865439+01:00",
          "updated_at": "2025-03-19T10:10:43.865451+01:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_host_list",
        "data": {},
        "status": 200,
        "response": {}
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/ptroverride_host_list",
        "data": {},
        "status": 200,
        "response": {}
      }
    ],
    "time": null
  },
  {
    "command": "network list_unused_addresses 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_unused_addresses 2001:db8::/64",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2001:db8::4              ",
      "2001:db8::5              ",
      "2001:db8::6              ",
      "2001:db8::7              ",
      "2001:db8::8              ",
      "2001:db8::9              ",
      "2001:db8::a              ",
      "2001:db8::b              ",
      "2001:db8::c              ",
      "2001:db8::d              ",
      "2001:db8::e              ",
      "2001:db8::f              ",
      "2001:db8::10             ",
      "2001:db8::11             ",
      "2001:db8::12             ",
      "2001:db8::13             ",
      "2001:db8::14             ",
      "2001:db8::15             ",
      "2001:db8::16             ",
      "2001:db8::17             ",
      "2001:db8::18             ",
      "2001:db8::19             ",
      "2001:db8::1a             ",
      "2001:db8::1b             ",
      "2001:db8::1c             ",
      "2001:db8::1d             ",
      "2001:db8::1e             ",
      "2001:db8::1f             ",
      "2001:db8::20             ",
      "2001:db8::21             ",
      "2001:db8::22             ",
      "2001:db8::23             ",
      "2001:db8::24             ",
      "2001:db8::25             ",
      "2001:db8::26             ",
      "2001:db8::27             ",
      "2001:db8::28             ",
      "2001:db8::29             ",
      "2001:db8::2a             ",
      "2001:db8::2b             ",
      "2001:db8::2c             ",
      "2001:db8::2d             ",
      "2001:db8::2e             ",
      "2001:db8::2f             ",
      "2001:db8::30             ",
      "2001:db8::31             ",
      "2001:db8::32             ",
      "2001:db8::33             ",
      "2001:db8::34             ",
      "2001:db8::35             ",
      "2001:db8::36             ",
      "2001:db8::37             ",
      "2001:db8::38             ",
      "2001:db8::39             ",
      "2001:db8::3a             ",
      "2001:db8::3b             ",
      "2001:db8::3c             ",
      "2001:db8::3d             ",
      "2001:db8::3e             ",
      "2001:db8::3f             ",
      "2001:db8::40             ",
      "2001:db8::41             ",
      "2001:db8::42             ",
      "2001:db8::43             ",
      "2001:db8::44             ",
      "2001:db8::45             ",
      "2001:db8::46             ",
      "2001:db8::47             ",
      "2001:db8::48             ",
      "2001:db8::49             ",
      "2001:db8::4a             ",
      "2001:db8::4b             ",
      "2001:db8::4c             ",
      "2001:db8::4d             ",
      "2001:db8::4e             ",
      "2001:db8::4f             ",
      "2001:db8::50             ",
      "2001:db8::51             ",
      "2001:db8::52             ",
      "2001:db8::53             ",
      "2001:db8::54             ",
      "2001:db8::55             ",
      "2001:db8::56             ",
      "2001:db8::57             ",
      "2001:db8::58             ",
      "2001:db8::59             ",
      "2001:db8::5a             ",
      "2001:db8::5b             ",
      "2001:db8::5c             ",
      "2001:db8::5d             ",
      "2001:db8::5e             ",
      "2001:db8::5f             ",
      "2001:db8::60             ",
      "2001:db8::61             ",
      "2001:db8::62             ",
      "2001:db8::63             ",
      "2001:db8::64             ",
      "2001:db8::65             ",
      "2001:db8::66             ",
      "2001:db8::67             ",
      "2001:db8::68             ",
      "2001:db8::69             ",
      "2001:db8::6a             ",
      "2001:db8::6b             ",
      "2001:db8::6c             ",
      "2001:db8::6d             ",
      "2001:db8::6e             ",
      "2001:db8::6f             ",
      "2001:db8::70             ",
      "2001:db8::71             ",
      "2001:db8::72             ",
      "2001:db8::73             ",
      "2001:db8::74             ",
      "2001:db8::75             ",
      "2001:db8::76             ",
      "2001:db8::77             ",
      "2001:db8::78             ",
      "2001:db8::79             ",
      "2001:db8::7a             ",
      "2001:db8::7b             ",
      "2001:db8::7c             ",
      "2001:db8::7d             ",
      "2001:db8::7e             ",
      "2001:db8::7f             ",
      "2001:db8::80             ",
      "2001:db8::81             ",
      "2001:db8::82             ",
      "2001:db8::83             ",
      "2001:db8::84             ",
      "2001:db8::85             ",
      "2001:db8::86             ",
      "2001:db8::87             ",
      "2001:db8::88             ",
      "2001:db8::89             ",
      "2001:db8::8a             ",
      "2001:db8::8b             ",
      "2001:db8::8c             ",
      "2001:db8::8d             ",
      "2001:db8::8e             ",
      "2001:db8::8f             ",
      "2001:db8::90             ",
      "2001:db8::91             ",
      "2001:db8::92             ",
      "2001:db8::93             ",
      "2001:db8::94             ",
      "2001:db8::95             ",
      "2001:db8::96             ",
      "2001:db8::97             ",
      "2001:db8::98             ",
      "2001:db8::99             ",
      "2001:db8::9a             ",
      "2001:db8::9b             ",
      "2001:db8::9c             ",
      "2001:db8::9d             ",
      "2001:db8::9e             ",
      "2001:db8::9f             ",
      "2001:db8::a0             ",
      "2001:db8::a1             ",
      "2001:db8::a2             ",
      "2001:db8::a3             ",
      "2001:db8::a4             ",
      "2001:db8::a5             ",
      "2001:db8::a6             ",
      "2001:db8::a7             ",
      "2001:db8::a8             ",
      "2001:db8::a9             ",
      "2001:db8::aa             ",
      "2001:db8::ab             ",
      "2001:db8::ac             ",
      "2001:db8::ad             ",
      "2001:db8::ae             ",
      "2001:db8::af             ",
      "2001:db8::b0             ",
      "2001:db8::b1             ",
      "2001:db8::b2             ",
      "2001:db8::b3             ",
      "2001:db8::b4             ",
      "2001:db8::b5             ",
      "2001:db8::b6             ",
      "2001:db8::b7             ",
      "2001:db8::b8             ",
      "2001:db8::b9             ",
      "2001:db8::ba             ",
      "2001:db8::bb             ",
      "2001:db8::bc             ",
      "2001:db8::bd             ",
      "2001:db8::be             ",
      "2001:db8::bf             ",
      "2001:db8::c0             ",
      "2001:db8::c1             ",
      "2001:db8::c2             ",
      "2001:db8::c3             ",
      "2001:db8::c4             ",
      "2001:db8::c5             ",
      "2001:db8::c6             ",
      "2001:db8::c7             ",
      "2001:db8::c8             ",
      "2001:db8::c9             ",
      "2001:db8::ca             ",
      "2001:db8::cb             ",
      "2001:db8::cc             ",
      "2001:db8::cd             ",
      "2001:db8::ce             ",
      "2001:db8::cf             ",
      "2001:db8::d0             ",
      "2001:db8::d1             ",
      "2001:db8::d2             ",
      "2001:db8::d3             ",
      "2001:db8::d4             ",
      "2001:db8::d5             ",
      "2001:db8::d6             ",
      "2001:db8::d7             ",
      "2001:db8::d8             ",
      "2001:db8::d9             ",
      "2001:db8::da             ",
      "2001:db8::db             ",
      "2001:db8::dc             ",
      "2001:db8::dd             ",
      "2001:db8::de             ",
      "2001:db8::df             ",
      "2001:db8::e0             ",
      "2001:db8::e1             ",
      "2001:db8::e2             ",
      "2001:db8::e3             ",
      "2001:db8::e4             ",
      "2001:db8::e5             ",
      "2001:db8::e6             ",
      "2001:db8::e7             ",
      "2001:db8::e8             ",
      "2001:db8::e9             ",
      "2001:db8::ea             ",
      "2001:db8::eb             ",
      "2001:db8::ec             ",
      "2001:db8::ed             ",
      "2001:db8::ee             ",
      "2001:db8::ef             ",
      "2001:db8::f0             ",
      "2001:db8::f1             ",
      "2001:db8::f2             ",
      "2001:db8::f3             ",
      "2001:db8::f4             ",
      "2001:db8::f5             ",
      "2001:db8::f6             ",
      "2001:db8::f7             ",
      "2001:db8::f8             ",
      "2001:db8::f9             ",
      "2001:db8::fa             ",
      "2001:db8::fb             ",
      "2001:db8::fc             ",
      "2001:db8::fd             ",
      "2001:db8::fe             ",
      "2001:db8::ff             ",
      "2001:db8::100            ",
      "2001:db8::101            ",
      "2001:db8::102            ",
      "2001:db8::103            ",
      "2001:db8::104            ",
      "2001:db8::105            ",
      "2001:db8::106            ",
      "2001:db8::107            ",
      "2001:db8::108            ",
      "2001:db8::109            ",
      "2001:db8::10a            ",
      "2001:db8::10b            ",
      "2001:db8::10c            ",
      "2001:db8::10d            ",
      "2001:db8::10e            ",
      "2001:db8::10f            ",
      "2001:db8::110            ",
      "2001:db8::111            ",
      "2001:db8::112            ",
      "2001:db8::113            ",
      "2001:db8::114            ",
      "2001:db8::115            ",
      "2001:db8::116            ",
      "2001:db8::117            ",
      "2001:db8::118            ",
      "2001:db8::119            ",
      "2001:db8::11a            ",
      "2001:db8::11b            ",
      "2001:db8::11c            ",
      "2001:db8::11d            ",
      "2001:db8::11e            ",
      "2001:db8::11f            ",
      "2001:db8::120            ",
      "2001:db8::121            ",
      "2001:db8::122            ",
      "2001:db8::123            ",
      "2001:db8::124            ",
      "2001:db8::125            ",
      "2001:db8::126            ",
      "2001:db8::127            ",
      "2001:db8::128            ",
      "2001:db8::129            ",
      "2001:db8::12a            ",
      "2001:db8::12b            ",
      "2001:db8::12c            ",
      "2001:db8::12d            ",
      "2001:db8::12e            ",
      "2001:db8::12f            ",
      "2001:db8::130            ",
      "2001:db8::131            ",
      "2001:db8::132            ",
      "2001:db8::133            ",
      "2001:db8::134            ",
      "2001:db8::135            ",
      "2001:db8::136            ",
      "2001:db8::137            ",
      "2001:db8::138            ",
      "2001:db8::139            ",
      "2001:db8::13a            ",
      "2001:db8::13b            ",
      "2001:db8::13c            ",
      "2001:db8::13d            ",
      "2001:db8::13e            ",
      "2001:db8::13f            ",
      "2001:db8::140            ",
      "2001:db8::141            ",
      "2001:db8::142            ",
      "2001:db8::143            ",
      "2001:db8::144            ",
      "2001:db8::145            ",
      "2001:db8::146            ",
      "2001:db8::147            ",
      "2001:db8::148            ",
      "2001:db8::149            ",
      "2001:db8::14a            ",
      "2001:db8::14b            ",
      "2001:db8::14c            ",
      "2001:db8::14d            ",
      "2001:db8::14e            ",
      "2001:db8::14f            ",
      "2001:db8::150            ",
      "2001:db8::151            ",
      "2001:db8::152            ",
      "2001:db8::153            ",
      "2001:db8::154            ",
      "2001:db8::155            ",
      "2001:db8::156            ",
      "2001:db8::157            ",
      "2001:db8::158            ",
      "2001:db8::159            ",
      "2001:db8::15a            ",
      "2001:db8::15b            ",
      "2001:db8::15c            ",
      "2001:db8::15d            ",
      "2001:db8::15e            ",
      "2001:db8::15f            ",
      "2001:db8::160            ",
      "2001:db8::161            ",
      "2001:db8::162            ",
      "2001:db8::163            ",
      "2001:db8::164            ",
      "2001:db8::165            ",
      "2001:db8::166            ",
      "2001:db8::167            ",
      "2001:db8::168            ",
      "2001:db8::169            ",
      "2001:db8::16a            ",
      "2001:db8::16b            ",
      "2001:db8::16c            ",
      "2001:db8::16d            ",
      "2001:db8::16e            ",
      "2001:db8::16f            ",
      "2001:db8::170            ",
      "2001:db8::171            ",
      "2001:db8::172            ",
      "2001:db8::173            ",
      "2001:db8::174            ",
      "2001:db8::175            ",
      "2001:db8::176            ",
      "2001:db8::177            ",
      "2001:db8::178            ",
      "2001:db8::179            ",
      "2001:db8::17a            ",
      "2001:db8::17b            ",
      "2001:db8::17c            ",
      "2001:db8::17d            ",
      "2001:db8::17e            ",
      "2001:db8::17f            ",
      "2001:db8::180            ",
      "2001:db8::181            ",
      "2001:db8::182            ",
      "2001:db8::183            ",
      "2001:db8::184            ",
      "2001:db8::185            ",
      "2001:db8::186            ",
      "2001:db8::187            ",
      "2001:db8::188            ",
      "2001:db8::189            ",
      "2001:db8::18a            ",
      "2001:db8::18b            ",
      "2001:db8::18c            ",
      "2001:db8::18d            ",
      "2001:db8::18e            ",
      "2001:db8::18f            ",
      "2001:db8::190            ",
      "2001:db8::191            ",
      "2001:db8::192            ",
      "2001:db8::193            ",
      "2001:db8::194            ",
      "2001:db8::195            ",
      "2001:db8::196            ",
      "2001:db8::197            ",
      "2001:db8::198            ",
      "2001:db8::199            ",
      "2001:db8::19a            ",
      "2001:db8::19b            ",
      "2001:db8::19c            ",
      "2001:db8::19d            ",
      "2001:db8::19e            ",
      "2001:db8::19f            ",
      "2001:db8::1a0            ",
      "2001:db8::1a1            ",
      "2001:db8::1a2            ",
      "2001:db8::1a3            ",
      "2001:db8::1a4            ",
      "2001:db8::1a5            ",
      "2001:db8::1a6            ",
      "2001:db8::1a7            ",
      "2001:db8::1a8            ",
      "2001:db8::1a9            ",
      "2001:db8::1aa            ",
      "2001:db8::1ab            ",
      "2001:db8::1ac            ",
      "2001:db8::1ad            ",
      "2001:db8::1ae            ",
      "2001:db8::1af            ",
      "2001:db8::1b0            ",
      "2001:db8::1b1            ",
      "2001:db8::1b2            ",
      "2001:db8::1b3            ",
      "2001:db8::1b4            ",
      "2001:db8::1b5            ",
      "2001:db8::1b6            ",
      "2001:db8::1b7            ",
      "2001:db8::1b8            ",
      "2001:db8::1b9            ",
      "2001:db8::1ba            ",
      "2001:db8::1bb            ",
      "2001:db8::1bc            ",
      "2001:db8::1bd            ",
      "2001:db8::1be            ",
      "2001:db8::1bf            ",
      "2001:db8::1c0            ",
      "2001:db8::1c1            ",
      "2001:db8::1c2            ",
      "2001:db8::1c3            ",
      "2001:db8::1c4            ",
      "2001:db8::1c5            ",
      "2001:db8::1c6            ",
      "2001:db8::1c7            ",
      "2001:db8::1c8            ",
      "2001:db8::1c9            ",
      "2001:db8::1ca            ",
      "2001:db8::1cb            ",
      "2001:db8::1cc            ",
      "2001:db8::1cd            ",
      "2001:db8::1ce            ",
      "2001:db8::1cf            ",
      "2001:db8::1d0            ",
      "2001:db8::1d1            ",
      "2001:db8::1d2            ",
      "2001:db8::1d3            ",
      "2001:db8::1d4            ",
      "2001:db8::1d5            ",
      "2001:db8::1d6            ",
      "2001:db8::1d7            ",
      "2001:db8::1d8            ",
      "2001:db8::1d9            ",
      "2001:db8::1da            ",
      "2001:db8::1db            ",
      "2001:db8::1dc            ",
      "2001:db8::1dd            ",
      "2001:db8::1de            ",
      "2001:db8::1df            ",
      "2001:db8::1e0            ",
      "2001:db8::1e1            ",
      "2001:db8::1e2            ",
      "2001:db8::1e3            ",
      "2001:db8::1e4            ",
      "2001:db8::1e5            ",
      "2001:db8::1e6            ",
      "2001:db8::1e7            ",
      "2001:db8::1e8            ",
      "2001:db8::1e9            ",
      "2001:db8::1ea            ",
      "2001:db8::1eb            ",
      "2001:db8::1ec            ",
      "2001:db8::1ed            ",
      "2001:db8::1ee            ",
      "2001:db8::1ef            ",
      "2001:db8::1f0            ",
      "2001:db8::1f1            ",
      "2001:db8::1f2            ",
      "2001:db8::1f3            ",
      "2001:db8::1f4            ",
      "2001:db8::1f5            ",
      "2001:db8::1f6            ",
      "2001:db8::1f7            ",
      "2001:db8::1f8            ",
      "2001:db8::1f9            ",
      "2001:db8::1fa            ",
      "2001:db8::1fb            ",
      "2001:db8::1fc            ",
      "2001:db8::1fd            ",
      "2001:db8::1fe            ",
      "2001:db8::1ff            ",
      "2001:db8::200            ",
      "2001:db8::201            ",
      "2001:db8::202            ",
      "2001:db8::203            ",
      "2001:db8::204            ",
      "2001:db8::205            ",
      "2001:db8::206            ",
      "2001:db8::207            ",
      "2001:db8::208            ",
      "2001:db8::209            ",
      "2001:db8::20a            ",
      "2001:db8::20b            ",
      "2001:db8::20c            ",
      "2001:db8::20d            ",
      "2001:db8::20e            ",
      "2001:db8::20f            ",
      "2001:db8::210            ",
      "2001:db8::211            ",
      "2001:db8::212            ",
      "2001:db8::213            ",
      "2001:db8::214            ",
      "2001:db8::215            ",
      "2001:db8::216            ",
      "2001:db8::217            ",
      "2001:db8::218            ",
      "2001:db8::219            ",
      "2001:db8::21a            ",
      "2001:db8::21b            ",
      "2001:db8::21c            ",
      "2001:db8::21d            ",
      "2001:db8::21e            ",
      "2001:db8::21f            ",
      "2001:db8::220            ",
      "2001:db8::221            ",
      "2001:db8::222            ",
      "2001:db8::223            ",
      "2001:db8::224            ",
      "2001:db8::225            ",
      "2001:db8::226            ",
      "2001:db8::227            ",
      "2001:db8::228            ",
      "2001:db8::229            ",
      "2001:db8::22a            ",
      "2001:db8::22b            ",
      "2001:db8::22c            ",
      "2001:db8::22d            ",
      "2001:db8::22e            ",
      "2001:db8::22f            ",
      "2001:db8::230            ",
      "2001:db8::231            ",
      "2001:db8::232            ",
      "2001:db8::233            ",
      "2001:db8::234            ",
      "2001:db8::235            ",
      "2001:db8::236            ",
      "2001:db8::237            ",
      "2001:db8::238            ",
      "2001:db8::239            ",
      "2001:db8::23a            ",
      "2001:db8::23b            ",
      "2001:db8::23c            ",
      "2001:db8::23d            ",
      "2001:db8::23e            ",
      "2001:db8::23f            ",
      "2001:db8::240            ",
      "2001:db8::241            ",
      "2001:db8::242            ",
      "2001:db8::243            ",
      "2001:db8::244            ",
      "2001:db8::245            ",
      "2001:db8::246            ",
      "2001:db8::247            ",
      "2001:db8::248            ",
      "2001:db8::249            ",
      "2001:db8::24a            ",
      "2001:db8::24b            ",
      "2001:db8::24c            ",
      "2001:db8::24d            ",
      "2001:db8::24e            ",
      "2001:db8::24f            ",
      "2001:db8::250            ",
      "2001:db8::251            ",
      "2001:db8::252            ",
      "2001:db8::253            ",
      "2001:db8::254            ",
      "2001:db8::255            ",
      "2001:db8::256            ",
      "2001:db8::257            ",
      "2001:db8::258            ",
      "2001:db8::259            ",
      "2001:db8::25a            ",
      "2001:db8::25b            ",
      "2001:db8::25c            ",
      "2001:db8::25d            ",
      "2001:db8::25e            ",
      "2001:db8::25f            ",
      "2001:db8::260            ",
      "2001:db8::261            ",
      "2001:db8::262            ",
      "2001:db8::263            ",
      "2001:db8::264            ",
      "2001:db8::265            ",
      "2001:db8::266            ",
      "2001:db8::267            ",
      "2001:db8::268            ",
      "2001:db8::269            ",
      "2001:db8::26a            ",
      "2001:db8::26b            ",
      "2001:db8::26c            ",
      "2001:db8::26d            ",
      "2001:db8::26e            ",
      "2001:db8::26f            ",
      "2001:db8::270            ",
      "2001:db8::271            ",
      "2001:db8::272            ",
      "2001:db8::273            ",
      "2001:db8::274            ",
      "2001:db8::275            ",
      "2001:db8::276            ",
      "2001:db8::277            ",
      "2001:db8::278            ",
      "2001:db8::279            ",
      "2001:db8::27a            ",
      "2001:db8::27b            ",
      "2001:db8::27c            ",
      "2001:db8::27d            ",
      "2001:db8::27e            ",
      "2001:db8::27f            ",
      "2001:db8::280            ",
      "2001:db8::281            ",
      "2001:db8::282            ",
      "2001:db8::283            ",
      "2001:db8::284            ",
      "2001:db8::285            ",
      "2001:db8::286            ",
      "2001:db8::287            ",
      "2001:db8::288            ",
      "2001:db8::289            ",
      "2001:db8::28a            ",
      "2001:db8::28b            ",
      "2001:db8::28c            ",
      "2001:db8::28d            ",
      "2001:db8::28e            ",
      "2001:db8::28f            ",
      "2001:db8::290            ",
      "2001:db8::291            ",
      "2001:db8::292            ",
      "2001:db8::293            ",
      "2001:db8::294            ",
      "2001:db8::295            ",
      "2001:db8::296            ",
      "2001:db8::297            ",
      "2001:db8::298            ",
      "2001:db8::299            ",
      "2001:db8::29a            ",
      "2001:db8::29b            ",
      "2001:db8::29c            ",
      "2001:db8::29d            ",
      "2001:db8::29e            ",
      "2001:db8::29f            ",
      "2001:db8::2a0            ",
      "2001:db8::2a1            ",
      "2001:db8::2a2            ",
      "2001:db8::2a3            ",
      "2001:db8::2a4            ",
      "2001:db8::2a5            ",
      "2001:db8::2a6            ",
      "2001:db8::2a7            ",
      "2001:db8::2a8            ",
      "2001:db8::2a9            ",
      "2001:db8::2aa            ",
      "2001:db8::2ab            ",
      "2001:db8::2ac            ",
      "2001:db8::2ad            ",
      "2001:db8::2ae            ",
      "2001:db8::2af            ",
      "2001:db8::2b0            ",
      "2001:db8::2b1            ",
      "2001:db8::2b2            ",
      "2001:db8::2b3            ",
      "2001:db8::2b4            ",
      "2001:db8::2b5            ",
      "2001:db8::2b6            ",
      "2001:db8::2b7            ",
      "2001:db8::2b8            ",
      "2001:db8::2b9            ",
      "2001:db8::2ba            ",
      "2001:db8::2bb            ",
      "2001:db8::2bc            ",
      "2001:db8::2bd            ",
      "2001:db8::2be            ",
      "2001:db8::2bf            ",
      "2001:db8::2c0            ",
      "2001:db8::2c1            ",
      "2001:db8::2c2            ",
      "2001:db8::2c3            ",
      "2001:db8::2c4            ",
      "2001:db8::2c5            ",
      "2001:db8::2c6            ",
      "2001:db8::2c7            ",
      "2001:db8::2c8            ",
      "2001:db8::2c9            ",
      "2001:db8::2ca            ",
      "2001:db8::2cb            ",
      "2001:db8::2cc            ",
      "2001:db8::2cd            ",
      "2001:db8::2ce            ",
      "2001:db8::2cf            ",
      "2001:db8::2d0            ",
      "2001:db8::2d1            ",
      "2001:db8::2d2            ",
      "2001:db8::2d3            ",
      "2001:db8::2d4            ",
      "2001:db8::2d5            ",
      "2001:db8::2d6            ",
      "2001:db8::2d7            ",
      "2001:db8::2d8            ",
      "2001:db8::2d9            ",
      "2001:db8::2da            ",
      "2001:db8::2db            ",
      "2001:db8::2dc            ",
      "2001:db8::2dd            ",
      "2001:db8::2de            ",
      "2001:db8::2df            ",
      "2001:db8::2e0            ",
      "2001:db8::2e1            ",
      "2001:db8::2e2            ",
      "2001:db8::2e3            ",
      "2001:db8::2e4            ",
      "2001:db8::2e5            ",
      "2001:db8::2e6            ",
      "2001:db8::2e7            ",
      "2001:db8::2e8            ",
      "2001:db8::2e9            ",
      "2001:db8::2ea            ",
      "2001:db8::2eb            ",
      "2001:db8::2ec            ",
      "2001:db8::2ed            ",
      "2001:db8::2ee            ",
      "2001:db8::2ef            ",
      "2001:db8::2f0            ",
      "2001:db8::2f1            ",
      "2001:db8::2f2            ",
      "2001:db8::2f3            ",
      "2001:db8::2f4            ",
      "2001:db8::2f5            ",
      "2001:db8::2f6            ",
      "2001:db8::2f7            ",
      "2001:db8::2f8            ",
      "2001:db8::2f9            ",
      "2001:db8::2fa            ",
      "2001:db8::2fb            ",
      "2001:db8::2fc            ",
      "2001:db8::2fd            ",
      "2001:db8::2fe            ",
      "2001:db8::2ff            ",
      "2001:db8::300            ",
      "2001:db8::301            ",
      "2001:db8::302            ",
      "2001:db8::303            ",
      "2001:db8::304            ",
      "2001:db8::305            ",
      "2001:db8::306            ",
      "2001:db8::307            ",
      "2001:db8::308            ",
      "2001:db8::309            ",
      "2001:db8::30a            ",
      "2001:db8::30b            ",
      "2001:db8::30c            ",
      "2001:db8::30d            ",
      "2001:db8::30e            ",
      "2001:db8::30f            ",
      "2001:db8::310            ",
      "2001:db8::311            ",
      "2001:db8::312            ",
      "2001:db8::313            ",
      "2001:db8::314            ",
      "2001:db8::315            ",
      "2001:db8::316            ",
      "2001:db8::317            ",
      "2001:db8::318            ",
      "2001:db8::319            ",
      "2001:db8::31a            ",
      "2001:db8::31b            ",
      "2001:db8::31c            ",
      "2001:db8::31d            ",
      "2001:db8::31e            ",
      "2001:db8::31f            ",
      "2001:db8::320            ",
      "2001:db8::321            ",
      "2001:db8::322            ",
      "2001:db8::323            ",
      "2001:db8::324            ",
      "2001:db8::325            ",
      "2001:db8::326            ",
      "2001:db8::327            ",
      "2001:db8::328            ",
      "2001:db8::329            ",
      "2001:db8::32a            ",
      "2001:db8::32b            ",
      "2001:db8::32c            ",
      "2001:db8::32d            ",
      "2001:db8::32e            ",
      "2001:db8::32f            ",
      "2001:db8::330            ",
      "2001:db8::331            ",
      "2001:db8::332            ",
      "2001:db8::333            ",
      "2001:db8::334            ",
      "2001:db8::335            ",
      "2001:db8::336            ",
      "2001:db8::337            ",
      "2001:db8::338            ",
      "2001:db8::339            ",
      "2001:db8::33a            ",
      "2001:db8::33b            ",
      "2001:db8::33c            ",
      "2001:db8::33d            ",
      "2001:db8::33e            ",
      "2001:db8::33f            ",
      "2001:db8::340            ",
      "2001:db8::341            ",
      "2001:db8::342            ",
      "2001:db8::343            ",
      "2001:db8::344            ",
      "2001:db8::345            ",
      "2001:db8::346            ",
      "2001:db8::347            ",
      "2001:db8::348            ",
      "2001:db8::349            ",
      "2001:db8::34a            ",
      "2001:db8::34b            ",
      "2001:db8::34c            ",
      "2001:db8::34d            ",
      "2001:db8::34e            ",
      "2001:db8::34f            ",
      "2001:db8::350            ",
      "2001:db8::351            ",
      "2001:db8::352            ",
      "2001:db8::353            ",
      "2001:db8::354            ",
      "2001:db8::355            ",
      "2001:db8::356            ",
      "2001:db8::357            ",
      "2001:db8::358            ",
      "2001:db8::359            ",
      "2001:db8::35a            ",
      "2001:db8::35b            ",
      "2001:db8::35c            ",
      "2001:db8::35d            ",
      "2001:db8::35e            ",
      "2001:db8::35f            ",
      "2001:db8::360            ",
      "2001:db8::361            ",
      "2001:db8::362            ",
      "2001:db8::363            ",
      "2001:db8::364            ",
      "2001:db8::365            ",
      "2001:db8::366            ",
      "2001:db8::367            ",
      "2001:db8::368            ",
      "2001:db8::369            ",
      "2001:db8::36a            ",
      "2001:db8::36b            ",
      "2001:db8::36c            ",
      "2001:db8::36d            ",
      "2001:db8::36e            ",
      "2001:db8::36f            ",
      "2001:db8::370            ",
      "2001:db8::371            ",
      "2001:db8::372            ",
      "2001:db8::373            ",
      "2001:db8::374            ",
      "2001:db8::375            ",
      "2001:db8::376            ",
      "2001:db8::377            ",
      "2001:db8::378            ",
      "2001:db8::379            ",
      "2001:db8::37a            ",
      "2001:db8::37b            ",
      "2001:db8::37c            ",
      "2001:db8::37d            ",
      "2001:db8::37e            ",
      "2001:db8::37f            ",
      "2001:db8::380            ",
      "2001:db8::381            ",
      "2001:db8::382            ",
      "2001:db8::383            ",
      "2001:db8::384            ",
      "2001:db8::385            ",
      "2001:db8::386            ",
      "2001:db8::387            ",
      "2001:db8::388            ",
      "2001:db8::389            ",
      "2001:db8::38a            ",
      "2001:db8::38b            ",
      "2001:db8::38c            ",
      "2001:db8::38d            ",
      "2001:db8::38e            ",
      "2001:db8::38f            ",
      "2001:db8::390            ",
      "2001:db8::391            ",
      "2001:db8::392            ",
      "2001:db8::393            ",
      "2001:db8::394            ",
      "2001:db8::395            ",
      "2001:db8::396            ",
      "2001:db8::397            ",
      "2001:db8::398            ",
      "2001:db8::399            ",
      "2001:db8::39a            ",
      "2001:db8::39b            ",
      "2001:db8::39c            ",
      "2001:db8::39d            ",
      "2001:db8::39e            ",
      "2001:db8::39f            ",
      "2001:db8::3a0            ",
      "2001:db8::3a1            ",
      "2001:db8::3a2            ",
      "2001:db8::3a3            ",
      "2001:db8::3a4            ",
      "2001:db8::3a5            ",
      "2001:db8::3a6            ",
      "2001:db8::3a7            ",
      "2001:db8::3a8            ",
      "2001:db8::3a9            ",
      "2001:db8::3aa            ",
      "2001:db8::3ab            ",
      "2001:db8::3ac            ",
      "2001:db8::3ad            ",
      "2001:db8::3ae            ",
      "2001:db8::3af            ",
      "2001:db8::3b0            ",
      "2001:db8::3b1            ",
      "2001:db8::3b2            ",
      "2001:db8::3b3            ",
      "2001:db8::3b4            ",
      "2001:db8::3b5            ",
      "2001:db8::3b6            ",
      "2001:db8::3b7            ",
      "2001:db8::3b8            ",
      "2001:db8::3b9            ",
      "2001:db8::3ba            ",
      "2001:db8::3bb            ",
      "2001:db8::3bc            ",
      "2001:db8::3bd            ",
      "2001:db8::3be            ",
      "2001:db8::3bf            ",
      "2001:db8::3c0            ",
      "2001:db8::3c1            ",
      "2001:db8::3c2            ",
      "2001:db8::3c3            ",
      "2001:db8::3c4            ",
      "2001:db8::3c5            ",
      "2001:db8::3c6            ",
      "2001:db8::3c7            ",
      "2001:db8::3c8            ",
      "2001:db8::3c9            ",
      "2001:db8::3ca            ",
      "2001:db8::3cb            ",
      "2001:db8::3cc            ",
      "2001:db8::3cd            ",
      "2001:db8::3ce            ",
      "2001:db8::3cf            ",
      "2001:db8::3d0            ",
      "2001:db8::3d1            ",
      "2001:db8::3d2            ",
      "2001:db8::3d3            ",
      "2001:db8::3d4            ",
      "2001:db8::3d5            ",
      "2001:db8::3d6            ",
      "2001:db8::3d7            ",
      "2001:db8::3d8            ",
      "2001:db8::3d9            ",
      "2001:db8::3da            ",
      "2001:db8::3db            ",
      "2001:db8::3dc            ",
      "2001:db8::3dd            ",
      "2001:db8::3de            ",
      "2001:db8::3df            ",
      "2001:db8::3e0            ",
      "2001:db8::3e1            ",
      "2001:db8::3e2            ",
      "2001:db8::3e3            ",
      "2001:db8::3e4            ",
      "2001:db8::3e5            ",
      "2001:db8::3e6            ",
      "2001:db8::3e7            ",
      "2001:db8::3e8            ",
      "2001:db8::3e9            ",
      "2001:db8::3ea            ",
      "2001:db8::3eb            ",
      "2001:db8::3ec            ",
      "2001:db8::3ed            ",
      "2001:db8::3ee            ",
      "2001:db8::3ef            ",
      "2001:db8::3f0            ",
      "2001:db8::3f1            ",
      "2001:db8::3f2            ",
      "2001:db8::3f3            ",
      "2001:db8::3f4            ",
      "2001:db8::3f5            ",
      "2001:db8::3f6            ",
      "2001:db8::3f7            ",
      "2001:db8::3f8            ",
      "2001:db8::3f9            ",
      "2001:db8::3fa            ",
      "2001:db8::3fb            ",
      "2001:db8::3fc            ",
      "2001:db8::3fd            ",
      "2001:db8::3fe            ",
      "2001:db8::3ff            ",
      "2001:db8::400            ",
      "2001:db8::401            ",
      "2001:db8::402            ",
      "2001:db8::403            ",
      "2001:db8::404            ",
      "2001:db8::405            ",
      "2001:db8::406            ",
      "2001:db8::407            ",
      "2001:db8::408            ",
      "2001:db8::409            ",
      "2001:db8::40a            ",
      "2001:db8::40b            ",
      "2001:db8::40c            ",
      "2001:db8::40d            ",
      "2001:db8::40e            ",
      "2001:db8::40f            ",
      "2001:db8::410            ",
      "2001:db8::411            ",
      "2001:db8::412            ",
      "2001:db8::413            ",
      "2001:db8::414            ",
      "2001:db8::415            ",
      "2001:db8::416            ",
      "2001:db8::417            ",
      "2001:db8::418            ",
      "2001:db8::419            ",
      "2001:db8::41a            ",
      "2001:db8::41b            ",
      "2001:db8::41c            ",
      "2001:db8::41d            ",
      "2001:db8::41e            ",
      "2001:db8::41f            ",
      "2001:db8::420            ",
      "2001:db8::421            ",
      "2001:db8::422            ",
      "2001:db8::423            ",
      "2001:db8::424            ",
      "2001:db8::425            ",
      "2001:db8::426            ",
      "2001:db8::427            ",
      "2001:db8::428            ",
      "2001:db8::429            ",
      "2001:db8::42a            ",
      "2001:db8::42b            ",
      "2001:db8::42c            ",
      "2001:db8::42d            ",
      "2001:db8::42e            ",
      "2001:db8::42f            ",
      "2001:db8::430            ",
      "2001:db8::431            ",
      "2001:db8::432            ",
      "2001:db8::433            ",
      "2001:db8::434            ",
      "2001:db8::435            ",
      "2001:db8::436            ",
      "2001:db8::437            ",
      "2001:db8::438            ",
      "2001:db8::439            ",
      "2001:db8::43a            ",
      "2001:db8::43b            ",
      "2001:db8::43c            ",
      "2001:db8::43d            ",
      "2001:db8::43e            ",
      "2001:db8::43f            ",
      "2001:db8::440            ",
      "2001:db8::441            ",
      "2001:db8::442            ",
      "2001:db8::443            ",
      "2001:db8::444            ",
      "2001:db8::445            ",
      "2001:db8::446            ",
      "2001:db8::447            ",
      "2001:db8::448            ",
      "2001:db8::449            ",
      "2001:db8::44a            ",
      "2001:db8::44b            ",
      "2001:db8::44c            ",
      "2001:db8::44d            ",
      "2001:db8::44e            ",
      "2001:db8::44f            ",
      "2001:db8::450            ",
      "2001:db8::451            ",
      "2001:db8::452            ",
      "2001:db8::453            ",
      "2001:db8::454            ",
      "2001:db8::455            ",
      "2001:db8::456            ",
      "2001:db8::457            ",
      "2001:db8::458            ",
      "2001:db8::459            ",
      "2001:db8::45a            ",
      "2001:db8::45b            ",
      "2001:db8::45c            ",
      "2001:db8::45d            ",
      "2001:db8::45e            ",
      "2001:db8::45f            ",
      "2001:db8::460            ",
      "2001:db8::461            ",
      "2001:db8::462            ",
      "2001:db8::463            ",
      "2001:db8::464            ",
      "2001:db8::465            ",
      "2001:db8::466            ",
      "2001:db8::467            ",
      "2001:db8::468            ",
      "2001:db8::469            ",
      "2001:db8::46a            ",
      "2001:db8::46b            ",
      "2001:db8::46c            ",
      "2001:db8::46d            ",
      "2001:db8::46e            ",
      "2001:db8::46f            ",
      "2001:db8::470            ",
      "2001:db8::471            ",
      "2001:db8::472            ",
      "2001:db8::473            ",
      "2001:db8::474            ",
      "2001:db8::475            ",
      "2001:db8::476            ",
      "2001:db8::477            ",
      "2001:db8::478            ",
      "2001:db8::479            ",
      "2001:db8::47a            ",
      "2001:db8::47b            ",
      "2001:db8::47c            ",
      "2001:db8::47d            ",
      "2001:db8::47e            ",
      "2001:db8::47f            ",
      "2001:db8::480            ",
      "2001:db8::481            ",
      "2001:db8::482            ",
      "2001:db8::483            ",
      "2001:db8::484            ",
      "2001:db8::485            ",
      "2001:db8::486            ",
      "2001:db8::487            ",
      "2001:db8::488            ",
      "2001:db8::489            ",
      "2001:db8::48a            ",
      "2001:db8::48b            ",
      "2001:db8::48c            ",
      "2001:db8::48d            ",
      "2001:db8::48e            ",
      "2001:db8::48f            ",
      "2001:db8::490            ",
      "2001:db8::491            ",
      "2001:db8::492            ",
      "2001:db8::493            ",
      "2001:db8::494            ",
      "2001:db8::495            ",
      "2001:db8::496            ",
      "2001:db8::497            ",
      "2001:db8::498            ",
      "2001:db8::499            ",
      "2001:db8::49a            ",
      "2001:db8::49b            ",
      "2001:db8::49c            ",
      "2001:db8::49d            ",
      "2001:db8::49e            ",
      "2001:db8::49f            ",
      "2001:db8::4a0            ",
      "2001:db8::4a1            ",
      "2001:db8::4a2            ",
      "2001:db8::4a3            ",
      "2001:db8::4a4            ",
      "2001:db8::4a5            ",
      "2001:db8::4a6            ",
      "2001:db8::4a7            ",
      "2001:db8::4a8            ",
      "2001:db8::4a9            ",
      "2001:db8::4aa            ",
      "2001:db8::4ab            ",
      "2001:db8::4ac            ",
      "2001:db8::4ad            ",
      "2001:db8::4ae            ",
      "2001:db8::4af            ",
      "2001:db8::4b0            ",
      "2001:db8::4b1            ",
      "2001:db8::4b2            ",
      "2001:db8::4b3            ",
      "2001:db8::4b4            ",
      "2001:db8::4b5            ",
      "2001:db8::4b6            ",
      "2001:db8::4b7            ",
      "2001:db8::4b8            ",
      "2001:db8::4b9            ",
      "2001:db8::4ba            ",
      "2001:db8::4bb            ",
      "2001:db8::4bc            ",
      "2001:db8::4bd            ",
      "2001:db8::4be            ",
      "2001:db8::4bf            ",
      "2001:db8::4c0            ",
      "2001:db8::4c1            ",
      "2001:db8::4c2            ",
      "2001:db8::4c3            ",
      "2001:db8::4c4            ",
      "2001:db8::4c5            ",
      "2001:db8::4c6            ",
      "2001:db8::4c7            ",
      "2001:db8::4c8            ",
      "2001:db8::4c9            ",
      "2001:db8::4ca            ",
      "2001:db8::4cb            ",
      "2001:db8::4cc            ",
      "2001:db8::4cd            ",
      "2001:db8::4ce            ",
      "2001:db8::4cf            ",
      "2001:db8::4d0            ",
      "2001:db8::4d1            ",
      "2001:db8::4d2            ",
      "2001:db8::4d3            ",
      "2001:db8::4d4            ",
      "2001:db8::4d5            ",
      "2001:db8::4d6            ",
      "2001:db8::4d7            ",
      "2001:db8::4d8            ",
      "2001:db8::4d9            ",
      "2001:db8::4da            ",
      "2001:db8::4db            ",
      "2001:db8::4dc            ",
      "2001:db8::4dd            ",
      "2001:db8::4de            ",
      "2001:db8::4df            ",
      "2001:db8::4e0            ",
      "2001:db8::4e1            ",
      "2001:db8::4e2            ",
      "2001:db8::4e3            ",
      "2001:db8::4e4            ",
      "2001:db8::4e5            ",
      "2001:db8::4e6            ",
      "2001:db8::4e7            ",
      "2001:db8::4e8            ",
      "2001:db8::4e9            ",
      "2001:db8::4ea            ",
      "2001:db8::4eb            ",
      "2001:db8::4ec            ",
      "2001:db8::4ed            ",
      "2001:db8::4ee            ",
      "2001:db8::4ef            ",
      "2001:db8::4f0            ",
      "2001:db8::4f1            ",
      "2001:db8::4f2            ",
      "2001:db8::4f3            ",
      "2001:db8::4f4            ",
      "2001:db8::4f5            ",
      "2001:db8::4f6            ",
      "2001:db8::4f7            ",
      "2001:db8::4f8            ",
      "2001:db8::4f9            ",
      "2001:db8::4fa            ",
      "2001:db8::4fb            ",
      "2001:db8::4fc            ",
      "2001:db8::4fd            ",
      "2001:db8::4fe            ",
      "2001:db8::4ff            ",
      "2001:db8::500            ",
      "2001:db8::501            ",
      "2001:db8::502            ",
      "2001:db8::503            ",
      "2001:db8::504            ",
      "2001:db8::505            ",
      "2001:db8::506            ",
      "2001:db8::507            ",
      "2001:db8::508            ",
      "2001:db8::509            ",
      "2001:db8::50a            ",
      "2001:db8::50b            ",
      "2001:db8::50c            ",
      "2001:db8::50d            ",
      "2001:db8::50e            ",
      "2001:db8::50f            ",
      "2001:db8::510            ",
      "2001:db8::511            ",
      "2001:db8::512            ",
      "2001:db8::513            ",
      "2001:db8::514            ",
      "2001:db8::515            ",
      "2001:db8::516            ",
      "2001:db8::517            ",
      "2001:db8::518            ",
      "2001:db8::519            ",
      "2001:db8::51a            ",
      "2001:db8::51b            ",
      "2001:db8::51c            ",
      "2001:db8::51d            ",
      "2001:db8::51e            ",
      "2001:db8::51f            ",
      "2001:db8::520            ",
      "2001:db8::521            ",
      "2001:db8::522            ",
      "2001:db8::523            ",
      "2001:db8::524            ",
      "2001:db8::525            ",
      "2001:db8::526            ",
      "2001:db8::527            ",
      "2001:db8::528            ",
      "2001:db8::529            ",
      "2001:db8::52a            ",
      "2001:db8::52b            ",
      "2001:db8::52c            ",
      "2001:db8::52d            ",
      "2001:db8::52e            ",
      "2001:db8::52f            ",
      "2001:db8::530            ",
      "2001:db8::531            ",
      "2001:db8::532            ",
      "2001:db8::533            ",
      "2001:db8::534            ",
      "2001:db8::535            ",
      "2001:db8::536            ",
      "2001:db8::537            ",
      "2001:db8::538            ",
      "2001:db8::539            ",
      "2001:db8::53a            ",
      "2001:db8::53b            ",
      "2001:db8::53c            ",
      "2001:db8::53d            ",
      "2001:db8::53e            ",
      "2001:db8::53f            ",
      "2001:db8::540            ",
      "2001:db8::541            ",
      "2001:db8::542            ",
      "2001:db8::543            ",
      "2001:db8::544            ",
      "2001:db8::545            ",
      "2001:db8::546            ",
      "2001:db8::547            ",
      "2001:db8::548            ",
      "2001:db8::549            ",
      "2001:db8::54a            ",
      "2001:db8::54b            ",
      "2001:db8::54c            ",
      "2001:db8::54d            ",
      "2001:db8::54e            ",
      "2001:db8::54f            ",
      "2001:db8::550            ",
      "2001:db8::551            ",
      "2001:db8::552            ",
      "2001:db8::553            ",
      "2001:db8::554            ",
      "2001:db8::555            ",
      "2001:db8::556            ",
      "2001:db8::557            ",
      "2001:db8::558            ",
      "2001:db8::559            ",
      "2001:db8::55a            ",
      "2001:db8::55b            ",
      "2001:db8::55c            ",
      "2001:db8::55d            ",
      "2001:db8::55e            ",
      "2001:db8::55f            ",
      "2001:db8::560            ",
      "2001:db8::561            ",
      "2001:db8::562            ",
      "2001:db8::563            ",
      "2001:db8::564            ",
      "2001:db8::565            ",
      "2001:db8::566            ",
      "2001:db8::567            ",
      "2001:db8::568            ",
      "2001:db8::569            ",
      "2001:db8::56a            ",
      "2001:db8::56b            ",
      "2001:db8::56c            ",
      "2001:db8::56d            ",
      "2001:db8::56e            ",
      "2001:db8::56f            ",
      "2001:db8::570            ",
      "2001:db8::571            ",
      "2001:db8::572            ",
      "2001:db8::573            ",
      "2001:db8::574            ",
      "2001:db8::575            ",
      "2001:db8::576            ",
      "2001:db8::577            ",
      "2001:db8::578            ",
      "2001:db8::579            ",
      "2001:db8::57a            ",
      "2001:db8::57b            ",
      "2001:db8::57c            ",
      "2001:db8::57d            ",
      "2001:db8::57e            ",
      "2001:db8::57f            ",
      "2001:db8::580            ",
      "2001:db8::581            ",
      "2001:db8::582            ",
      "2001:db8::583            ",
      "2001:db8::584            ",
      "2001:db8::585            ",
      "2001:db8::586            ",
      "2001:db8::587            ",
      "2001:db8::588            ",
      "2001:db8::589            ",
      "2001:db8::58a            ",
      "2001:db8::58b            ",
      "2001:db8::58c            ",
      "2001:db8::58d            ",
      "2001:db8::58e            ",
      "2001:db8::58f            ",
      "2001:db8::590            ",
      "2001:db8::591            ",
      "2001:db8::592            ",
      "2001:db8::593            ",
      "2001:db8::594            ",
      "2001:db8::595            ",
      "2001:db8::596            ",
      "2001:db8::597            ",
      "2001:db8::598            ",
      "2001:db8::599            ",
      "2001:db8::59a            ",
      "2001:db8::59b            ",
      "2001:db8::59c            ",
      "2001:db8::59d            ",
      "2001:db8::59e            ",
      "2001:db8::59f            ",
      "2001:db8::5a0            ",
      "2001:db8::5a1            ",
      "2001:db8::5a2            ",
      "2001:db8::5a3            ",
      "2001:db8::5a4            ",
      "2001:db8::5a5            ",
      "2001:db8::5a6            ",
      "2001:db8::5a7            ",
      "2001:db8::5a8            ",
      "2001:db8::5a9            ",
      "2001:db8::5aa            ",
      "2001:db8::5ab            ",
      "2001:db8::5ac            ",
      "2001:db8::5ad            ",
      "2001:db8::5ae            ",
      "2001:db8::5af            ",
      "2001:db8::5b0            ",
      "2001:db8::5b1            ",
      "2001:db8::5b2            ",
      "2001:db8::5b3            ",
      "2001:db8::5b4            ",
      "2001:db8::5b5            ",
      "2001:db8::5b6            ",
      "2001:db8::5b7            ",
      "2001:db8::5b8            ",
      "2001:db8::5b9            ",
      "2001:db8::5ba            ",
      "2001:db8::5bb            ",
      "2001:db8::5bc            ",
      "2001:db8::5bd            ",
      "2001:db8::5be            ",
      "2001:db8::5bf            ",
      "2001:db8::5c0            ",
      "2001:db8::5c1            ",
      "2001:db8::5c2            ",
      "2001:db8::5c3            ",
      "2001:db8::5c4            ",
      "2001:db8::5c5            ",
      "2001:db8::5c6            ",
      "2001:db8::5c7            ",
      "2001:db8::5c8            ",
      "2001:db8::5c9            ",
      "2001:db8::5ca            ",
      "2001:db8::5cb            ",
      "2001:db8::5cc            ",
      "2001:db8::5cd            ",
      "2001:db8::5ce            ",
      "2001:db8::5cf            ",
      "2001:db8::5d0            ",
      "2001:db8::5d1            ",
      "2001:db8::5d2            ",
      "2001:db8::5d3            ",
      "2001:db8::5d4            ",
      "2001:db8::5d5            ",
      "2001:db8::5d6            ",
      "2001:db8::5d7            ",
      "2001:db8::5d8            ",
      "2001:db8::5d9            ",
      "2001:db8::5da            ",
      "2001:db8::5db            ",
      "2001:db8::5dc            ",
      "2001:db8::5dd            ",
      "2001:db8::5de            ",
      "2001:db8::5df            ",
      "2001:db8::5e0            ",
      "2001:db8::5e1            ",
      "2001:db8::5e2            ",
      "2001:db8::5e3            ",
      "2001:db8::5e4            ",
      "2001:db8::5e5            ",
      "2001:db8::5e6            ",
      "2001:db8::5e7            ",
      "2001:db8::5e8            ",
      "2001:db8::5e9            ",
      "2001:db8::5ea            ",
      "2001:db8::5eb            ",
      "2001:db8::5ec            ",
      "2001:db8::5ed            ",
      "2001:db8::5ee            ",
      "2001:db8::5ef            ",
      "2001:db8::5f0            ",
      "2001:db8::5f1            ",
      "2001:db8::5f2            ",
      "2001:db8::5f3            ",
      "2001:db8::5f4            ",
      "2001:db8::5f5            ",
      "2001:db8::5f6            ",
      "2001:db8::5f7            ",
      "2001:db8::5f8            ",
      "2001:db8::5f9            ",
      "2001:db8::5fa            ",
      "2001:db8::5fb            ",
      "2001:db8::5fc            ",
      "2001:db8::5fd            ",
      "2001:db8::5fe            ",
      "2001:db8::5ff            ",
      "2001:db8::600            ",
      "2001:db8::601            ",
      "2001:db8::602            ",
      "2001:db8::603            ",
      "2001:db8::604            ",
      "2001:db8::605            ",
      "2001:db8::606            ",
      "2001:db8::607            ",
      "2001:db8::608            ",
      "2001:db8::609            ",
      "2001:db8::60a            ",
      "2001:db8::60b            ",
      "2001:db8::60c            ",
      "2001:db8::60d            ",
      "2001:db8::60e            ",
      "2001:db8::60f            ",
      "2001:db8::610            ",
      "2001:db8::611            ",
      "2001:db8::612            ",
      "2001:db8::613            ",
      "2001:db8::614            ",
      "2001:db8::615            ",
      "2001:db8::616            ",
      "2001:db8::617            ",
      "2001:db8::618            ",
      "2001:db8::619            ",
      "2001:db8::61a            ",
      "2001:db8::61b            ",
      "2001:db8::61c            ",
      "2001:db8::61d            ",
      "2001:db8::61e            ",
      "2001:db8::61f            ",
      "2001:db8::620            ",
      "2001:db8::621            ",
      "2001:db8::622            ",
      "2001:db8::623            ",
      "2001:db8::624            ",
      "2001:db8::625            ",
      "2001:db8::626            ",
      "2001:db8::627            ",
      "2001:db8::628            ",
      "2001:db8::629            ",
      "2001:db8::62a            ",
      "2001:db8::62b            ",
      "2001:db8::62c            ",
      "2001:db8::62d            ",
      "2001:db8::62e            ",
      "2001:db8::62f            ",
      "2001:db8::630            ",
      "2001:db8::631            ",
      "2001:db8::632            ",
      "2001:db8::633            ",
      "2001:db8::634            ",
      "2001:db8::635            ",
      "2001:db8::636            ",
      "2001:db8::637            ",
      "2001:db8::638            ",
      "2001:db8::639            ",
      "2001:db8::63a            ",
      "2001:db8::63b            ",
      "2001:db8::63c            ",
      "2001:db8::63d            ",
      "2001:db8::63e            ",
      "2001:db8::63f            ",
      "2001:db8::640            ",
      "2001:db8::641            ",
      "2001:db8::642            ",
      "2001:db8::643            ",
      "2001:db8::644            ",
      "2001:db8::645            ",
      "2001:db8::646            ",
      "2001:db8::647            ",
      "2001:db8::648            ",
      "2001:db8::649            ",
      "2001:db8::64a            ",
      "2001:db8::64b            ",
      "2001:db8::64c            ",
      "2001:db8::64d            ",
      "2001:db8::64e            ",
      "2001:db8::64f            ",
      "2001:db8::650            ",
      "2001:db8::651            ",
      "2001:db8::652            ",
      "2001:db8::653            ",
      "2001:db8::654            ",
      "2001:db8::655            ",
      "2001:db8::656            ",
      "2001:db8::657            ",
      "2001:db8::658            ",
      "2001:db8::659            ",
      "2001:db8::65a            ",
      "2001:db8::65b            ",
      "2001:db8::65c            ",
      "2001:db8::65d            ",
      "2001:db8::65e            ",
      "2001:db8::65f            ",
      "2001:db8::660            ",
      "2001:db8::661            ",
      "2001:db8::662            ",
      "2001:db8::663            ",
      "2001:db8::664            ",
      "2001:db8::665            ",
      "2001:db8::666            ",
      "2001:db8::667            ",
      "2001:db8::668            ",
      "2001:db8::669            ",
      "2001:db8::66a            ",
      "2001:db8::66b            ",
      "2001:db8::66c            ",
      "2001:db8::66d            ",
      "2001:db8::66e            ",
      "2001:db8::66f            ",
      "2001:db8::670            ",
      "2001:db8::671            ",
      "2001:db8::672            ",
      "2001:db8::673            ",
      "2001:db8::674            ",
      "2001:db8::675            ",
      "2001:db8::676            ",
      "2001:db8::677            ",
      "2001:db8::678            ",
      "2001:db8::679            ",
      "2001:db8::67a            ",
      "2001:db8::67b            ",
      "2001:db8::67c            ",
      "2001:db8::67d            ",
      "2001:db8::67e            ",
      "2001:db8::67f            ",
      "2001:db8::680            ",
      "2001:db8::681            ",
      "2001:db8::682            ",
      "2001:db8::683            ",
      "2001:db8::684            ",
      "2001:db8::685            ",
      "2001:db8::686            ",
      "2001:db8::687            ",
      "2001:db8::688            ",
      "2001:db8::689            ",
      "2001:db8::68a            ",
      "2001:db8::68b            ",
      "2001:db8::68c            ",
      "2001:db8::68d            ",
      "2001:db8::68e            ",
      "2001:db8::68f            ",
      "2001:db8::690            ",
      "2001:db8::691            ",
      "2001:db8::692            ",
      "2001:db8::693            ",
      "2001:db8::694            ",
      "2001:db8::695            ",
      "2001:db8::696            ",
      "2001:db8::697            ",
      "2001:db8::698            ",
      "2001:db8::699            ",
      "2001:db8::69a            ",
      "2001:db8::69b            ",
      "2001:db8::69c            ",
      "2001:db8::69d            ",
      "2001:db8::69e            ",
      "2001:db8::69f            ",
      "2001:db8::6a0            ",
      "2001:db8::6a1            ",
      "2001:db8::6a2            ",
      "2001:db8::6a3            ",
      "2001:db8::6a4            ",
      "2001:db8::6a5            ",
      "2001:db8::6a6            ",
      "2001:db8::6a7            ",
      "2001:db8::6a8            ",
      "2001:db8::6a9            ",
      "2001:db8::6aa            ",
      "2001:db8::6ab            ",
      "2001:db8::6ac            ",
      "2001:db8::6ad            ",
      "2001:db8::6ae            ",
      "2001:db8::6af            ",
      "2001:db8::6b0            ",
      "2001:db8::6b1            ",
      "2001:db8::6b2            ",
      "2001:db8::6b3            ",
      "2001:db8::6b4            ",
      "2001:db8::6b5            ",
      "2001:db8::6b6            ",
      "2001:db8::6b7            ",
      "2001:db8::6b8            ",
      "2001:db8::6b9            ",
      "2001:db8::6ba            ",
      "2001:db8::6bb            ",
      "2001:db8::6bc            ",
      "2001:db8::6bd            ",
      "2001:db8::6be            ",
      "2001:db8::6bf            ",
      "2001:db8::6c0            ",
      "2001:db8::6c1            ",
      "2001:db8::6c2            ",
      "2001:db8::6c3            ",
      "2001:db8::6c4            ",
      "2001:db8::6c5            ",
      "2001:db8::6c6            ",
      "2001:db8::6c7            ",
      "2001:db8::6c8            ",
      "2001:db8::6c9            ",
      "2001:db8::6ca            ",
      "2001:db8::6cb            ",
      "2001:db8::6cc            ",
      "2001:db8::6cd            ",
      "2001:db8::6ce            ",
      "2001:db8::6cf            ",
      "2001:db8::6d0            ",
      "2001:db8::6d1            ",
      "2001:db8::6d2            ",
      "2001:db8::6d3            ",
      "2001:db8::6d4            ",
      "2001:db8::6d5            ",
      "2001:db8::6d6            ",
      "2001:db8::6d7            ",
      "2001:db8::6d8            ",
      "2001:db8::6d9            ",
      "2001:db8::6da            ",
      "2001:db8::6db            ",
      "2001:db8::6dc            ",
      "2001:db8::6dd            ",
      "2001:db8::6de            ",
      "2001:db8::6df            ",
      "2001:db8::6e0            ",
      "2001:db8::6e1            ",
      "2001:db8::6e2            ",
      "2001:db8::6e3            ",
      "2001:db8::6e4            ",
      "2001:db8::6e5            ",
      "2001:db8::6e6            ",
      "2001:db8::6e7            ",
      "2001:db8::6e8            ",
      "2001:db8::6e9            ",
      "2001:db8::6ea            ",
      "2001:db8::6eb            ",
      "2001:db8::6ec            ",
      "2001:db8::6ed            ",
      "2001:db8::6ee            ",
      "2001:db8::6ef            ",
      "2001:db8::6f0            ",
      "2001:db8::6f1            ",
      "2001:db8::6f2            ",
      "2001:db8::6f3            ",
      "2001:db8::6f4            ",
      "2001:db8::6f5            ",
      "2001:db8::6f6            ",
      "2001:db8::6f7            ",
      "2001:db8::6f8            ",
      "2001:db8::6f9            ",
      "2001:db8::6fa            ",
      "2001:db8::6fb            ",
      "2001:db8::6fc            ",
      "2001:db8::6fd            ",
      "2001:db8::6fe            ",
      "2001:db8::6ff            ",
      "2001:db8::700            ",
      "2001:db8::701            ",
      "2001:db8::702            ",
      "2001:db8::703            ",
      "2001:db8::704            ",
      "2001:db8::705            ",
      "2001:db8::706            ",
      "2001:db8::707            ",
      "2001:db8::708            ",
      "2001:db8::709            ",
      "2001:db8::70a            ",
      "2001:db8::70b            ",
      "2001:db8::70c            ",
      "2001:db8::70d            ",
      "2001:db8::70e            ",
      "2001:db8::70f            ",
      "2001:db8::710            ",
      "2001:db8::711            ",
      "2001:db8::712            ",
      "2001:db8::713            ",
      "2001:db8::714            ",
      "2001:db8::715            ",
      "2001:db8::716            ",
      "2001:db8::717            ",
      "2001:db8::718            ",
      "2001:db8::719            ",
      "2001:db8::71a            ",
      "2001:db8::71b            ",
      "2001:db8::71c            ",
      "2001:db8::71d            ",
      "2001:db8::71e            ",
      "2001:db8::71f            ",
      "2001:db8::720            ",
      "2001:db8::721            ",
      "2001:db8::722            ",
      "2001:db8::723            ",
      "2001:db8::724            ",
      "2001:db8::725            ",
      "2001:db8::726            ",
      "2001:db8::727            ",
      "2001:db8::728            ",
      "2001:db8::729            ",
      "2001:db8::72a            ",
      "2001:db8::72b            ",
      "2001:db8::72c            ",
      "2001:db8::72d            ",
      "2001:db8::72e            ",
      "2001:db8::72f            ",
      "2001:db8::730            ",
      "2001:db8::731            ",
      "2001:db8::732            ",
      "2001:db8::733            ",
      "2001:db8::734            ",
      "2001:db8::735            ",
      "2001:db8::736            ",
      "2001:db8::737            ",
      "2001:db8::738            ",
      "2001:db8::739            ",
      "2001:db8::73a            ",
      "2001:db8::73b            ",
      "2001:db8::73c            ",
      "2001:db8::73d            ",
      "2001:db8::73e            ",
      "2001:db8::73f            ",
      "2001:db8::740            ",
      "2001:db8::741            ",
      "2001:db8::742            ",
      "2001:db8::743            ",
      "2001:db8::744            ",
      "2001:db8::745            ",
      "2001:db8::746            ",
      "2001:db8::747            ",
      "2001:db8::748            ",
      "2001:db8::749            ",
      "2001:db8::74a            ",
      "2001:db8::74b            ",
      "2001:db8::74c            ",
      "2001:db8::74d            ",
      "2001:db8::74e            ",
      "2001:db8::74f            ",
      "2001:db8::750            ",
      "2001:db8::751            ",
      "2001:db8::752            ",
      "2001:db8::753            ",
      "2001:db8::754            ",
      "2001:db8::755            ",
      "2001:db8::756            ",
      "2001:db8::757            ",
      "2001:db8::758            ",
      "2001:db8::759            ",
      "2001:db8::75a            ",
      "2001:db8::75b            ",
      "2001:db8::75c            ",
      "2001:db8::75d            ",
      "2001:db8::75e            ",
      "2001:db8::75f            ",
      "2001:db8::760            ",
      "2001:db8::761            ",
      "2001:db8::762            ",
      "2001:db8::763            ",
      "2001:db8::764            ",
      "2001:db8::765            ",
      "2001:db8::766            ",
      "2001:db8::767            ",
      "2001:db8::768            ",
      "2001:db8::769            ",
      "2001:db8::76a            ",
      "2001:db8::76b            ",
      "2001:db8::76c            ",
      "2001:db8::76d            ",
      "2001:db8::76e            ",
      "2001:db8::76f            ",
      "2001:db8::770            ",
      "2001:db8::771            ",
      "2001:db8::772            ",
      "2001:db8::773            ",
      "2001:db8::774            ",
      "2001:db8::775            ",
      "2001:db8::776            ",
      "2001:db8::777            ",
      "2001:db8::778            ",
      "2001:db8::779            ",
      "2001:db8::77a            ",
      "2001:db8::77b            ",
      "2001:db8::77c            ",
      "2001:db8::77d            ",
      "2001:db8::77e            ",
      "2001:db8::77f            ",
      "2001:db8::780            ",
      "2001:db8::781            ",
      "2001:db8::782            ",
      "2001:db8::783            ",
      "2001:db8::784            ",
      "2001:db8::785            ",
      "2001:db8::786            ",
      "2001:db8::787            ",
      "2001:db8::788            ",
      "2001:db8::789            ",
      "2001:db8::78a            ",
      "2001:db8::78b            ",
      "2001:db8::78c            ",
      "2001:db8::78d            ",
      "2001:db8::78e            ",
      "2001:db8::78f            ",
      "2001:db8::790            ",
      "2001:db8::791            ",
      "2001:db8::792            ",
      "2001:db8::793            ",
      "2001:db8::794            ",
      "2001:db8::795            ",
      "2001:db8::796            ",
      "2001:db8::797            ",
      "2001:db8::798            ",
      "2001:db8::799            ",
      "2001:db8::79a            ",
      "2001:db8::79b            ",
      "2001:db8::79c            ",
      "2001:db8::79d            ",
      "2001:db8::79e            ",
      "2001:db8::79f            ",
      "2001:db8::7a0            ",
      "2001:db8::7a1            ",
      "2001:db8::7a2            ",
      "2001:db8::7a3            ",
      "2001:db8::7a4            ",
      "2001:db8::7a5            ",
      "2001:db8::7a6            ",
      "2001:db8::7a7            ",
      "2001:db8::7a8            ",
      "2001:db8::7a9            ",
      "2001:db8::7aa            ",
      "2001:db8::7ab            ",
      "2001:db8::7ac            ",
      "2001:db8::7ad            ",
      "2001:db8::7ae            ",
      "2001:db8::7af            ",
      "2001:db8::7b0            ",
      "2001:db8::7b1            ",
      "2001:db8::7b2            ",
      "2001:db8::7b3            ",
      "2001:db8::7b4            ",
      "2001:db8::7b5            ",
      "2001:db8::7b6            ",
      "2001:db8::7b7            ",
      "2001:db8::7b8            ",
      "2001:db8::7b9            ",
      "2001:db8::7ba            ",
      "2001:db8::7bb            ",
      "2001:db8::7bc            ",
      "2001:db8::7bd            ",
      "2001:db8::7be            ",
      "2001:db8::7bf            ",
      "2001:db8::7c0            ",
      "2001:db8::7c1            ",
      "2001:db8::7c2            ",
      "2001:db8::7c3            ",
      "2001:db8::7c4            ",
      "2001:db8::7c5            ",
      "2001:db8::7c6            ",
      "2001:db8::7c7            ",
      "2001:db8::7c8            ",
      "2001:db8::7c9            ",
      "2001:db8::7ca            ",
      "2001:db8::7cb            ",
      "2001:db8::7cc            ",
      "2001:db8::7cd            ",
      "2001:db8::7ce            ",
      "2001:db8::7cf            ",
      "2001:db8::7d0            ",
      "2001:db8::7d1            ",
      "2001:db8::7d2            ",
      "2001:db8::7d3            ",
      "2001:db8::7d4            ",
      "2001:db8::7d5            ",
      "2001:db8::7d6            ",
      "2001:db8::7d7            ",
      "2001:db8::7d8            ",
      "2001:db8::7d9            ",
      "2001:db8::7da            ",
      "2001:db8::7db            ",
      "2001:db8::7dc            ",
      "2001:db8::7dd            ",
      "2001:db8::7de            ",
      "2001:db8::7df            ",
      "2001:db8::7e0            ",
      "2001:db8::7e1            ",
      "2001:db8::7e2            ",
      "2001:db8::7e3            ",
      "2001:db8::7e4            ",
      "2001:db8::7e5            ",
      "2001:db8::7e6            ",
      "2001:db8::7e7            ",
      "2001:db8::7e8            ",
      "2001:db8::7e9            ",
      "2001:db8::7ea            ",
      "2001:db8::7eb            ",
      "2001:db8::7ec            ",
      "2001:db8::7ed            ",
      "2001:db8::7ee            ",
      "2001:db8::7ef            ",
      "2001:db8::7f0            ",
      "2001:db8::7f1            ",
      "2001:db8::7f2            ",
      "2001:db8::7f3            ",
      "2001:db8::7f4            ",
      "2001:db8::7f5            ",
      "2001:db8::7f6            ",
      "2001:db8::7f7            ",
      "2001:db8::7f8            ",
      "2001:db8::7f9            ",
      "2001:db8::7fa            ",
      "2001:db8::7fb            ",
      "2001:db8::7fc            ",
      "2001:db8::7fd            ",
      "2001:db8::7fe            ",
      "2001:db8::7ff            ",
      "2001:db8::800            ",
      "2001:db8::801            ",
      "2001:db8::802            ",
      "2001:db8::803            ",
      "2001:db8::804            ",
      "2001:db8::805            ",
      "2001:db8::806            ",
      "2001:db8::807            ",
      "2001:db8::808            ",
      "2001:db8::809            ",
      "2001:db8::80a            ",
      "2001:db8::80b            ",
      "2001:db8::80c            ",
      "2001:db8::80d            ",
      "2001:db8::80e            ",
      "2001:db8::80f            ",
      "2001:db8::810            ",
      "2001:db8::811            ",
      "2001:db8::812            ",
      "2001:db8::813            ",
      "2001:db8::814            ",
      "2001:db8::815            ",
      "2001:db8::816            ",
      "2001:db8::817            ",
      "2001:db8::818            ",
      "2001:db8::819            ",
      "2001:db8::81a            ",
      "2001:db8::81b            ",
      "2001:db8::81c            ",
      "2001:db8::81d            ",
      "2001:db8::81e            ",
      "2001:db8::81f            ",
      "2001:db8::820            ",
      "2001:db8::821            ",
      "2001:db8::822            ",
      "2001:db8::823            ",
      "2001:db8::824            ",
      "2001:db8::825            ",
      "2001:db8::826            ",
      "2001:db8::827            ",
      "2001:db8::828            ",
      "2001:db8::829            ",
      "2001:db8::82a            ",
      "2001:db8::82b            ",
      "2001:db8::82c            ",
      "2001:db8::82d            ",
      "2001:db8::82e            ",
      "2001:db8::82f            ",
      "2001:db8::830            ",
      "2001:db8::831            ",
      "2001:db8::832            ",
      "2001:db8::833            ",
      "2001:db8::834            ",
      "2001:db8::835            ",
      "2001:db8::836            ",
      "2001:db8::837            ",
      "2001:db8::838            ",
      "2001:db8::839            ",
      "2001:db8::83a            ",
      "2001:db8::83b            ",
      "2001:db8::83c            ",
      "2001:db8::83d            ",
      "2001:db8::83e            ",
      "2001:db8::83f            ",
      "2001:db8::840            ",
      "2001:db8::841            ",
      "2001:db8::842            ",
      "2001:db8::843            ",
      "2001:db8::844            ",
      "2001:db8::845            ",
      "2001:db8::846            ",
      "2001:db8::847            ",
      "2001:db8::848            ",
      "2001:db8::849            ",
      "2001:db8::84a            ",
      "2001:db8::84b            ",
      "2001:db8::84c            ",
      "2001:db8::84d            ",
      "2001:db8::84e            ",
      "2001:db8::84f            ",
      "2001:db8::850            ",
      "2001:db8::851            ",
      "2001:db8::852            ",
      "2001:db8::853            ",
      "2001:db8::854            ",
      "2001:db8::855            ",
      "2001:db8::856            ",
      "2001:db8::857            ",
      "2001:db8::858            ",
      "2001:db8::859            ",
      "2001:db8::85a            ",
      "2001:db8::85b            ",
      "2001:db8::85c            ",
      "2001:db8::85d            ",
      "2001:db8::85e            ",
      "2001:db8::85f            ",
      "2001:db8::860            ",
      "2001:db8::861            ",
      "2001:db8::862            ",
      "2001:db8::863            ",
      "2001:db8::864            ",
      "2001:db8::865            ",
      "2001:db8::866            ",
      "2001:db8::867            ",
      "2001:db8::868            ",
      "2001:db8::869            ",
      "2001:db8::86a            ",
      "2001:db8::86b            ",
      "2001:db8::86c            ",
      "2001:db8::86d            ",
      "2001:db8::86e            ",
      "2001:db8::86f            ",
      "2001:db8::870            ",
      "2001:db8::871            ",
      "2001:db8::872            ",
      "2001:db8::873            ",
      "2001:db8::874            ",
      "2001:db8::875            ",
      "2001:db8::876            ",
      "2001:db8::877            ",
      "2001:db8::878            ",
      "2001:db8::879            ",
      "2001:db8::87a            ",
      "2001:db8::87b            ",
      "2001:db8::87c            ",
      "2001:db8::87d            ",
      "2001:db8::87e            ",
      "2001:db8::87f            ",
      "2001:db8::880            ",
      "2001:db8::881            ",
      "2001:db8::882            ",
      "2001:db8::883            ",
      "2001:db8::884            ",
      "2001:db8::885            ",
      "2001:db8::886            ",
      "2001:db8::887            ",
      "2001:db8::888            ",
      "2001:db8::889            ",
      "2001:db8::88a            ",
      "2001:db8::88b            ",
      "2001:db8::88c            ",
      "2001:db8::88d            ",
      "2001:db8::88e            ",
      "2001:db8::88f            ",
      "2001:db8::890            ",
      "2001:db8::891            ",
      "2001:db8::892            ",
      "2001:db8::893            ",
      "2001:db8::894            ",
      "2001:db8::895            ",
      "2001:db8::896            ",
      "2001:db8::897            ",
      "2001:db8::898            ",
      "2001:db8::899            ",
      "2001:db8::89a            ",
      "2001:db8::89b            ",
      "2001:db8::89c            ",
      "2001:db8::89d            ",
      "2001:db8::89e            ",
      "2001:db8::89f            ",
      "2001:db8::8a0            ",
      "2001:db8::8a1            ",
      "2001:db8::8a2            ",
      "2001:db8::8a3            ",
      "2001:db8::8a4            ",
      "2001:db8::8a5            ",
      "2001:db8::8a6            ",
      "2001:db8::8a7            ",
      "2001:db8::8a8            ",
      "2001:db8::8a9            ",
      "2001:db8::8aa            ",
      "2001:db8::8ab            ",
      "2001:db8::8ac            ",
      "2001:db8::8ad            ",
      "2001:db8::8ae            ",
      "2001:db8::8af            ",
      "2001:db8::8b0            ",
      "2001:db8::8b1            ",
      "2001:db8::8b2            ",
      "2001:db8::8b3            ",
      "2001:db8::8b4            ",
      "2001:db8::8b5            ",
      "2001:db8::8b6            ",
      "2001:db8::8b7            ",
      "2001:db8::8b8            ",
      "2001:db8::8b9            ",
      "2001:db8::8ba            ",
      "2001:db8::8bb            ",
      "2001:db8::8bc            ",
      "2001:db8::8bd            ",
      "2001:db8::8be            ",
      "2001:db8::8bf            ",
      "2001:db8::8c0            ",
      "2001:db8::8c1            ",
      "2001:db8::8c2            ",
      "2001:db8::8c3            ",
      "2001:db8::8c4            ",
      "2001:db8::8c5            ",
      "2001:db8::8c6            ",
      "2001:db8::8c7            ",
      "2001:db8::8c8            ",
      "2001:db8::8c9            ",
      "2001:db8::8ca            ",
      "2001:db8::8cb            ",
      "2001:db8::8cc            ",
      "2001:db8::8cd            ",
      "2001:db8::8ce            ",
      "2001:db8::8cf            ",
      "2001:db8::8d0            ",
      "2001:db8::8d1            ",
      "2001:db8::8d2            ",
      "2001:db8::8d3            ",
      "2001:db8::8d4            ",
      "2001:db8::8d5            ",
      "2001:db8::8d6            ",
      "2001:db8::8d7            ",
      "2001:db8::8d8            ",
      "2001:db8::8d9            ",
      "2001:db8::8da            ",
      "2001:db8::8db            ",
      "2001:db8::8dc            ",
      "2001:db8::8dd            ",
      "2001:db8::8de            ",
      "2001:db8::8df            ",
      "2001:db8::8e0            ",
      "2001:db8::8e1            ",
      "2001:db8::8e2            ",
      "2001:db8::8e3            ",
      "2001:db8::8e4            ",
      "2001:db8::8e5            ",
      "2001:db8::8e6            ",
      "2001:db8::8e7            ",
      "2001:db8::8e8            ",
      "2001:db8::8e9            ",
      "2001:db8::8ea            ",
      "2001:db8::8eb            ",
      "2001:db8::8ec            ",
      "2001:db8::8ed            ",
      "2001:db8::8ee            ",
      "2001:db8::8ef            ",
      "2001:db8::8f0            ",
      "2001:db8::8f1            ",
      "2001:db8::8f2            ",
      "2001:db8::8f3            ",
      "2001:db8::8f4            ",
      "2001:db8::8f5            ",
      "2001:db8::8f6            ",
      "2001:db8::8f7            ",
      "2001:db8::8f8            ",
      "2001:db8::8f9            ",
      "2001:db8::8fa            ",
      "2001:db8::8fb            ",
      "2001:db8::8fc            ",
      "2001:db8::8fd            ",
      "2001:db8::8fe            ",
      "2001:db8::8ff            ",
      "2001:db8::900            ",
      "2001:db8::901            ",
      "2001:db8::902            ",
      "2001:db8::903            ",
      "2001:db8::904            ",
      "2001:db8::905            ",
      "2001:db8::906            ",
      "2001:db8::907            ",
      "2001:db8::908            ",
      "2001:db8::909            ",
      "2001:db8::90a            ",
      "2001:db8::90b            ",
      "2001:db8::90c            ",
      "2001:db8::90d            ",
      "2001:db8::90e            ",
      "2001:db8::90f            ",
      "2001:db8::910            ",
      "2001:db8::911            ",
      "2001:db8::912            ",
      "2001:db8::913            ",
      "2001:db8::914            ",
      "2001:db8::915            ",
      "2001:db8::916            ",
      "2001:db8::917            ",
      "2001:db8::918            ",
      "2001:db8::919            ",
      "2001:db8::91a            ",
      "2001:db8::91b            ",
      "2001:db8::91c            ",
      "2001:db8::91d            ",
      "2001:db8::91e            ",
      "2001:db8::91f            ",
      "2001:db8::920            ",
      "2001:db8::921            ",
      "2001:db8::922            ",
      "2001:db8::923            ",
      "2001:db8::924            ",
      "2001:db8::925            ",
      "2001:db8::926            ",
      "2001:db8::927            ",
      "2001:db8::928            ",
      "2001:db8::929            ",
      "2001:db8::92a            ",
      "2001:db8::92b            ",
      "2001:db8::92c            ",
      "2001:db8::92d            ",
      "2001:db8::92e            ",
      "2001:db8::92f            ",
      "2001:db8::930            ",
      "2001:db8::931            ",
      "2001:db8::932            ",
      "2001:db8::933            ",
      "2001:db8::934            ",
      "2001:db8::935            ",
      "2001:db8::936            ",
      "2001:db8::937            ",
      "2001:db8::938            ",
      "2001:db8::939            ",
      "2001:db8::93a            ",
      "2001:db8::93b            ",
      "2001:db8::93c            ",
      "2001:db8::93d            ",
      "2001:db8::93e            ",
      "2001:db8::93f            ",
      "2001:db8::940            ",
      "2001:db8::941            ",
      "2001:db8::942            ",
      "2001:db8::943            ",
      "2001:db8::944            ",
      "2001:db8::945            ",
      "2001:db8::946            ",
      "2001:db8::947            ",
      "2001:db8::948            ",
      "2001:db8::949            ",
      "2001:db8::94a            ",
      "2001:db8::94b            ",
      "2001:db8::94c            ",
      "2001:db8::94d            ",
      "2001:db8::94e            ",
      "2001:db8::94f            ",
      "2001:db8::950            ",
      "2001:db8::951            ",
      "2001:db8::952            ",
      "2001:db8::953            ",
      "2001:db8::954            ",
      "2001:db8::955            ",
      "2001:db8::956            ",
      "2001:db8::957            ",
      "2001:db8::958            ",
      "2001:db8::959            ",
      "2001:db8::95a            ",
      "2001:db8::95b            ",
      "2001:db8::95c            ",
      "2001:db8::95d            ",
      "2001:db8::95e            ",
      "2001:db8::95f            ",
      "2001:db8::960            ",
      "2001:db8::961            ",
      "2001:db8::962            ",
      "2001:db8::963            ",
      "2001:db8::964            ",
      "2001:db8::965            ",
      "2001:db8::966            ",
      "2001:db8::967            ",
      "2001:db8::968            ",
      "2001:db8::969            ",
      "2001:db8::96a            ",
      "2001:db8::96b            ",
      "2001:db8::96c            ",
      "2001:db8::96d            ",
      "2001:db8::96e            ",
      "2001:db8::96f            ",
      "2001:db8::970            ",
      "2001:db8::971            ",
      "2001:db8::972            ",
      "2001:db8::973            ",
      "2001:db8::974            ",
      "2001:db8::975            ",
      "2001:db8::976            ",
      "2001:db8::977            ",
      "2001:db8::978            ",
      "2001:db8::979            ",
      "2001:db8::97a            ",
      "2001:db8::97b            ",
      "2001:db8::97c            ",
      "2001:db8::97d            ",
      "2001:db8::97e            ",
      "2001:db8::97f            ",
      "2001:db8::980            ",
      "2001:db8::981            ",
      "2001:db8::982            ",
      "2001:db8::983            ",
      "2001:db8::984            ",
      "2001:db8::985            ",
      "2001:db8::986            ",
      "2001:db8::987            ",
      "2001:db8::988            ",
      "2001:db8::989            ",
      "2001:db8::98a            ",
      "2001:db8::98b            ",
      "2001:db8::98c            ",
      "2001:db8::98d            ",
      "2001:db8::98e            ",
      "2001:db8::98f            ",
      "2001:db8::990            ",
      "2001:db8::991            ",
      "2001:db8::992            ",
      "2001:db8::993            ",
      "2001:db8::994            ",
      "2001:db8::995            ",
      "2001:db8::996            ",
      "2001:db8::997            ",
      "2001:db8::998            ",
      "2001:db8::999            ",
      "2001:db8::99a            ",
      "2001:db8::99b            ",
      "2001:db8::99c            ",
      "2001:db8::99d            ",
      "2001:db8::99e            ",
      "2001:db8::99f            ",
      "2001:db8::9a0            ",
      "2001:db8::9a1            ",
      "2001:db8::9a2            ",
      "2001:db8::9a3            ",
      "2001:db8::9a4            ",
      "2001:db8::9a5            ",
      "2001:db8::9a6            ",
      "2001:db8::9a7            ",
      "2001:db8::9a8            ",
      "2001:db8::9a9            ",
      "2001:db8::9aa            ",
      "2001:db8::9ab            ",
      "2001:db8::9ac            ",
      "2001:db8::9ad            ",
      "2001:db8::9ae            ",
      "2001:db8::9af            ",
      "2001:db8::9b0            ",
      "2001:db8::9b1            ",
      "2001:db8::9b2            ",
      "2001:db8::9b3            ",
      "2001:db8::9b4            ",
      "2001:db8::9b5            ",
      "2001:db8::9b6            ",
      "2001:db8::9b7            ",
      "2001:db8::9b8            ",
      "2001:db8::9b9            ",
      "2001:db8::9ba            ",
      "2001:db8::9bb            ",
      "2001:db8::9bc            ",
      "2001:db8::9bd            ",
      "2001:db8::9be            ",
      "2001:db8::9bf            ",
      "2001:db8::9c0            ",
      "2001:db8::9c1            ",
      "2001:db8::9c2            ",
      "2001:db8::9c3            ",
      "2001:db8::9c4            ",
      "2001:db8::9c5            ",
      "2001:db8::9c6            ",
      "2001:db8::9c7            ",
      "2001:db8::9c8            ",
      "2001:db8::9c9            ",
      "2001:db8::9ca            ",
      "2001:db8::9cb            ",
      "2001:db8::9cc            ",
      "2001:db8::9cd            ",
      "2001:db8::9ce            ",
      "2001:db8::9cf            ",
      "2001:db8::9d0            ",
      "2001:db8::9d1            ",
      "2001:db8::9d2            ",
      "2001:db8::9d3            ",
      "2001:db8::9d4            ",
      "2001:db8::9d5            ",
      "2001:db8::9d6            ",
      "2001:db8::9d7            ",
      "2001:db8::9d8            ",
      "2001:db8::9d9            ",
      "2001:db8::9da            ",
      "2001:db8::9db            ",
      "2001:db8::9dc            ",
      "2001:db8::9dd            ",
      "2001:db8::9de            ",
      "2001:db8::9df            ",
      "2001:db8::9e0            ",
      "2001:db8::9e1            ",
      "2001:db8::9e2            ",
      "2001:db8::9e3            ",
      "2001:db8::9e4            ",
      "2001:db8::9e5            ",
      "2001:db8::9e6            ",
      "2001:db8::9e7            ",
      "2001:db8::9e8            ",
      "2001:db8::9e9            ",
      "2001:db8::9ea            ",
      "2001:db8::9eb            ",
      "2001:db8::9ec            ",
      "2001:db8::9ed            ",
      "2001:db8::9ee            ",
      "2001:db8::9ef            ",
      "2001:db8::9f0            ",
      "2001:db8::9f1            ",
      "2001:db8::9f2            ",
      "2001:db8::9f3            ",
      "2001:db8::9f4            ",
      "2001:db8::9f5            ",
      "2001:db8::9f6            ",
      "2001:db8::9f7            ",
      "2001:db8::9f8            ",
      "2001:db8::9f9            ",
      "2001:db8::9fa            ",
      "2001:db8::9fb            ",
      "2001:db8::9fc            ",
      "2001:db8::9fd            ",
      "2001:db8::9fe            ",
      "2001:db8::9ff            ",
      "2001:db8::a00            ",
      "2001:db8::a01            ",
      "2001:db8::a02            ",
      "2001:db8::a03            ",
      "2001:db8::a04            ",
      "2001:db8::a05            ",
      "2001:db8::a06            ",
      "2001:db8::a07            ",
      "2001:db8::a08            ",
      "2001:db8::a09            ",
      "2001:db8::a0a            ",
      "2001:db8::a0b            ",
      "2001:db8::a0c            ",
      "2001:db8::a0d            ",
      "2001:db8::a0e            ",
      "2001:db8::a0f            ",
      "2001:db8::a10            ",
      "2001:db8::a11            ",
      "2001:db8::a12            ",
      "2001:db8::a13            ",
      "2001:db8::a14            ",
      "2001:db8::a15            ",
      "2001:db8::a16            ",
      "2001:db8::a17            ",
      "2001:db8::a18            ",
      "2001:db8::a19            ",
      "2001:db8::a1a            ",
      "2001:db8::a1b            ",
      "2001:db8::a1c            ",
      "2001:db8::a1d            ",
      "2001:db8::a1e            ",
      "2001:db8::a1f            ",
      "2001:db8::a20            ",
      "2001:db8::a21            ",
      "2001:db8::a22            ",
      "2001:db8::a23            ",
      "2001:db8::a24            ",
      "2001:db8::a25            ",
      "2001:db8::a26            ",
      "2001:db8::a27            ",
      "2001:db8::a28            ",
      "2001:db8::a29            ",
      "2001:db8::a2a            ",
      "2001:db8::a2b            ",
      "2001:db8::a2c            ",
      "2001:db8::a2d            ",
      "2001:db8::a2e            ",
      "2001:db8::a2f            ",
      "2001:db8::a30            ",
      "2001:db8::a31            ",
      "2001:db8::a32            ",
      "2001:db8::a33            ",
      "2001:db8::a34            ",
      "2001:db8::a35            ",
      "2001:db8::a36            ",
      "2001:db8::a37            ",
      "2001:db8::a38            ",
      "2001:db8::a39            ",
      "2001:db8::a3a            ",
      "2001:db8::a3b            ",
      "2001:db8::a3c            ",
      "2001:db8::a3d            ",
      "2001:db8::a3e            ",
      "2001:db8::a3f            ",
      "2001:db8::a40            ",
      "2001:db8::a41            ",
      "2001:db8::a42            ",
      "2001:db8::a43            ",
      "2001:db8::a44            ",
      "2001:db8::a45            ",
      "2001:db8::a46            ",
      "2001:db8::a47            ",
      "2001:db8::a48            ",
      "2001:db8::a49            ",
      "2001:db8::a4a            ",
      "2001:db8::a4b            ",
      "2001:db8::a4c            ",
      "2001:db8::a4d            ",
      "2001:db8::a4e            ",
      "2001:db8::a4f            ",
      "2001:db8::a50            ",
      "2001:db8::a51            ",
      "2001:db8::a52            ",
      "2001:db8::a53            ",
      "2001:db8::a54            ",
      "2001:db8::a55            ",
      "2001:db8::a56            ",
      "2001:db8::a57            ",
      "2001:db8::a58            ",
      "2001:db8::a59            ",
      "2001:db8::a5a            ",
      "2001:db8::a5b            ",
      "2001:db8::a5c            ",
      "2001:db8::a5d            ",
      "2001:db8::a5e            ",
      "2001:db8::a5f            ",
      "2001:db8::a60            ",
      "2001:db8::a61            ",
      "2001:db8::a62            ",
      "2001:db8::a63            ",
      "2001:db8::a64            ",
      "2001:db8::a65            ",
      "2001:db8::a66            ",
      "2001:db8::a67            ",
      "2001:db8::a68            ",
      "2001:db8::a69            ",
      "2001:db8::a6a            ",
      "2001:db8::a6b            ",
      "2001:db8::a6c            ",
      "2001:db8::a6d            ",
      "2001:db8::a6e            ",
      "2001:db8::a6f            ",
      "2001:db8::a70            ",
      "2001:db8::a71            ",
      "2001:db8::a72            ",
      "2001:db8::a73            ",
      "2001:db8::a74            ",
      "2001:db8::a75            ",
      "2001:db8::a76            ",
      "2001:db8::a77            ",
      "2001:db8::a78            ",
      "2001:db8::a79            ",
      "2001:db8::a7a            ",
      "2001:db8::a7b            ",
      "2001:db8::a7c            ",
      "2001:db8::a7d            ",
      "2001:db8::a7e            ",
      "2001:db8::a7f            ",
      "2001:db8::a80            ",
      "2001:db8::a81            ",
      "2001:db8::a82            ",
      "2001:db8::a83            ",
      "2001:db8::a84            ",
      "2001:db8::a85            ",
      "2001:db8::a86            ",
      "2001:db8::a87            ",
      "2001:db8::a88            ",
      "2001:db8::a89            ",
      "2001:db8::a8a            ",
      "2001:db8::a8b            ",
      "2001:db8::a8c            ",
      "2001:db8::a8d            ",
      "2001:db8::a8e            ",
      "2001:db8::a8f            ",
      "2001:db8::a90            ",
      "2001:db8::a91            ",
      "2001:db8::a92            ",
      "2001:db8::a93            ",
      "2001:db8::a94            ",
      "2001:db8::a95            ",
      "2001:db8::a96            ",
      "2001:db8::a97            ",
      "2001:db8::a98            ",
      "2001:db8::a99            ",
      "2001:db8::a9a            ",
      "2001:db8::a9b            ",
      "2001:db8::a9c            ",
      "2001:db8::a9d            ",
      "2001:db8::a9e            ",
      "2001:db8::a9f            ",
      "2001:db8::aa0            ",
      "2001:db8::aa1            ",
      "2001:db8::aa2            ",
      "2001:db8::aa3            ",
      "2001:db8::aa4            ",
      "2001:db8::aa5            ",
      "2001:db8::aa6            ",
      "2001:db8::aa7            ",
      "2001:db8::aa8            ",
      "2001:db8::aa9            ",
      "2001:db8::aaa            ",
      "2001:db8::aab            ",
      "2001:db8::aac            ",
      "2001:db8::aad            ",
      "2001:db8::aae            ",
      "2001:db8::aaf            ",
      "2001:db8::ab0            ",
      "2001:db8::ab1            ",
      "2001:db8::ab2            ",
      "2001:db8::ab3            ",
      "2001:db8::ab4            ",
      "2001:db8::ab5            ",
      "2001:db8::ab6            ",
      "2001:db8::ab7            ",
      "2001:db8::ab8            ",
      "2001:db8::ab9            ",
      "2001:db8::aba            ",
      "2001:db8::abb            ",
      "2001:db8::abc            ",
      "2001:db8::abd            ",
      "2001:db8::abe            ",
      "2001:db8::abf            ",
      "2001:db8::ac0            ",
      "2001:db8::ac1            ",
      "2001:db8::ac2            ",
      "2001:db8::ac3            ",
      "2001:db8::ac4            ",
      "2001:db8::ac5            ",
      "2001:db8::ac6            ",
      "2001:db8::ac7            ",
      "2001:db8::ac8            ",
      "2001:db8::ac9            ",
      "2001:db8::aca            ",
      "2001:db8::acb            ",
      "2001:db8::acc            ",
      "2001:db8::acd            ",
      "2001:db8::ace            ",
      "2001:db8::acf            ",
      "2001:db8::ad0            ",
      "2001:db8::ad1            ",
      "2001:db8::ad2            ",
      "2001:db8::ad3            ",
      "2001:db8::ad4            ",
      "2001:db8::ad5            ",
      "2001:db8::ad6            ",
      "2001:db8::ad7            ",
      "2001:db8::ad8            ",
      "2001:db8::ad9            ",
      "2001:db8::ada            ",
      "2001:db8::adb            ",
      "2001:db8::adc            ",
      "2001:db8::add            ",
      "2001:db8::ade            ",
      "2001:db8::adf            ",
      "2001:db8::ae0            ",
      "2001:db8::ae1            ",
      "2001:db8::ae2            ",
      "2001:db8::ae3            ",
      "2001:db8::ae4            ",
      "2001:db8::ae5            ",
      "2001:db8::ae6            ",
      "2001:db8::ae7            ",
      "2001:db8::ae8            ",
      "2001:db8::ae9            ",
      "2001:db8::aea            ",
      "2001:db8::aeb            ",
      "2001:db8::aec            ",
      "2001:db8::aed            ",
      "2001:db8::aee            ",
      "2001:db8::aef            ",
      "2001:db8::af0            ",
      "2001:db8::af1            ",
      "2001:db8::af2            ",
      "2001:db8::af3            ",
      "2001:db8::af4            ",
      "2001:db8::af5            ",
      "2001:db8::af6            ",
      "2001:db8::af7            ",
      "2001:db8::af8            ",
      "2001:db8::af9            ",
      "2001:db8::afa            ",
      "2001:db8::afb            ",
      "2001:db8::afc            ",
      "2001:db8::afd            ",
      "2001:db8::afe            ",
      "2001:db8::aff            ",
      "2001:db8::b00            ",
      "2001:db8::b01            ",
      "2001:db8::b02            ",
      "2001:db8::b03            ",
      "2001:db8::b04            ",
      "2001:db8::b05            ",
      "2001:db8::b06            ",
      "2001:db8::b07            ",
      "2001:db8::b08            ",
      "2001:db8::b09            ",
      "2001:db8::b0a            ",
      "2001:db8::b0b            ",
      "2001:db8::b0c            ",
      "2001:db8::b0d            ",
      "2001:db8::b0e            ",
      "2001:db8::b0f            ",
      "2001:db8::b10            ",
      "2001:db8::b11            ",
      "2001:db8::b12            ",
      "2001:db8::b13            ",
      "2001:db8::b14            ",
      "2001:db8::b15            ",
      "2001:db8::b16            ",
      "2001:db8::b17            ",
      "2001:db8::b18            ",
      "2001:db8::b19            ",
      "2001:db8::b1a            ",
      "2001:db8::b1b            ",
      "2001:db8::b1c            ",
      "2001:db8::b1d            ",
      "2001:db8::b1e            ",
      "2001:db8::b1f            ",
      "2001:db8::b20            ",
      "2001:db8::b21            ",
      "2001:db8::b22            ",
      "2001:db8::b23            ",
      "2001:db8::b24            ",
      "2001:db8::b25            ",
      "2001:db8::b26            ",
      "2001:db8::b27            ",
      "2001:db8::b28            ",
      "2001:db8::b29            ",
      "2001:db8::b2a            ",
      "2001:db8::b2b            ",
      "2001:db8::b2c            ",
      "2001:db8::b2d            ",
      "2001:db8::b2e            ",
      "2001:db8::b2f            ",
      "2001:db8::b30            ",
      "2001:db8::b31            ",
      "2001:db8::b32            ",
      "2001:db8::b33            ",
      "2001:db8::b34            ",
      "2001:db8::b35            ",
      "2001:db8::b36            ",
      "2001:db8::b37            ",
      "2001:db8::b38            ",
      "2001:db8::b39            ",
      "2001:db8::b3a            ",
      "2001:db8::b3b            ",
      "2001:db8::b3c            ",
      "2001:db8::b3d            ",
      "2001:db8::b3e            ",
      "2001:db8::b3f            ",
      "2001:db8::b40            ",
      "2001:db8::b41            ",
      "2001:db8::b42            ",
      "2001:db8::b43            ",
      "2001:db8::b44            ",
      "2001:db8::b45            ",
      "2001:db8::b46            ",
      "2001:db8::b47            ",
      "2001:db8::b48            ",
      "2001:db8::b49            ",
      "2001:db8::b4a            ",
      "2001:db8::b4b            ",
      "2001:db8::b4c            ",
      "2001:db8::b4d            ",
      "2001:db8::b4e            ",
      "2001:db8::b4f            ",
      "2001:db8::b50            ",
      "2001:db8::b51            ",
      "2001:db8::b52            ",
      "2001:db8::b53            ",
      "2001:db8::b54            ",
      "2001:db8::b55            ",
      "2001:db8::b56            ",
      "2001:db8::b57            ",
      "2001:db8::b58            ",
      "2001:db8::b59            ",
      "2001:db8::b5a            ",
      "2001:db8::b5b            ",
      "2001:db8::b5c            ",
      "2001:db8::b5d            ",
      "2001:db8::b5e            ",
      "2001:db8::b5f            ",
      "2001:db8::b60            ",
      "2001:db8::b61            ",
      "2001:db8::b62            ",
      "2001:db8::b63            ",
      "2001:db8::b64            ",
      "2001:db8::b65            ",
      "2001:db8::b66            ",
      "2001:db8::b67            ",
      "2001:db8::b68            ",
      "2001:db8::b69            ",
      "2001:db8::b6a            ",
      "2001:db8::b6b            ",
      "2001:db8::b6c            ",
      "2001:db8::b6d            ",
      "2001:db8::b6e            ",
      "2001:db8::b6f            ",
      "2001:db8::b70            ",
      "2001:db8::b71            ",
      "2001:db8::b72            ",
      "2001:db8::b73            ",
      "2001:db8::b74            ",
      "2001:db8::b75            ",
      "2001:db8::b76            ",
      "2001:db8::b77            ",
      "2001:db8::b78            ",
      "2001:db8::b79            ",
      "2001:db8::b7a            ",
      "2001:db8::b7b            ",
      "2001:db8::b7c            ",
      "2001:db8::b7d            ",
      "2001:db8::b7e            ",
      "2001:db8::b7f            ",
      "2001:db8::b80            ",
      "2001:db8::b81            ",
      "2001:db8::b82            ",
      "2001:db8::b83            ",
      "2001:db8::b84            ",
      "2001:db8::b85            ",
      "2001:db8::b86            ",
      "2001:db8::b87            ",
      "2001:db8::b88            ",
      "2001:db8::b89            ",
      "2001:db8::b8a            ",
      "2001:db8::b8b            ",
      "2001:db8::b8c            ",
      "2001:db8::b8d            ",
      "2001:db8::b8e            ",
      "2001:db8::b8f            ",
      "2001:db8::b90            ",
      "2001:db8::b91            ",
      "2001:db8::b92            ",
      "2001:db8::b93            ",
      "2001:db8::b94            ",
      "2001:db8::b95            ",
      "2001:db8::b96            ",
      "2001:db8::b97            ",
      "2001:db8::b98            ",
      "2001:db8::b99            ",
      "2001:db8::b9a            ",
      "2001:db8::b9b            ",
      "2001:db8::b9c            ",
      "2001:db8::b9d            ",
      "2001:db8::b9e            ",
      "2001:db8::b9f            ",
      "2001:db8::ba0            ",
      "2001:db8::ba1            ",
      "2001:db8::ba2            ",
      "2001:db8::ba3            ",
      "2001:db8::ba4            ",
      "2001:db8::ba5            ",
      "2001:db8::ba6            ",
      "2001:db8::ba7            ",
      "2001:db8::ba8            ",
      "2001:db8::ba9            ",
      "2001:db8::baa            ",
      "2001:db8::bab            ",
      "2001:db8::bac            ",
      "2001:db8::bad            ",
      "2001:db8::bae            ",
      "2001:db8::baf            ",
      "2001:db8::bb0            ",
      "2001:db8::bb1            ",
      "2001:db8::bb2            ",
      "2001:db8::bb3            ",
      "2001:db8::bb4            ",
      "2001:db8::bb5            ",
      "2001:db8::bb6            ",
      "2001:db8::bb7            ",
      "2001:db8::bb8            ",
      "2001:db8::bb9            ",
      "2001:db8::bba            ",
      "2001:db8::bbb            ",
      "2001:db8::bbc            ",
      "2001:db8::bbd            ",
      "2001:db8::bbe            ",
      "2001:db8::bbf            ",
      "2001:db8::bc0            ",
      "2001:db8::bc1            ",
      "2001:db8::bc2            ",
      "2001:db8::bc3            ",
      "2001:db8::bc4            ",
      "2001:db8::bc5            ",
      "2001:db8::bc6            ",
      "2001:db8::bc7            ",
      "2001:db8::bc8            ",
      "2001:db8::bc9            ",
      "2001:db8::bca            ",
      "2001:db8::bcb            ",
      "2001:db8::bcc            ",
      "2001:db8::bcd            ",
      "2001:db8::bce            ",
      "2001:db8::bcf            ",
      "2001:db8::bd0            ",
      "2001:db8::bd1            ",
      "2001:db8::bd2            ",
      "2001:db8::bd3            ",
      "2001:db8::bd4            ",
      "2001:db8::bd5            ",
      "2001:db8::bd6            ",
      "2001:db8::bd7            ",
      "2001:db8::bd8            ",
      "2001:db8::bd9            ",
      "2001:db8::bda            ",
      "2001:db8::bdb            ",
      "2001:db8::bdc            ",
      "2001:db8::bdd            ",
      "2001:db8::bde            ",
      "2001:db8::bdf            ",
      "2001:db8::be0            ",
      "2001:db8::be1            ",
      "2001:db8::be2            ",
      "2001:db8::be3            ",
      "2001:db8::be4            ",
      "2001:db8::be5            ",
      "2001:db8::be6            ",
      "2001:db8::be7            ",
      "2001:db8::be8            ",
      "2001:db8::be9            ",
      "2001:db8::bea            ",
      "2001:db8::beb            ",
      "2001:db8::bec            ",
      "2001:db8::bed            ",
      "2001:db8::bee            ",
      "2001:db8::bef            ",
      "2001:db8::bf0            ",
      "2001:db8::bf1            ",
      "2001:db8::bf2            ",
      "2001:db8::bf3            ",
      "2001:db8::bf4            ",
      "2001:db8::bf5            ",
      "2001:db8::bf6            ",
      "2001:db8::bf7            ",
      "2001:db8::bf8            ",
      "2001:db8::bf9            ",
      "2001:db8::bfa            ",
      "2001:db8::bfb            ",
      "2001:db8::bfc            ",
      "2001:db8::bfd            ",
      "2001:db8::bfe            ",
      "2001:db8::bff            ",
      "2001:db8::c00            ",
      "2001:db8::c01            ",
      "2001:db8::c02            ",
      "2001:db8::c03            ",
      "2001:db8::c04            ",
      "2001:db8::c05            ",
      "2001:db8::c06            ",
      "2001:db8::c07            ",
      "2001:db8::c08            ",
      "2001:db8::c09            ",
      "2001:db8::c0a            ",
      "2001:db8::c0b            ",
      "2001:db8::c0c            ",
      "2001:db8::c0d            ",
      "2001:db8::c0e            ",
      "2001:db8::c0f            ",
      "2001:db8::c10            ",
      "2001:db8::c11            ",
      "2001:db8::c12            ",
      "2001:db8::c13            ",
      "2001:db8::c14            ",
      "2001:db8::c15            ",
      "2001:db8::c16            ",
      "2001:db8::c17            ",
      "2001:db8::c18            ",
      "2001:db8::c19            ",
      "2001:db8::c1a            ",
      "2001:db8::c1b            ",
      "2001:db8::c1c            ",
      "2001:db8::c1d            ",
      "2001:db8::c1e            ",
      "2001:db8::c1f            ",
      "2001:db8::c20            ",
      "2001:db8::c21            ",
      "2001:db8::c22            ",
      "2001:db8::c23            ",
      "2001:db8::c24            ",
      "2001:db8::c25            ",
      "2001:db8::c26            ",
      "2001:db8::c27            ",
      "2001:db8::c28            ",
      "2001:db8::c29            ",
      "2001:db8::c2a            ",
      "2001:db8::c2b            ",
      "2001:db8::c2c            ",
      "2001:db8::c2d            ",
      "2001:db8::c2e            ",
      "2001:db8::c2f            ",
      "2001:db8::c30            ",
      "2001:db8::c31            ",
      "2001:db8::c32            ",
      "2001:db8::c33            ",
      "2001:db8::c34            ",
      "2001:db8::c35            ",
      "2001:db8::c36            ",
      "2001:db8::c37            ",
      "2001:db8::c38            ",
      "2001:db8::c39            ",
      "2001:db8::c3a            ",
      "2001:db8::c3b            ",
      "2001:db8::c3c            ",
      "2001:db8::c3d            ",
      "2001:db8::c3e            ",
      "2001:db8::c3f            ",
      "2001:db8::c40            ",
      "2001:db8::c41            ",
      "2001:db8::c42            ",
      "2001:db8::c43            ",
      "2001:db8::c44            ",
      "2001:db8::c45            ",
      "2001:db8::c46            ",
      "2001:db8::c47            ",
      "2001:db8::c48            ",
      "2001:db8::c49            ",
      "2001:db8::c4a            ",
      "2001:db8::c4b            ",
      "2001:db8::c4c            ",
      "2001:db8::c4d            ",
      "2001:db8::c4e            ",
      "2001:db8::c4f            ",
      "2001:db8::c50            ",
      "2001:db8::c51            ",
      "2001:db8::c52            ",
      "2001:db8::c53            ",
      "2001:db8::c54            ",
      "2001:db8::c55            ",
      "2001:db8::c56            ",
      "2001:db8::c57            ",
      "2001:db8::c58            ",
      "2001:db8::c59            ",
      "2001:db8::c5a            ",
      "2001:db8::c5b            ",
      "2001:db8::c5c            ",
      "2001:db8::c5d            ",
      "2001:db8::c5e            ",
      "2001:db8::c5f            ",
      "2001:db8::c60            ",
      "2001:db8::c61            ",
      "2001:db8::c62            ",
      "2001:db8::c63            ",
      "2001:db8::c64            ",
      "2001:db8::c65            ",
      "2001:db8::c66            ",
      "2001:db8::c67            ",
      "2001:db8::c68            ",
      "2001:db8::c69            ",
      "2001:db8::c6a            ",
      "2001:db8::c6b            ",
      "2001:db8::c6c            ",
      "2001:db8::c6d            ",
      "2001:db8::c6e            ",
      "2001:db8::c6f            ",
      "2001:db8::c70            ",
      "2001:db8::c71            ",
      "2001:db8::c72            ",
      "2001:db8::c73            ",
      "2001:db8::c74            ",
      "2001:db8::c75            ",
      "2001:db8::c76            ",
      "2001:db8::c77            ",
      "2001:db8::c78            ",
      "2001:db8::c79            ",
      "2001:db8::c7a            ",
      "2001:db8::c7b            ",
      "2001:db8::c7c            ",
      "2001:db8::c7d            ",
      "2001:db8::c7e            ",
      "2001:db8::c7f            ",
      "2001:db8::c80            ",
      "2001:db8::c81            ",
      "2001:db8::c82            ",
      "2001:db8::c83            ",
      "2001:db8::c84            ",
      "2001:db8::c85            ",
      "2001:db8::c86            ",
      "2001:db8::c87            ",
      "2001:db8::c88            ",
      "2001:db8::c89            ",
      "2001:db8::c8a            ",
      "2001:db8::c8b            ",
      "2001:db8::c8c            ",
      "2001:db8::c8d            ",
      "2001:db8::c8e            ",
      "2001:db8::c8f            ",
      "2001:db8::c90            ",
      "2001:db8::c91            ",
      "2001:db8::c92            ",
      "2001:db8::c93            ",
      "2001:db8::c94            ",
      "2001:db8::c95            ",
      "2001:db8::c96            ",
      "2001:db8::c97            ",
      "2001:db8::c98            ",
      "2001:db8::c99            ",
      "2001:db8::c9a            ",
      "2001:db8::c9b            ",
      "2001:db8::c9c            ",
      "2001:db8::c9d            ",
      "2001:db8::c9e            ",
      "2001:db8::c9f            ",
      "2001:db8::ca0            ",
      "2001:db8::ca1            ",
      "2001:db8::ca2            ",
      "2001:db8::ca3            ",
      "2001:db8::ca4            ",
      "2001:db8::ca5            ",
      "2001:db8::ca6            ",
      "2001:db8::ca7            ",
      "2001:db8::ca8            ",
      "2001:db8::ca9            ",
      "2001:db8::caa            ",
      "2001:db8::cab            ",
      "2001:db8::cac            ",
      "2001:db8::cad            ",
      "2001:db8::cae            ",
      "2001:db8::caf            ",
      "2001:db8::cb0            ",
      "2001:db8::cb1            ",
      "2001:db8::cb2            ",
      "2001:db8::cb3            ",
      "2001:db8::cb4            ",
      "2001:db8::cb5            ",
      "2001:db8::cb6            ",
      "2001:db8::cb7            ",
      "2001:db8::cb8            ",
      "2001:db8::cb9            ",
      "2001:db8::cba            ",
      "2001:db8::cbb            ",
      "2001:db8::cbc            ",
      "2001:db8::cbd            ",
      "2001:db8::cbe            ",
      "2001:db8::cbf            ",
      "2001:db8::cc0            ",
      "2001:db8::cc1            ",
      "2001:db8::cc2            ",
      "2001:db8::cc3            ",
      "2001:db8::cc4            ",
      "2001:db8::cc5            ",
      "2001:db8::cc6            ",
      "2001:db8::cc7            ",
      "2001:db8::cc8            ",
      "2001:db8::cc9            ",
      "2001:db8::cca            ",
      "2001:db8::ccb            ",
      "2001:db8::ccc            ",
      "2001:db8::ccd            ",
      "2001:db8::cce            ",
      "2001:db8::ccf            ",
      "2001:db8::cd0            ",
      "2001:db8::cd1            ",
      "2001:db8::cd2            ",
      "2001:db8::cd3            ",
      "2001:db8::cd4            ",
      "2001:db8::cd5            ",
      "2001:db8::cd6            ",
      "2001:db8::cd7            ",
      "2001:db8::cd8            ",
      "2001:db8::cd9            ",
      "2001:db8::cda            ",
      "2001:db8::cdb            ",
      "2001:db8::cdc            ",
      "2001:db8::cdd            ",
      "2001:db8::cde            ",
      "2001:db8::cdf            ",
      "2001:db8::ce0            ",
      "2001:db8::ce1            ",
      "2001:db8::ce2            ",
      "2001:db8::ce3            ",
      "2001:db8::ce4            ",
      "2001:db8::ce5            ",
      "2001:db8::ce6            ",
      "2001:db8::ce7            ",
      "2001:db8::ce8            ",
      "2001:db8::ce9            ",
      "2001:db8::cea            ",
      "2001:db8::ceb            ",
      "2001:db8::cec            ",
      "2001:db8::ced            ",
      "2001:db8::cee            ",
      "2001:db8::cef            ",
      "2001:db8::cf0            ",
      "2001:db8::cf1            ",
      "2001:db8::cf2            ",
      "2001:db8::cf3            ",
      "2001:db8::cf4            ",
      "2001:db8::cf5            ",
      "2001:db8::cf6            ",
      "2001:db8::cf7            ",
      "2001:db8::cf8            ",
      "2001:db8::cf9            ",
      "2001:db8::cfa            ",
      "2001:db8::cfb            ",
      "2001:db8::cfc            ",
      "2001:db8::cfd            ",
      "2001:db8::cfe            ",
      "2001:db8::cff            ",
      "2001:db8::d00            ",
      "2001:db8::d01            ",
      "2001:db8::d02            ",
      "2001:db8::d03            ",
      "2001:db8::d04            ",
      "2001:db8::d05            ",
      "2001:db8::d06            ",
      "2001:db8::d07            ",
      "2001:db8::d08            ",
      "2001:db8::d09            ",
      "2001:db8::d0a            ",
      "2001:db8::d0b            ",
      "2001:db8::d0c            ",
      "2001:db8::d0d            ",
      "2001:db8::d0e            ",
      "2001:db8::d0f            ",
      "2001:db8::d10            ",
      "2001:db8::d11            ",
      "2001:db8::d12            ",
      "2001:db8::d13            ",
      "2001:db8::d14            ",
      "2001:db8::d15            ",
      "2001:db8::d16            ",
      "2001:db8::d17            ",
      "2001:db8::d18            ",
      "2001:db8::d19            ",
      "2001:db8::d1a            ",
      "2001:db8::d1b            ",
      "2001:db8::d1c            ",
      "2001:db8::d1d            ",
      "2001:db8::d1e            ",
      "2001:db8::d1f            ",
      "2001:db8::d20            ",
      "2001:db8::d21            ",
      "2001:db8::d22            ",
      "2001:db8::d23            ",
      "2001:db8::d24            ",
      "2001:db8::d25            ",
      "2001:db8::d26            ",
      "2001:db8::d27            ",
      "2001:db8::d28            ",
      "2001:db8::d29            ",
      "2001:db8::d2a            ",
      "2001:db8::d2b            ",
      "2001:db8::d2c            ",
      "2001:db8::d2d            ",
      "2001:db8::d2e            ",
      "2001:db8::d2f            ",
      "2001:db8::d30            ",
      "2001:db8::d31            ",
      "2001:db8::d32            ",
      "2001:db8::d33            ",
      "2001:db8::d34            ",
      "2001:db8::d35            ",
      "2001:db8::d36            ",
      "2001:db8::d37            ",
      "2001:db8::d38            ",
      "2001:db8::d39            ",
      "2001:db8::d3a            ",
      "2001:db8::d3b            ",
      "2001:db8::d3c            ",
      "2001:db8::d3d            ",
      "2001:db8::d3e            ",
      "2001:db8::d3f            ",
      "2001:db8::d40            ",
      "2001:db8::d41            ",
      "2001:db8::d42            ",
      "2001:db8::d43            ",
      "2001:db8::d44            ",
      "2001:db8::d45            ",
      "2001:db8::d46            ",
      "2001:db8::d47            ",
      "2001:db8::d48            ",
      "2001:db8::d49            ",
      "2001:db8::d4a            ",
      "2001:db8::d4b            ",
      "2001:db8::d4c            ",
      "2001:db8::d4d            ",
      "2001:db8::d4e            ",
      "2001:db8::d4f            ",
      "2001:db8::d50            ",
      "2001:db8::d51            ",
      "2001:db8::d52            ",
      "2001:db8::d53            ",
      "2001:db8::d54            ",
      "2001:db8::d55            ",
      "2001:db8::d56            ",
      "2001:db8::d57            ",
      "2001:db8::d58            ",
      "2001:db8::d59            ",
      "2001:db8::d5a            ",
      "2001:db8::d5b            ",
      "2001:db8::d5c            ",
      "2001:db8::d5d            ",
      "2001:db8::d5e            ",
      "2001:db8::d5f            ",
      "2001:db8::d60            ",
      "2001:db8::d61            ",
      "2001:db8::d62            ",
      "2001:db8::d63            ",
      "2001:db8::d64            ",
      "2001:db8::d65            ",
      "2001:db8::d66            ",
      "2001:db8::d67            ",
      "2001:db8::d68            ",
      "2001:db8::d69            ",
      "2001:db8::d6a            ",
      "2001:db8::d6b            ",
      "2001:db8::d6c            ",
      "2001:db8::d6d            ",
      "2001:db8::d6e            ",
      "2001:db8::d6f            ",
      "2001:db8::d70            ",
      "2001:db8::d71            ",
      "2001:db8::d72            ",
      "2001:db8::d73            ",
      "2001:db8::d74            ",
      "2001:db8::d75            ",
      "2001:db8::d76            ",
      "2001:db8::d77            ",
      "2001:db8::d78            ",
      "2001:db8::d79            ",
      "2001:db8::d7a            ",
      "2001:db8::d7b            ",
      "2001:db8::d7c            ",
      "2001:db8::d7d            ",
      "2001:db8::d7e            ",
      "2001:db8::d7f            ",
      "2001:db8::d80            ",
      "2001:db8::d81            ",
      "2001:db8::d82            ",
      "2001:db8::d83            ",
      "2001:db8::d84            ",
      "2001:db8::d85            ",
      "2001:db8::d86            ",
      "2001:db8::d87            ",
      "2001:db8::d88            ",
      "2001:db8::d89            ",
      "2001:db8::d8a            ",
      "2001:db8::d8b            ",
      "2001:db8::d8c            ",
      "2001:db8::d8d            ",
      "2001:db8::d8e            ",
      "2001:db8::d8f            ",
      "2001:db8::d90            ",
      "2001:db8::d91            ",
      "2001:db8::d92            ",
      "2001:db8::d93            ",
      "2001:db8::d94            ",
      "2001:db8::d95            ",
      "2001:db8::d96            ",
      "2001:db8::d97            ",
      "2001:db8::d98            ",
      "2001:db8::d99            ",
      "2001:db8::d9a            ",
      "2001:db8::d9b            ",
      "2001:db8::d9c            ",
      "2001:db8::d9d            ",
      "2001:db8::d9e            ",
      "2001:db8::d9f            ",
      "2001:db8::da0            ",
      "2001:db8::da1            ",
      "2001:db8::da2            ",
      "2001:db8::da3            ",
      "2001:db8::da4            ",
      "2001:db8::da5            ",
      "2001:db8::da6            ",
      "2001:db8::da7            ",
      "2001:db8::da8            ",
      "2001:db8::da9            ",
      "2001:db8::daa            ",
      "2001:db8::dab            ",
      "2001:db8::dac            ",
      "2001:db8::dad            ",
      "2001:db8::dae            ",
      "2001:db8::daf            ",
      "2001:db8::db0            ",
      "2001:db8::db1            ",
      "2001:db8::db2            ",
      "2001:db8::db3            ",
      "2001:db8::db4            ",
      "2001:db8::db5            ",
      "2001:db8::db6            ",
      "2001:db8::db7            ",
      "2001:db8::db8            ",
      "2001:db8::db9            ",
      "2001:db8::dba            ",
      "2001:db8::dbb            ",
      "2001:db8::dbc            ",
      "2001:db8::dbd            ",
      "2001:db8::dbe            ",
      "2001:db8::dbf            ",
      "2001:db8::dc0            ",
      "2001:db8::dc1            ",
      "2001:db8::dc2            ",
      "2001:db8::dc3            ",
      "2001:db8::dc4            ",
      "2001:db8::dc5            ",
      "2001:db8::dc6            ",
      "2001:db8::dc7            ",
      "2001:db8::dc8            ",
      "2001:db8::dc9            ",
      "2001:db8::dca            ",
      "2001:db8::dcb            ",
      "2001:db8::dcc            ",
      "2001:db8::dcd            ",
      "2001:db8::dce            ",
      "2001:db8::dcf            ",
      "2001:db8::dd0            ",
      "2001:db8::dd1            ",
      "2001:db8::dd2            ",
      "2001:db8::dd3            ",
      "2001:db8::dd4            ",
      "2001:db8::dd5            ",
      "2001:db8::dd6            ",
      "2001:db8::dd7            ",
      "2001:db8::dd8            ",
      "2001:db8::dd9            ",
      "2001:db8::dda            ",
      "2001:db8::ddb            ",
      "2001:db8::ddc            ",
      "2001:db8::ddd            ",
      "2001:db8::dde            ",
      "2001:db8::ddf            ",
      "2001:db8::de0            ",
      "2001:db8::de1            ",
      "2001:db8::de2            ",
      "2001:db8::de3            ",
      "2001:db8::de4            ",
      "2001:db8::de5            ",
      "2001:db8::de6            ",
      "2001:db8::de7            ",
      "2001:db8::de8            ",
      "2001:db8::de9            ",
      "2001:db8::dea            ",
      "2001:db8::deb            ",
      "2001:db8::dec            ",
      "2001:db8::ded            ",
      "2001:db8::dee            ",
      "2001:db8::def            ",
      "2001:db8::df0            ",
      "2001:db8::df1            ",
      "2001:db8::df2            ",
      "2001:db8::df3            ",
      "2001:db8::df4            ",
      "2001:db8::df5            ",
      "2001:db8::df6            ",
      "2001:db8::df7            ",
      "2001:db8::df8            ",
      "2001:db8::df9            ",
      "2001:db8::dfa            ",
      "2001:db8::dfb            ",
      "2001:db8::dfc            ",
      "2001:db8::dfd            ",
      "2001:db8::dfe            ",
      "2001:db8::dff            ",
      "2001:db8::e00            ",
      "2001:db8::e01            ",
      "2001:db8::e02            ",
      "2001:db8::e03            ",
      "2001:db8::e04            ",
      "2001:db8::e05            ",
      "2001:db8::e06            ",
      "2001:db8::e07            ",
      "2001:db8::e08            ",
      "2001:db8::e09            ",
      "2001:db8::e0a            ",
      "2001:db8::e0b            ",
      "2001:db8::e0c            ",
      "2001:db8::e0d            ",
      "2001:db8::e0e            ",
      "2001:db8::e0f            ",
      "2001:db8::e10            ",
      "2001:db8::e11            ",
      "2001:db8::e12            ",
      "2001:db8::e13            ",
      "2001:db8::e14            ",
      "2001:db8::e15            ",
      "2001:db8::e16            ",
      "2001:db8::e17            ",
      "2001:db8::e18            ",
      "2001:db8::e19            ",
      "2001:db8::e1a            ",
      "2001:db8::e1b            ",
      "2001:db8::e1c            ",
      "2001:db8::e1d            ",
      "2001:db8::e1e            ",
      "2001:db8::e1f            ",
      "2001:db8::e20            ",
      "2001:db8::e21            ",
      "2001:db8::e22            ",
      "2001:db8::e23            ",
      "2001:db8::e24            ",
      "2001:db8::e25            ",
      "2001:db8::e26            ",
      "2001:db8::e27            ",
      "2001:db8::e28            ",
      "2001:db8::e29            ",
      "2001:db8::e2a            ",
      "2001:db8::e2b            ",
      "2001:db8::e2c            ",
      "2001:db8::e2d            ",
      "2001:db8::e2e            ",
      "2001:db8::e2f            ",
      "2001:db8::e30            ",
      "2001:db8::e31            ",
      "2001:db8::e32            ",
      "2001:db8::e33            ",
      "2001:db8::e34            ",
      "2001:db8::e35            ",
      "2001:db8::e36            ",
      "2001:db8::e37            ",
      "2001:db8::e38            ",
      "2001:db8::e39            ",
      "2001:db8::e3a            ",
      "2001:db8::e3b            ",
      "2001:db8::e3c            ",
      "2001:db8::e3d            ",
      "2001:db8::e3e            ",
      "2001:db8::e3f            ",
      "2001:db8::e40            ",
      "2001:db8::e41            ",
      "2001:db8::e42            ",
      "2001:db8::e43            ",
      "2001:db8::e44            ",
      "2001:db8::e45            ",
      "2001:db8::e46            ",
      "2001:db8::e47            ",
      "2001:db8::e48            ",
      "2001:db8::e49            ",
      "2001:db8::e4a            ",
      "2001:db8::e4b            ",
      "2001:db8::e4c            ",
      "2001:db8::e4d            ",
      "2001:db8::e4e            ",
      "2001:db8::e4f            ",
      "2001:db8::e50            ",
      "2001:db8::e51            ",
      "2001:db8::e52            ",
      "2001:db8::e53            ",
      "2001:db8::e54            ",
      "2001:db8::e55            ",
      "2001:db8::e56            ",
      "2001:db8::e57            ",
      "2001:db8::e58            ",
      "2001:db8::e59            ",
      "2001:db8::e5a            ",
      "2001:db8::e5b            ",
      "2001:db8::e5c            ",
      "2001:db8::e5d            ",
      "2001:db8::e5e            ",
      "2001:db8::e5f            ",
      "2001:db8::e60            ",
      "2001:db8::e61            ",
      "2001:db8::e62            ",
      "2001:db8::e63            ",
      "2001:db8::e64            ",
      "2001:db8::e65            ",
      "2001:db8::e66            ",
      "2001:db8::e67            ",
      "2001:db8::e68            ",
      "2001:db8::e69            ",
      "2001:db8::e6a            ",
      "2001:db8::e6b            ",
      "2001:db8::e6c            ",
      "2001:db8::e6d            ",
      "2001:db8::e6e            ",
      "2001:db8::e6f            ",
      "2001:db8::e70            ",
      "2001:db8::e71            ",
      "2001:db8::e72            ",
      "2001:db8::e73            ",
      "2001:db8::e74            ",
      "2001:db8::e75            ",
      "2001:db8::e76            ",
      "2001:db8::e77            ",
      "2001:db8::e78            ",
      "2001:db8::e79            ",
      "2001:db8::e7a            ",
      "2001:db8::e7b            ",
      "2001:db8::e7c            ",
      "2001:db8::e7d            ",
      "2001:db8::e7e            ",
      "2001:db8::e7f            ",
      "2001:db8::e80            ",
      "2001:db8::e81            ",
      "2001:db8::e82            ",
      "2001:db8::e83            ",
      "2001:db8::e84            ",
      "2001:db8::e85            ",
      "2001:db8::e86            ",
      "2001:db8::e87            ",
      "2001:db8::e88            ",
      "2001:db8::e89            ",
      "2001:db8::e8a            ",
      "2001:db8::e8b            ",
      "2001:db8::e8c            ",
      "2001:db8::e8d            ",
      "2001:db8::e8e            ",
      "2001:db8::e8f            ",
      "2001:db8::e90            ",
      "2001:db8::e91            ",
      "2001:db8::e92            ",
      "2001:db8::e93            ",
      "2001:db8::e94            ",
      "2001:db8::e95            ",
      "2001:db8::e96            ",
      "2001:db8::e97            ",
      "2001:db8::e98            ",
      "2001:db8::e99            ",
      "2001:db8::e9a            ",
      "2001:db8::e9b            ",
      "2001:db8::e9c            ",
      "2001:db8::e9d            ",
      "2001:db8::e9e            ",
      "2001:db8::e9f            ",
      "2001:db8::ea0            ",
      "2001:db8::ea1            ",
      "2001:db8::ea2            ",
      "2001:db8::ea3            ",
      "2001:db8::ea4            ",
      "2001:db8::ea5            ",
      "2001:db8::ea6            ",
      "2001:db8::ea7            ",
      "2001:db8::ea8            ",
      "2001:db8::ea9            ",
      "2001:db8::eaa            ",
      "2001:db8::eab            ",
      "2001:db8::eac            ",
      "2001:db8::ead            ",
      "2001:db8::eae            ",
      "2001:db8::eaf            ",
      "2001:db8::eb0            ",
      "2001:db8::eb1            ",
      "2001:db8::eb2            ",
      "2001:db8::eb3            ",
      "2001:db8::eb4            ",
      "2001:db8::eb5            ",
      "2001:db8::eb6            ",
      "2001:db8::eb7            ",
      "2001:db8::eb8            ",
      "2001:db8::eb9            ",
      "2001:db8::eba            ",
      "2001:db8::ebb            ",
      "2001:db8::ebc            ",
      "2001:db8::ebd            ",
      "2001:db8::ebe            ",
      "2001:db8::ebf            ",
      "2001:db8::ec0            ",
      "2001:db8::ec1            ",
      "2001:db8::ec2            ",
      "2001:db8::ec3            ",
      "2001:db8::ec4            ",
      "2001:db8::ec5            ",
      "2001:db8::ec6            ",
      "2001:db8::ec7            ",
      "2001:db8::ec8            ",
      "2001:db8::ec9            ",
      "2001:db8::eca            ",
      "2001:db8::ecb            ",
      "2001:db8::ecc            ",
      "2001:db8::ecd            ",
      "2001:db8::ece            ",
      "2001:db8::ecf            ",
      "2001:db8::ed0            ",
      "2001:db8::ed1            ",
      "2001:db8::ed2            ",
      "2001:db8::ed3            ",
      "2001:db8::ed4            ",
      "2001:db8::ed5            ",
      "2001:db8::ed6            ",
      "2001:db8::ed7            ",
      "2001:db8::ed8            ",
      "2001:db8::ed9            ",
      "2001:db8::eda            ",
      "2001:db8::edb            ",
      "2001:db8::edc            ",
      "2001:db8::edd            ",
      "2001:db8::ede            ",
      "2001:db8::edf            ",
      "2001:db8::ee0            ",
      "2001:db8::ee1            ",
      "2001:db8::ee2            ",
      "2001:db8::ee3            ",
      "2001:db8::ee4            ",
      "2001:db8::ee5            ",
      "2001:db8::ee6            ",
      "2001:db8::ee7            ",
      "2001:db8::ee8            ",
      "2001:db8::ee9            ",
      "2001:db8::eea            ",
      "2001:db8::eeb            ",
      "2001:db8::eec            ",
      "2001:db8::eed            ",
      "2001:db8::eee            ",
      "2001:db8::eef            ",
      "2001:db8::ef0            ",
      "2001:db8::ef1            ",
      "2001:db8::ef2            ",
      "2001:db8::ef3            ",
      "2001:db8::ef4            ",
      "2001:db8::ef5            ",
      "2001:db8::ef6            ",
      "2001:db8::ef7            ",
      "2001:db8::ef8            ",
      "2001:db8::ef9            ",
      "2001:db8::efa            ",
      "2001:db8::efb            ",
      "2001:db8::efc            ",
      "2001:db8::efd            ",
      "2001:db8::efe            ",
      "2001:db8::eff            ",
      "2001:db8::f00            ",
      "2001:db8::f01            ",
      "2001:db8::f02            ",
      "2001:db8::f03            ",
      "2001:db8::f04            ",
      "2001:db8::f05            ",
      "2001:db8::f06            ",
      "2001:db8::f07            ",
      "2001:db8::f08            ",
      "2001:db8::f09            ",
      "2001:db8::f0a            ",
      "2001:db8::f0b            ",
      "2001:db8::f0c            ",
      "2001:db8::f0d            ",
      "2001:db8::f0e            ",
      "2001:db8::f0f            ",
      "2001:db8::f10            ",
      "2001:db8::f11            ",
      "2001:db8::f12            ",
      "2001:db8::f13            ",
      "2001:db8::f14            ",
      "2001:db8::f15            ",
      "2001:db8::f16            ",
      "2001:db8::f17            ",
      "2001:db8::f18            ",
      "2001:db8::f19            ",
      "2001:db8::f1a            ",
      "2001:db8::f1b            ",
      "2001:db8::f1c            ",
      "2001:db8::f1d            ",
      "2001:db8::f1e            ",
      "2001:db8::f1f            ",
      "2001:db8::f20            ",
      "2001:db8::f21            ",
      "2001:db8::f22            ",
      "2001:db8::f23            ",
      "2001:db8::f24            ",
      "2001:db8::f25            ",
      "2001:db8::f26            ",
      "2001:db8::f27            ",
      "2001:db8::f28            ",
      "2001:db8::f29            ",
      "2001:db8::f2a            ",
      "2001:db8::f2b            ",
      "2001:db8::f2c            ",
      "2001:db8::f2d            ",
      "2001:db8::f2e            ",
      "2001:db8::f2f            ",
      "2001:db8::f30            ",
      "2001:db8::f31            ",
      "2001:db8::f32            ",
      "2001:db8::f33            ",
      "2001:db8::f34            ",
      "2001:db8::f35            ",
      "2001:db8::f36            ",
      "2001:db8::f37            ",
      "2001:db8::f38            ",
      "2001:db8::f39            ",
      "2001:db8::f3a            ",
      "2001:db8::f3b            ",
      "2001:db8::f3c            ",
      "2001:db8::f3d            ",
      "2001:db8::f3e            ",
      "2001:db8::f3f            ",
      "2001:db8::f40            ",
      "2001:db8::f41            ",
      "2001:db8::f42            ",
      "2001:db8::f43            ",
      "2001:db8::f44            ",
      "2001:db8::f45            ",
      "2001:db8::f46            ",
      "2001:db8::f47            ",
      "2001:db8::f48            ",
      "2001:db8::f49            ",
      "2001:db8::f4a            ",
      "2001:db8::f4b            ",
      "2001:db8::f4c            ",
      "2001:db8::f4d            ",
      "2001:db8::f4e            ",
      "2001:db8::f4f            ",
      "2001:db8::f50            ",
      "2001:db8::f51            ",
      "2001:db8::f52            ",
      "2001:db8::f53            ",
      "2001:db8::f54            ",
      "2001:db8::f55            ",
      "2001:db8::f56            ",
      "2001:db8::f57            ",
      "2001:db8::f58            ",
      "2001:db8::f59            ",
      "2001:db8::f5a            ",
      "2001:db8::f5b            ",
      "2001:db8::f5c            ",
      "2001:db8::f5d            ",
      "2001:db8::f5e            ",
      "2001:db8::f5f            ",
      "2001:db8::f60            ",
      "2001:db8::f61            ",
      "2001:db8::f62            ",
      "2001:db8::f63            ",
      "2001:db8::f64            ",
      "2001:db8::f65            ",
      "2001:db8::f66            ",
      "2001:db8::f67            ",
      "2001:db8::f68            ",
      "2001:db8::f69            ",
      "2001:db8::f6a            ",
      "2001:db8::f6b            ",
      "2001:db8::f6c            ",
      "2001:db8::f6d            ",
      "2001:db8::f6e            ",
      "2001:db8::f6f            ",
      "2001:db8::f70            ",
      "2001:db8::f71            ",
      "2001:db8::f72            ",
      "2001:db8::f73            ",
      "2001:db8::f74            ",
      "2001:db8::f75            ",
      "2001:db8::f76            ",
      "2001:db8::f77            ",
      "2001:db8::f78            ",
      "2001:db8::f79            ",
      "2001:db8::f7a            ",
      "2001:db8::f7b            ",
      "2001:db8::f7c            ",
      "2001:db8::f7d            ",
      "2001:db8::f7e            ",
      "2001:db8::f7f            ",
      "2001:db8::f80            ",
      "2001:db8::f81            ",
      "2001:db8::f82            ",
      "2001:db8::f83            ",
      "2001:db8::f84            ",
      "2001:db8::f85            ",
      "2001:db8::f86            ",
      "2001:db8::f87            ",
      "2001:db8::f88            ",
      "2001:db8::f89            ",
      "2001:db8::f8a            ",
      "2001:db8::f8b            ",
      "2001:db8::f8c            ",
      "2001:db8::f8d            ",
      "2001:db8::f8e            ",
      "2001:db8::f8f            ",
      "2001:db8::f90            ",
      "2001:db8::f91            ",
      "2001:db8::f92            ",
      "2001:db8::f93            ",
      "2001:db8::f94            ",
      "2001:db8::f95            ",
      "2001:db8::f96            ",
      "2001:db8::f97            ",
      "2001:db8::f98            ",
      "2001:db8::f99            ",
      "2001:db8::f9a            ",
      "2001:db8::f9b            ",
      "2001:db8::f9c            ",
      "2001:db8::f9d            ",
      "2001:db8::f9e            ",
      "2001:db8::f9f            ",
      "2001:db8::fa0            ",
      "2001:db8::fa1            ",
      "2001:db8::fa2            ",
      "2001:db8::fa3            ",
      "2001:db8::fa4            ",
      "2001:db8::fa5            ",
      "2001:db8::fa6            ",
      "2001:db8::fa7            ",
      "2001:db8::fa8            ",
      "2001:db8::fa9            ",
      "2001:db8::faa            ",
      "2001:db8::fab            ",
      "2001:db8::fac            ",
      "2001:db8::fad            ",
      "2001:db8::fae            ",
      "2001:db8::faf            ",
      "2001:db8::fb0            ",
      "2001:db8::fb1            ",
      "2001:db8::fb2            ",
      "2001:db8::fb3            ",
      "2001:db8::fb4            ",
      "2001:db8::fb5            ",
      "2001:db8::fb6            ",
      "2001:db8::fb7            ",
      "2001:db8::fb8            ",
      "2001:db8::fb9            ",
      "2001:db8::fba            ",
      "2001:db8::fbb            ",
      "2001:db8::fbc            ",
      "2001:db8::fbd            ",
      "2001:db8::fbe            ",
      "2001:db8::fbf            ",
      "2001:db8::fc0            ",
      "2001:db8::fc1            ",
      "2001:db8::fc2            ",
      "2001:db8::fc3            ",
      "2001:db8::fc4            ",
      "2001:db8::fc5            ",
      "2001:db8::fc6            ",
      "2001:db8::fc7            ",
      "2001:db8::fc8            ",
      "2001:db8::fc9            ",
      "2001:db8::fca            ",
      "2001:db8::fcb            ",
      "2001:db8::fcc            ",
      "2001:db8::fcd            ",
      "2001:db8::fce            ",
      "2001:db8::fcf            ",
      "2001:db8::fd0            ",
      "2001:db8::fd1            ",
      "2001:db8::fd2            ",
      "2001:db8::fd3            ",
      "2001:db8::fd4            ",
      "2001:db8::fd5            ",
      "2001:db8::fd6            ",
      "2001:db8::fd7            ",
      "2001:db8::fd8            ",
      "2001:db8::fd9            ",
      "2001:db8::fda            ",
      "2001:db8::fdb            ",
      "2001:db8::fdc            ",
      "2001:db8::fdd            ",
      "2001:db8::fde            ",
      "2001:db8::fdf            ",
      "2001:db8::fe0            ",
      "2001:db8::fe1            ",
      "2001:db8::fe2            ",
      "2001:db8::fe3            ",
      "2001:db8::fe4            ",
      "2001:db8::fe5            ",
      "2001:db8::fe6            ",
      "2001:db8::fe7            ",
      "2001:db8::fe8            ",
      "2001:db8::fe9            ",
      "2001:db8::fea            ",
      "2001:db8::feb            ",
      "2001:db8::fec            ",
      "2001:db8::fed            ",
      "2001:db8::fee            ",
      "2001:db8::fef            ",
      "2001:db8::ff0            ",
      "2001:db8::ff1            ",
      "2001:db8::ff2            ",
      "2001:db8::ff3            ",
      "2001:db8::ff4            ",
      "2001:db8::ff5            ",
      "2001:db8::ff6            ",
      "2001:db8::ff7            ",
      "2001:db8::ff8            ",
      "2001:db8::ff9            ",
      "2001:db8::ffa            ",
      "2001:db8::ffb            ",
      "2001:db8::ffc            ",
      "2001:db8::ffd            ",
      "2001:db8::ffe            ",
      "2001:db8::fff            ",
      "2001:db8::1000           ",
      "2001:db8::1001           ",
      "2001:db8::1002           ",
      "2001:db8::1003           "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/unused_list",
        "data": {},
        "status": 200,
        "response": [
          "2001:db8::4",
          "2001:db8::5",
          "2001:db8::6",
          "2001:db8::7",
          "2001:db8::8",
          "2001:db8::9",
          "2001:db8::a",
          "2001:db8::b",
          "2001:db8::c",
          "2001:db8::d",
          "2001:db8::e",
          "2001:db8::f",
          "2001:db8::10",
          "2001:db8::11",
          "2001:db8::12",
          "2001:db8::13",
          "2001:db8::14",
          "2001:db8::15",
          "2001:db8::16",
          "2001:db8::17",
          "2001:db8::18",
          "2001:db8::19",
          "2001:db8::1a",
          "2001:db8::1b",
          "2001:db8::1c",
          "2001:db8::1d",
          "2001:db8::1e",
          "2001:db8::1f",
          "2001:db8::20",
          "2001:db8::21",
          "2001:db8::22",
          "2001:db8::23",
          "2001:db8::24",
          "2001:db8::25",
          "2001:db8::26",
          "2001:db8::27",
          "2001:db8::28",
          "2001:db8::29",
          "2001:db8::2a",
          "2001:db8::2b",
          "2001:db8::2c",
          "2001:db8::2d",
          "2001:db8::2e",
          "2001:db8::2f",
          "2001:db8::30",
          "2001:db8::31",
          "2001:db8::32",
          "2001:db8::33",
          "2001:db8::34",
          "2001:db8::35",
          "2001:db8::36",
          "2001:db8::37",
          "2001:db8::38",
          "2001:db8::39",
          "2001:db8::3a",
          "2001:db8::3b",
          "2001:db8::3c",
          "2001:db8::3d",
          "2001:db8::3e",
          "2001:db8::3f",
          "2001:db8::40",
          "2001:db8::41",
          "2001:db8::42",
          "2001:db8::43",
          "2001:db8::44",
          "2001:db8::45",
          "2001:db8::46",
          "2001:db8::47",
          "2001:db8::48",
          "2001:db8::49",
          "2001:db8::4a",
          "2001:db8::4b",
          "2001:db8::4c",
          "2001:db8::4d",
          "2001:db8::4e",
          "2001:db8::4f",
          "2001:db8::50",
          "2001:db8::51",
          "2001:db8::52",
          "2001:db8::53",
          "2001:db8::54",
          "2001:db8::55",
          "2001:db8::56",
          "2001:db8::57",
          "2001:db8::58",
          "2001:db8::59",
          "2001:db8::5a",
          "2001:db8::5b",
          "2001:db8::5c",
          "2001:db8::5d",
          "2001:db8::5e",
          "2001:db8::5f",
          "2001:db8::60",
          "2001:db8::61",
          "2001:db8::62",
          "2001:db8::63",
          "2001:db8::64",
          "2001:db8::65",
          "2001:db8::66",
          "2001:db8::67",
          "2001:db8::68",
          "2001:db8::69",
          "2001:db8::6a",
          "2001:db8::6b",
          "2001:db8::6c",
          "2001:db8::6d",
          "2001:db8::6e",
          "2001:db8::6f",
          "2001:db8::70",
          "2001:db8::71",
          "2001:db8::72",
          "2001:db8::73",
          "2001:db8::74",
          "2001:db8::75",
          "2001:db8::76",
          "2001:db8::77",
          "2001:db8::78",
          "2001:db8::79",
          "2001:db8::7a",
          "2001:db8::7b",
          "2001:db8::7c",
          "2001:db8::7d",
          "2001:db8::7e",
          "2001:db8::7f",
          "2001:db8::80",
          "2001:db8::81",
          "2001:db8::82",
          "2001:db8::83",
          "2001:db8::84",
          "2001:db8::85",
          "2001:db8::86",
          "2001:db8::87",
          "2001:db8::88",
          "2001:db8::89",
          "2001:db8::8a",
          "2001:db8::8b",
          "2001:db8::8c",
          "2001:db8::8d",
          "2001:db8::8e",
          "2001:db8::8f",
          "2001:db8::90",
          "2001:db8::91",
          "2001:db8::92",
          "2001:db8::93",
          "2001:db8::94",
          "2001:db8::95",
          "2001:db8::96",
          "2001:db8::97",
          "2001:db8::98",
          "2001:db8::99",
          "2001:db8::9a",
          "2001:db8::9b",
          "2001:db8::9c",
          "2001:db8::9d",
          "2001:db8::9e",
          "2001:db8::9f",
          "2001:db8::a0",
          "2001:db8::a1",
          "2001:db8::a2",
          "2001:db8::a3",
          "2001:db8::a4",
          "2001:db8::a5",
          "2001:db8::a6",
          "2001:db8::a7",
          "2001:db8::a8",
          "2001:db8::a9",
          "2001:db8::aa",
          "2001:db8::ab",
          "2001:db8::ac",
          "2001:db8::ad",
          "2001:db8::ae",
          "2001:db8::af",
          "2001:db8::b0",
          "2001:db8::b1",
          "2001:db8::b2",
          "2001:db8::b3",
          "2001:db8::b4",
          "2001:db8::b5",
          "2001:db8::b6",
          "2001:db8::b7",
          "2001:db8::b8",
          "2001:db8::b9",
          "2001:db8::ba",
          "2001:db8::bb",
          "2001:db8::bc",
          "2001:db8::bd",
          "2001:db8::be",
          "2001:db8::bf",
          "2001:db8::c0",
          "2001:db8::c1",
          "2001:db8::c2",
          "2001:db8::c3",
          "2001:db8::c4",
          "2001:db8::c5",
          "2001:db8::c6",
          "2001:db8::c7",
          "2001:db8::c8",
          "2001:db8::c9",
          "2001:db8::ca",
          "2001:db8::cb",
          "2001:db8::cc",
          "2001:db8::cd",
          "2001:db8::ce",
          "2001:db8::cf",
          "2001:db8::d0",
          "2001:db8::d1",
          "2001:db8::d2",
          "2001:db8::d3",
          "2001:db8::d4",
          "2001:db8::d5",
          "2001:db8::d6",
          "2001:db8::d7",
          "2001:db8::d8",
          "2001:db8::d9",
          "2001:db8::da",
          "2001:db8::db",
          "2001:db8::dc",
          "2001:db8::dd",
          "2001:db8::de",
          "2001:db8::df",
          "2001:db8::e0",
          "2001:db8::e1",
          "2001:db8::e2",
          "2001:db8::e3",
          "2001:db8::e4",
          "2001:db8::e5",
          "2001:db8::e6",
          "2001:db8::e7",
          "2001:db8::e8",
          "2001:db8::e9",
          "2001:db8::ea",
          "2001:db8::eb",
          "2001:db8::ec",
          "2001:db8::ed",
          "2001:db8::ee",
          "2001:db8::ef",
          "2001:db8::f0",
          "2001:db8::f1",
          "2001:db8::f2",
          "2001:db8::f3",
          "2001:db8::f4",
          "2001:db8::f5",
          "2001:db8::f6",
          "2001:db8::f7",
          "2001:db8::f8",
          "2001:db8::f9",
          "2001:db8::fa",
          "2001:db8::fb",
          "2001:db8::fc",
          "2001:db8::fd",
          "2001:db8::fe",
          "2001:db8::ff",
          "2001:db8::100",
          "2001:db8::101",
          "2001:db8::102",
          "2001:db8::103",
          "2001:db8::104",
          "2001:db8::105",
          "2001:db8::106",
          "2001:db8::107",
          "2001:db8::108",
          "2001:db8::109",
          "2001:db8::10a",
          "2001:db8::10b",
          "2001:db8::10c",
          "2001:db8::10d",
          "2001:db8::10e",
          "2001:db8::10f",
          "2001:db8::110",
          "2001:db8::111",
          "2001:db8::112",
          "2001:db8::113",
          "2001:db8::114",
          "2001:db8::115",
          "2001:db8::116",
          "2001:db8::117",
          "2001:db8::118",
          "2001:db8::119",
          "2001:db8::11a",
          "2001:db8::11b",
          "2001:db8::11c",
          "2001:db8::11d",
          "2001:db8::11e",
          "2001:db8::11f",
          "2001:db8::120",
          "2001:db8::121",
          "2001:db8::122",
          "2001:db8::123",
          "2001:db8::124",
          "2001:db8::125",
          "2001:db8::126",
          "2001:db8::127",
          "2001:db8::128",
          "2001:db8::129",
          "2001:db8::12a",
          "2001:db8::12b",
          "2001:db8::12c",
          "2001:db8::12d",
          "2001:db8::12e",
          "2001:db8::12f",
          "2001:db8::130",
          "2001:db8::131",
          "2001:db8::132",
          "2001:db8::133",
          "2001:db8::134",
          "2001:db8::135",
          "2001:db8::136",
          "2001:db8::137",
          "2001:db8::138",
          "2001:db8::139",
          "2001:db8::13a",
          "2001:db8::13b",
          "2001:db8::13c",
          "2001:db8::13d",
          "2001:db8::13e",
          "2001:db8::13f",
          "2001:db8::140",
          "2001:db8::141",
          "2001:db8::142",
          "2001:db8::143",
          "2001:db8::144",
          "2001:db8::145",
          "2001:db8::146",
          "2001:db8::147",
          "2001:db8::148",
          "2001:db8::149",
          "2001:db8::14a",
          "2001:db8::14b",
          "2001:db8::14c",
          "2001:db8::14d",
          "2001:db8::14e",
          "2001:db8::14f",
          "2001:db8::150",
          "2001:db8::151",
          "2001:db8::152",
          "2001:db8::153",
          "2001:db8::154",
          "2001:db8::155",
          "2001:db8::156",
          "2001:db8::157",
          "2001:db8::158",
          "2001:db8::159",
          "2001:db8::15a",
          "2001:db8::15b",
          "2001:db8::15c",
          "2001:db8::15d",
          "2001:db8::15e",
          "2001:db8::15f",
          "2001:db8::160",
          "2001:db8::161",
          "2001:db8::162",
          "2001:db8::163",
          "2001:db8::164",
          "2001:db8::165",
          "2001:db8::166",
          "2001:db8::167",
          "2001:db8::168",
          "2001:db8::169",
          "2001:db8::16a",
          "2001:db8::16b",
          "2001:db8::16c",
          "2001:db8::16d",
          "2001:db8::16e",
          "2001:db8::16f",
          "2001:db8::170",
          "2001:db8::171",
          "2001:db8::172",
          "2001:db8::173",
          "2001:db8::174",
          "2001:db8::175",
          "2001:db8::176",
          "2001:db8::177",
          "2001:db8::178",
          "2001:db8::179",
          "2001:db8::17a",
          "2001:db8::17b",
          "2001:db8::17c",
          "2001:db8::17d",
          "2001:db8::17e",
          "2001:db8::17f",
          "2001:db8::180",
          "2001:db8::181",
          "2001:db8::182",
          "2001:db8::183",
          "2001:db8::184",
          "2001:db8::185",
          "2001:db8::186",
          "2001:db8::187",
          "2001:db8::188",
          "2001:db8::189",
          "2001:db8::18a",
          "2001:db8::18b",
          "2001:db8::18c",
          "2001:db8::18d",
          "2001:db8::18e",
          "2001:db8::18f",
          "2001:db8::190",
          "2001:db8::191",
          "2001:db8::192",
          "2001:db8::193",
          "2001:db8::194",
          "2001:db8::195",
          "2001:db8::196",
          "2001:db8::197",
          "2001:db8::198",
          "2001:db8::199",
          "2001:db8::19a",
          "2001:db8::19b",
          "2001:db8::19c",
          "2001:db8::19d",
          "2001:db8::19e",
          "2001:db8::19f",
          "2001:db8::1a0",
          "2001:db8::1a1",
          "2001:db8::1a2",
          "2001:db8::1a3",
          "2001:db8::1a4",
          "2001:db8::1a5",
          "2001:db8::1a6",
          "2001:db8::1a7",
          "2001:db8::1a8",
          "2001:db8::1a9",
          "2001:db8::1aa",
          "2001:db8::1ab",
          "2001:db8::1ac",
          "2001:db8::1ad",
          "2001:db8::1ae",
          "2001:db8::1af",
          "2001:db8::1b0",
          "2001:db8::1b1",
          "2001:db8::1b2",
          "2001:db8::1b3",
          "2001:db8::1b4",
          "2001:db8::1b5",
          "2001:db8::1b6",
          "2001:db8::1b7",
          "2001:db8::1b8",
          "2001:db8::1b9",
          "2001:db8::1ba",
          "2001:db8::1bb",
          "2001:db8::1bc",
          "2001:db8::1bd",
          "2001:db8::1be",
          "2001:db8::1bf",
          "2001:db8::1c0",
          "2001:db8::1c1",
          "2001:db8::1c2",
          "2001:db8::1c3",
          "2001:db8::1c4",
          "2001:db8::1c5",
          "2001:db8::1c6",
          "2001:db8::1c7",
          "2001:db8::1c8",
          "2001:db8::1c9",
          "2001:db8::1ca",
          "2001:db8::1cb",
          "2001:db8::1cc",
          "2001:db8::1cd",
          "2001:db8::1ce",
          "2001:db8::1cf",
          "2001:db8::1d0",
          "2001:db8::1d1",
          "2001:db8::1d2",
          "2001:db8::1d3",
          "2001:db8::1d4",
          "2001:db8::1d5",
          "2001:db8::1d6",
          "2001:db8::1d7",
          "2001:db8::1d8",
          "2001:db8::1d9",
          "2001:db8::1da",
          "2001:db8::1db",
          "2001:db8::1dc",
          "2001:db8::1dd",
          "2001:db8::1de",
          "2001:db8::1df",
          "2001:db8::1e0",
          "2001:db8::1e1",
          "2001:db8::1e2",
          "2001:db8::1e3",
          "2001:db8::1e4",
          "2001:db8::1e5",
          "2001:db8::1e6",
          "2001:db8::1e7",
          "2001:db8::1e8",
          "2001:db8::1e9",
          "2001:db8::1ea",
          "2001:db8::1eb",
          "2001:db8::1ec",
          "2001:db8::1ed",
          "2001:db8::1ee",
          "2001:db8::1ef",
          "2001:db8::1f0",
          "2001:db8::1f1",
          "2001:db8::1f2",
          "2001:db8::1f3",
          "2001:db8::1f4",
          "2001:db8::1f5",
          "2001:db8::1f6",
          "2001:db8::1f7",
          "2001:db8::1f8",
          "2001:db8::1f9",
          "2001:db8::1fa",
          "2001:db8::1fb",
          "2001:db8::1fc",
          "2001:db8::1fd",
          "2001:db8::1fe",
          "2001:db8::1ff",
          "2001:db8::200",
          "2001:db8::201",
          "2001:db8::202",
          "2001:db8::203",
          "2001:db8::204",
          "2001:db8::205",
          "2001:db8::206",
          "2001:db8::207",
          "2001:db8::208",
          "2001:db8::209",
          "2001:db8::20a",
          "2001:db8::20b",
          "2001:db8::20c",
          "2001:db8::20d",
          "2001:db8::20e",
          "2001:db8::20f",
          "2001:db8::210",
          "2001:db8::211",
          "2001:db8::212",
          "2001:db8::213",
          "2001:db8::214",
          "2001:db8::215",
          "2001:db8::216",
          "2001:db8::217",
          "2001:db8::218",
          "2001:db8::219",
          "2001:db8::21a",
          "2001:db8::21b",
          "2001:db8::21c",
          "2001:db8::21d",
          "2001:db8::21e",
          "2001:db8::21f",
          "2001:db8::220",
          "2001:db8::221",
          "2001:db8::222",
          "2001:db8::223",
          "2001:db8::224",
          "2001:db8::225",
          "2001:db8::226",
          "2001:db8::227",
          "2001:db8::228",
          "2001:db8::229",
          "2001:db8::22a",
          "2001:db8::22b",
          "2001:db8::22c",
          "2001:db8::22d",
          "2001:db8::22e",
          "2001:db8::22f",
          "2001:db8::230",
          "2001:db8::231",
          "2001:db8::232",
          "2001:db8::233",
          "2001:db8::234",
          "2001:db8::235",
          "2001:db8::236",
          "2001:db8::237",
          "2001:db8::238",
          "2001:db8::239",
          "2001:db8::23a",
          "2001:db8::23b",
          "2001:db8::23c",
          "2001:db8::23d",
          "2001:db8::23e",
          "2001:db8::23f",
          "2001:db8::240",
          "2001:db8::241",
          "2001:db8::242",
          "2001:db8::243",
          "2001:db8::244",
          "2001:db8::245",
          "2001:db8::246",
          "2001:db8::247",
          "2001:db8::248",
          "2001:db8::249",
          "2001:db8::24a",
          "2001:db8::24b",
          "2001:db8::24c",
          "2001:db8::24d",
          "2001:db8::24e",
          "2001:db8::24f",
          "2001:db8::250",
          "2001:db8::251",
          "2001:db8::252",
          "2001:db8::253",
          "2001:db8::254",
          "2001:db8::255",
          "2001:db8::256",
          "2001:db8::257",
          "2001:db8::258",
          "2001:db8::259",
          "2001:db8::25a",
          "2001:db8::25b",
          "2001:db8::25c",
          "2001:db8::25d",
          "2001:db8::25e",
          "2001:db8::25f",
          "2001:db8::260",
          "2001:db8::261",
          "2001:db8::262",
          "2001:db8::263",
          "2001:db8::264",
          "2001:db8::265",
          "2001:db8::266",
          "2001:db8::267",
          "2001:db8::268",
          "2001:db8::269",
          "2001:db8::26a",
          "2001:db8::26b",
          "2001:db8::26c",
          "2001:db8::26d",
          "2001:db8::26e",
          "2001:db8::26f",
          "2001:db8::270",
          "2001:db8::271",
          "2001:db8::272",
          "2001:db8::273",
          "2001:db8::274",
          "2001:db8::275",
          "2001:db8::276",
          "2001:db8::277",
          "2001:db8::278",
          "2001:db8::279",
          "2001:db8::27a",
          "2001:db8::27b",
          "2001:db8::27c",
          "2001:db8::27d",
          "2001:db8::27e",
          "2001:db8::27f",
          "2001:db8::280",
          "2001:db8::281",
          "2001:db8::282",
          "2001:db8::283",
          "2001:db8::284",
          "2001:db8::285",
          "2001:db8::286",
          "2001:db8::287",
          "2001:db8::288",
          "2001:db8::289",
          "2001:db8::28a",
          "2001:db8::28b",
          "2001:db8::28c",
          "2001:db8::28d",
          "2001:db8::28e",
          "2001:db8::28f",
          "2001:db8::290",
          "2001:db8::291",
          "2001:db8::292",
          "2001:db8::293",
          "2001:db8::294",
          "2001:db8::295",
          "2001:db8::296",
          "2001:db8::297",
          "2001:db8::298",
          "2001:db8::299",
          "2001:db8::29a",
          "2001:db8::29b",
          "2001:db8::29c",
          "2001:db8::29d",
          "2001:db8::29e",
          "2001:db8::29f",
          "2001:db8::2a0",
          "2001:db8::2a1",
          "2001:db8::2a2",
          "2001:db8::2a3",
          "2001:db8::2a4",
          "2001:db8::2a5",
          "2001:db8::2a6",
          "2001:db8::2a7",
          "2001:db8::2a8",
          "2001:db8::2a9",
          "2001:db8::2aa",
          "2001:db8::2ab",
          "2001:db8::2ac",
          "2001:db8::2ad",
          "2001:db8::2ae",
          "2001:db8::2af",
          "2001:db8::2b0",
          "2001:db8::2b1",
          "2001:db8::2b2",
          "2001:db8::2b3",
          "2001:db8::2b4",
          "2001:db8::2b5",
          "2001:db8::2b6",
          "2001:db8::2b7",
          "2001:db8::2b8",
          "2001:db8::2b9",
          "2001:db8::2ba",
          "2001:db8::2bb",
          "2001:db8::2bc",
          "2001:db8::2bd",
          "2001:db8::2be",
          "2001:db8::2bf",
          "2001:db8::2c0",
          "2001:db8::2c1",
          "2001:db8::2c2",
          "2001:db8::2c3",
          "2001:db8::2c4",
          "2001:db8::2c5",
          "2001:db8::2c6",
          "2001:db8::2c7",
          "2001:db8::2c8",
          "2001:db8::2c9",
          "2001:db8::2ca",
          "2001:db8::2cb",
          "2001:db8::2cc",
          "2001:db8::2cd",
          "2001:db8::2ce",
          "2001:db8::2cf",
          "2001:db8::2d0",
          "2001:db8::2d1",
          "2001:db8::2d2",
          "2001:db8::2d3",
          "2001:db8::2d4",
          "2001:db8::2d5",
          "2001:db8::2d6",
          "2001:db8::2d7",
          "2001:db8::2d8",
          "2001:db8::2d9",
          "2001:db8::2da",
          "2001:db8::2db",
          "2001:db8::2dc",
          "2001:db8::2dd",
          "2001:db8::2de",
          "2001:db8::2df",
          "2001:db8::2e0",
          "2001:db8::2e1",
          "2001:db8::2e2",
          "2001:db8::2e3",
          "2001:db8::2e4",
          "2001:db8::2e5",
          "2001:db8::2e6",
          "2001:db8::2e7",
          "2001:db8::2e8",
          "2001:db8::2e9",
          "2001:db8::2ea",
          "2001:db8::2eb",
          "2001:db8::2ec",
          "2001:db8::2ed",
          "2001:db8::2ee",
          "2001:db8::2ef",
          "2001:db8::2f0",
          "2001:db8::2f1",
          "2001:db8::2f2",
          "2001:db8::2f3",
          "2001:db8::2f4",
          "2001:db8::2f5",
          "2001:db8::2f6",
          "2001:db8::2f7",
          "2001:db8::2f8",
          "2001:db8::2f9",
          "2001:db8::2fa",
          "2001:db8::2fb",
          "2001:db8::2fc",
          "2001:db8::2fd",
          "2001:db8::2fe",
          "2001:db8::2ff",
          "2001:db8::300",
          "2001:db8::301",
          "2001:db8::302",
          "2001:db8::303",
          "2001:db8::304",
          "2001:db8::305",
          "2001:db8::306",
          "2001:db8::307",
          "2001:db8::308",
          "2001:db8::309",
          "2001:db8::30a",
          "2001:db8::30b",
          "2001:db8::30c",
          "2001:db8::30d",
          "2001:db8::30e",
          "2001:db8::30f",
          "2001:db8::310",
          "2001:db8::311",
          "2001:db8::312",
          "2001:db8::313",
          "2001:db8::314",
          "2001:db8::315",
          "2001:db8::316",
          "2001:db8::317",
          "2001:db8::318",
          "2001:db8::319",
          "2001:db8::31a",
          "2001:db8::31b",
          "2001:db8::31c",
          "2001:db8::31d",
          "2001:db8::31e",
          "2001:db8::31f",
          "2001:db8::320",
          "2001:db8::321",
          "2001:db8::322",
          "2001:db8::323",
          "2001:db8::324",
          "2001:db8::325",
          "2001:db8::326",
          "2001:db8::327",
          "2001:db8::328",
          "2001:db8::329",
          "2001:db8::32a",
          "2001:db8::32b",
          "2001:db8::32c",
          "2001:db8::32d",
          "2001:db8::32e",
          "2001:db8::32f",
          "2001:db8::330",
          "2001:db8::331",
          "2001:db8::332",
          "2001:db8::333",
          "2001:db8::334",
          "2001:db8::335",
          "2001:db8::336",
          "2001:db8::337",
          "2001:db8::338",
          "2001:db8::339",
          "2001:db8::33a",
          "2001:db8::33b",
          "2001:db8::33c",
          "2001:db8::33d",
          "2001:db8::33e",
          "2001:db8::33f",
          "2001:db8::340",
          "2001:db8::341",
          "2001:db8::342",
          "2001:db8::343",
          "2001:db8::344",
          "2001:db8::345",
          "2001:db8::346",
          "2001:db8::347",
          "2001:db8::348",
          "2001:db8::349",
          "2001:db8::34a",
          "2001:db8::34b",
          "2001:db8::34c",
          "2001:db8::34d",
          "2001:db8::34e",
          "2001:db8::34f",
          "2001:db8::350",
          "2001:db8::351",
          "2001:db8::352",
          "2001:db8::353",
          "2001:db8::354",
          "2001:db8::355",
          "2001:db8::356",
          "2001:db8::357",
          "2001:db8::358",
          "2001:db8::359",
          "2001:db8::35a",
          "2001:db8::35b",
          "2001:db8::35c",
          "2001:db8::35d",
          "2001:db8::35e",
          "2001:db8::35f",
          "2001:db8::360",
          "2001:db8::361",
          "2001:db8::362",
          "2001:db8::363",
          "2001:db8::364",
          "2001:db8::365",
          "2001:db8::366",
          "2001:db8::367",
          "2001:db8::368",
          "2001:db8::369",
          "2001:db8::36a",
          "2001:db8::36b",
          "2001:db8::36c",
          "2001:db8::36d",
          "2001:db8::36e",
          "2001:db8::36f",
          "2001:db8::370",
          "2001:db8::371",
          "2001:db8::372",
          "2001:db8::373",
          "2001:db8::374",
          "2001:db8::375",
          "2001:db8::376",
          "2001:db8::377",
          "2001:db8::378",
          "2001:db8::379",
          "2001:db8::37a",
          "2001:db8::37b",
          "2001:db8::37c",
          "2001:db8::37d",
          "2001:db8::37e",
          "2001:db8::37f",
          "2001:db8::380",
          "2001:db8::381",
          "2001:db8::382",
          "2001:db8::383",
          "2001:db8::384",
          "2001:db8::385",
          "2001:db8::386",
          "2001:db8::387",
          "2001:db8::388",
          "2001:db8::389",
          "2001:db8::38a",
          "2001:db8::38b",
          "2001:db8::38c",
          "2001:db8::38d",
          "2001:db8::38e",
          "2001:db8::38f",
          "2001:db8::390",
          "2001:db8::391",
          "2001:db8::392",
          "2001:db8::393",
          "2001:db8::394",
          "2001:db8::395",
          "2001:db8::396",
          "2001:db8::397",
          "2001:db8::398",
          "2001:db8::399",
          "2001:db8::39a",
          "2001:db8::39b",
          "2001:db8::39c",
          "2001:db8::39d",
          "2001:db8::39e",
          "2001:db8::39f",
          "2001:db8::3a0",
          "2001:db8::3a1",
          "2001:db8::3a2",
          "2001:db8::3a3",
          "2001:db8::3a4",
          "2001:db8::3a5",
          "2001:db8::3a6",
          "2001:db8::3a7",
          "2001:db8::3a8",
          "2001:db8::3a9",
          "2001:db8::3aa",
          "2001:db8::3ab",
          "2001:db8::3ac",
          "2001:db8::3ad",
          "2001:db8::3ae",
          "2001:db8::3af",
          "2001:db8::3b0",
          "2001:db8::3b1",
          "2001:db8::3b2",
          "2001:db8::3b3",
          "2001:db8::3b4",
          "2001:db8::3b5",
          "2001:db8::3b6",
          "2001:db8::3b7",
          "2001:db8::3b8",
          "2001:db8::3b9",
          "2001:db8::3ba",
          "2001:db8::3bb",
          "2001:db8::3bc",
          "2001:db8::3bd",
          "2001:db8::3be",
          "2001:db8::3bf",
          "2001:db8::3c0",
          "2001:db8::3c1",
          "2001:db8::3c2",
          "2001:db8::3c3",
          "2001:db8::3c4",
          "2001:db8::3c5",
          "2001:db8::3c6",
          "2001:db8::3c7",
          "2001:db8::3c8",
          "2001:db8::3c9",
          "2001:db8::3ca",
          "2001:db8::3cb",
          "2001:db8::3cc",
          "2001:db8::3cd",
          "2001:db8::3ce",
          "2001:db8::3cf",
          "2001:db8::3d0",
          "2001:db8::3d1",
          "2001:db8::3d2",
          "2001:db8::3d3",
          "2001:db8::3d4",
          "2001:db8::3d5",
          "2001:db8::3d6",
          "2001:db8::3d7",
          "2001:db8::3d8",
          "2001:db8::3d9",
          "2001:db8::3da",
          "2001:db8::3db",
          "2001:db8::3dc",
          "2001:db8::3dd",
          "2001:db8::3de",
          "2001:db8::3df",
          "2001:db8::3e0",
          "2001:db8::3e1",
          "2001:db8::3e2",
          "2001:db8::3e3",
          "2001:db8::3e4",
          "2001:db8::3e5",
          "2001:db8::3e6",
          "2001:db8::3e7",
          "2001:db8::3e8",
          "2001:db8::3e9",
          "2001:db8::3ea",
          "2001:db8::3eb",
          "2001:db8::3ec",
          "2001:db8::3ed",
          "2001:db8::3ee",
          "2001:db8::3ef",
          "2001:db8::3f0",
          "2001:db8::3f1",
          "2001:db8::3f2",
          "2001:db8::3f3",
          "2001:db8::3f4",
          "2001:db8::3f5",
          "2001:db8::3f6",
          "2001:db8::3f7",
          "2001:db8::3f8",
          "2001:db8::3f9",
          "2001:db8::3fa",
          "2001:db8::3fb",
          "2001:db8::3fc",
          "2001:db8::3fd",
          "2001:db8::3fe",
          "2001:db8::3ff",
          "2001:db8::400",
          "2001:db8::401",
          "2001:db8::402",
          "2001:db8::403",
          "2001:db8::404",
          "2001:db8::405",
          "2001:db8::406",
          "2001:db8::407",
          "2001:db8::408",
          "2001:db8::409",
          "2001:db8::40a",
          "2001:db8::40b",
          "2001:db8::40c",
          "2001:db8::40d",
          "2001:db8::40e",
          "2001:db8::40f",
          "2001:db8::410",
          "2001:db8::411",
          "2001:db8::412",
          "2001:db8::413",
          "2001:db8::414",
          "2001:db8::415",
          "2001:db8::416",
          "2001:db8::417",
          "2001:db8::418",
          "2001:db8::419",
          "2001:db8::41a",
          "2001:db8::41b",
          "2001:db8::41c",
          "2001:db8::41d",
          "2001:db8::41e",
          "2001:db8::41f",
          "2001:db8::420",
          "2001:db8::421",
          "2001:db8::422",
          "2001:db8::423",
          "2001:db8::424",
          "2001:db8::425",
          "2001:db8::426",
          "2001:db8::427",
          "2001:db8::428",
          "2001:db8::429",
          "2001:db8::42a",
          "2001:db8::42b",
          "2001:db8::42c",
          "2001:db8::42d",
          "2001:db8::42e",
          "2001:db8::42f",
          "2001:db8::430",
          "2001:db8::431",
          "2001:db8::432",
          "2001:db8::433",
          "2001:db8::434",
          "2001:db8::435",
          "2001:db8::436",
          "2001:db8::437",
          "2001:db8::438",
          "2001:db8::439",
          "2001:db8::43a",
          "2001:db8::43b",
          "2001:db8::43c",
          "2001:db8::43d",
          "2001:db8::43e",
          "2001:db8::43f",
          "2001:db8::440",
          "2001:db8::441",
          "2001:db8::442",
          "2001:db8::443",
          "2001:db8::444",
          "2001:db8::445",
          "2001:db8::446",
          "2001:db8::447",
          "2001:db8::448",
          "2001:db8::449",
          "2001:db8::44a",
          "2001:db8::44b",
          "2001:db8::44c",
          "2001:db8::44d",
          "2001:db8::44e",
          "2001:db8::44f",
          "2001:db8::450",
          "2001:db8::451",
          "2001:db8::452",
          "2001:db8::453",
          "2001:db8::454",
          "2001:db8::455",
          "2001:db8::456",
          "2001:db8::457",
          "2001:db8::458",
          "2001:db8::459",
          "2001:db8::45a",
          "2001:db8::45b",
          "2001:db8::45c",
          "2001:db8::45d",
          "2001:db8::45e",
          "2001:db8::45f",
          "2001:db8::460",
          "2001:db8::461",
          "2001:db8::462",
          "2001:db8::463",
          "2001:db8::464",
          "2001:db8::465",
          "2001:db8::466",
          "2001:db8::467",
          "2001:db8::468",
          "2001:db8::469",
          "2001:db8::46a",
          "2001:db8::46b",
          "2001:db8::46c",
          "2001:db8::46d",
          "2001:db8::46e",
          "2001:db8::46f",
          "2001:db8::470",
          "2001:db8::471",
          "2001:db8::472",
          "2001:db8::473",
          "2001:db8::474",
          "2001:db8::475",
          "2001:db8::476",
          "2001:db8::477",
          "2001:db8::478",
          "2001:db8::479",
          "2001:db8::47a",
          "2001:db8::47b",
          "2001:db8::47c",
          "2001:db8::47d",
          "2001:db8::47e",
          "2001:db8::47f",
          "2001:db8::480",
          "2001:db8::481",
          "2001:db8::482",
          "2001:db8::483",
          "2001:db8::484",
          "2001:db8::485",
          "2001:db8::486",
          "2001:db8::487",
          "2001:db8::488",
          "2001:db8::489",
          "2001:db8::48a",
          "2001:db8::48b",
          "2001:db8::48c",
          "2001:db8::48d",
          "2001:db8::48e",
          "2001:db8::48f",
          "2001:db8::490",
          "2001:db8::491",
          "2001:db8::492",
          "2001:db8::493",
          "2001:db8::494",
          "2001:db8::495",
          "2001:db8::496",
          "2001:db8::497",
          "2001:db8::498",
          "2001:db8::499",
          "2001:db8::49a",
          "2001:db8::49b",
          "2001:db8::49c",
          "2001:db8::49d",
          "2001:db8::49e",
          "2001:db8::49f",
          "2001:db8::4a0",
          "2001:db8::4a1",
          "2001:db8::4a2",
          "2001:db8::4a3",
          "2001:db8::4a4",
          "2001:db8::4a5",
          "2001:db8::4a6",
          "2001:db8::4a7",
          "2001:db8::4a8",
          "2001:db8::4a9",
          "2001:db8::4aa",
          "2001:db8::4ab",
          "2001:db8::4ac",
          "2001:db8::4ad",
          "2001:db8::4ae",
          "2001:db8::4af",
          "2001:db8::4b0",
          "2001:db8::4b1",
          "2001:db8::4b2",
          "2001:db8::4b3",
          "2001:db8::4b4",
          "2001:db8::4b5",
          "2001:db8::4b6",
          "2001:db8::4b7",
          "2001:db8::4b8",
          "2001:db8::4b9",
          "2001:db8::4ba",
          "2001:db8::4bb",
          "2001:db8::4bc",
          "2001:db8::4bd",
          "2001:db8::4be",
          "2001:db8::4bf",
          "2001:db8::4c0",
          "2001:db8::4c1",
          "2001:db8::4c2",
          "2001:db8::4c3",
          "2001:db8::4c4",
          "2001:db8::4c5",
          "2001:db8::4c6",
          "2001:db8::4c7",
          "2001:db8::4c8",
          "2001:db8::4c9",
          "2001:db8::4ca",
          "2001:db8::4cb",
          "2001:db8::4cc",
          "2001:db8::4cd",
          "2001:db8::4ce",
          "2001:db8::4cf",
          "2001:db8::4d0",
          "2001:db8::4d1",
          "2001:db8::4d2",
          "2001:db8::4d3",
          "2001:db8::4d4",
          "2001:db8::4d5",
          "2001:db8::4d6",
          "2001:db8::4d7",
          "2001:db8::4d8",
          "2001:db8::4d9",
          "2001:db8::4da",
          "2001:db8::4db",
          "2001:db8::4dc",
          "2001:db8::4dd",
          "2001:db8::4de",
          "2001:db8::4df",
          "2001:db8::4e0",
          "2001:db8::4e1",
          "2001:db8::4e2",
          "2001:db8::4e3",
          "2001:db8::4e4",
          "2001:db8::4e5",
          "2001:db8::4e6",
          "2001:db8::4e7",
          "2001:db8::4e8",
          "2001:db8::4e9",
          "2001:db8::4ea",
          "2001:db8::4eb",
          "2001:db8::4ec",
          "2001:db8::4ed",
          "2001:db8::4ee",
          "2001:db8::4ef",
          "2001:db8::4f0",
          "2001:db8::4f1",
          "2001:db8::4f2",
          "2001:db8::4f3",
          "2001:db8::4f4",
          "2001:db8::4f5",
          "2001:db8::4f6",
          "2001:db8::4f7",
          "2001:db8::4f8",
          "2001:db8::4f9",
          "2001:db8::4fa",
          "2001:db8::4fb",
          "2001:db8::4fc",
          "2001:db8::4fd",
          "2001:db8::4fe",
          "2001:db8::4ff",
          "2001:db8::500",
          "2001:db8::501",
          "2001:db8::502",
          "2001:db8::503",
          "2001:db8::504",
          "2001:db8::505",
          "2001:db8::506",
          "2001:db8::507",
          "2001:db8::508",
          "2001:db8::509",
          "2001:db8::50a",
          "2001:db8::50b",
          "2001:db8::50c",
          "2001:db8::50d",
          "2001:db8::50e",
          "2001:db8::50f",
          "2001:db8::510",
          "2001:db8::511",
          "2001:db8::512",
          "2001:db8::513",
          "2001:db8::514",
          "2001:db8::515",
          "2001:db8::516",
          "2001:db8::517",
          "2001:db8::518",
          "2001:db8::519",
          "2001:db8::51a",
          "2001:db8::51b",
          "2001:db8::51c",
          "2001:db8::51d",
          "2001:db8::51e",
          "2001:db8::51f",
          "2001:db8::520",
          "2001:db8::521",
          "2001:db8::522",
          "2001:db8::523",
          "2001:db8::524",
          "2001:db8::525",
          "2001:db8::526",
          "2001:db8::527",
          "2001:db8::528",
          "2001:db8::529",
          "2001:db8::52a",
          "2001:db8::52b",
          "2001:db8::52c",
          "2001:db8::52d",
          "2001:db8::52e",
          "2001:db8::52f",
          "2001:db8::530",
          "2001:db8::531",
          "2001:db8::532",
          "2001:db8::533",
          "2001:db8::534",
          "2001:db8::535",
          "2001:db8::536",
          "2001:db8::537",
          "2001:db8::538",
          "2001:db8::539",
          "2001:db8::53a",
          "2001:db8::53b",
          "2001:db8::53c",
          "2001:db8::53d",
          "2001:db8::53e",
          "2001:db8::53f",
          "2001:db8::540",
          "2001:db8::541",
          "2001:db8::542",
          "2001:db8::543",
          "2001:db8::544",
          "2001:db8::545",
          "2001:db8::546",
          "2001:db8::547",
          "2001:db8::548",
          "2001:db8::549",
          "2001:db8::54a",
          "2001:db8::54b",
          "2001:db8::54c",
          "2001:db8::54d",
          "2001:db8::54e",
          "2001:db8::54f",
          "2001:db8::550",
          "2001:db8::551",
          "2001:db8::552",
          "2001:db8::553",
          "2001:db8::554",
          "2001:db8::555",
          "2001:db8::556",
          "2001:db8::557",
          "2001:db8::558",
          "2001:db8::559",
          "2001:db8::55a",
          "2001:db8::55b",
          "2001:db8::55c",
          "2001:db8::55d",
          "2001:db8::55e",
          "2001:db8::55f",
          "2001:db8::560",
          "2001:db8::561",
          "2001:db8::562",
          "2001:db8::563",
          "2001:db8::564",
          "2001:db8::565",
          "2001:db8::566",
          "2001:db8::567",
          "2001:db8::568",
          "2001:db8::569",
          "2001:db8::56a",
          "2001:db8::56b",
          "2001:db8::56c",
          "2001:db8::56d",
          "2001:db8::56e",
          "2001:db8::56f",
          "2001:db8::570",
          "2001:db8::571",
          "2001:db8::572",
          "2001:db8::573",
          "2001:db8::574",
          "2001:db8::575",
          "2001:db8::576",
          "2001:db8::577",
          "2001:db8::578",
          "2001:db8::579",
          "2001:db8::57a",
          "2001:db8::57b",
          "2001:db8::57c",
          "2001:db8::57d",
          "2001:db8::57e",
          "2001:db8::57f",
          "2001:db8::580",
          "2001:db8::581",
          "2001:db8::582",
          "2001:db8::583",
          "2001:db8::584",
          "2001:db8::585",
          "2001:db8::586",
          "2001:db8::587",
          "2001:db8::588",
          "2001:db8::589",
          "2001:db8::58a",
          "2001:db8::58b",
          "2001:db8::58c",
          "2001:db8::58d",
          "2001:db8::58e",
          "2001:db8::58f",
          "2001:db8::590",
          "2001:db8::591",
          "2001:db8::592",
          "2001:db8::593",
          "2001:db8::594",
          "2001:db8::595",
          "2001:db8::596",
          "2001:db8::597",
          "2001:db8::598",
          "2001:db8::599",
          "2001:db8::59a",
          "2001:db8::59b",
          "2001:db8::59c",
          "2001:db8::59d",
          "2001:db8::59e",
          "2001:db8::59f",
          "2001:db8::5a0",
          "2001:db8::5a1",
          "2001:db8::5a2",
          "2001:db8::5a3",
          "2001:db8::5a4",
          "2001:db8::5a5",
          "2001:db8::5a6",
          "2001:db8::5a7",
          "2001:db8::5a8",
          "2001:db8::5a9",
          "2001:db8::5aa",
          "2001:db8::5ab",
          "2001:db8::5ac",
          "2001:db8::5ad",
          "2001:db8::5ae",
          "2001:db8::5af",
          "2001:db8::5b0",
          "2001:db8::5b1",
          "2001:db8::5b2",
          "2001:db8::5b3",
          "2001:db8::5b4",
          "2001:db8::5b5",
          "2001:db8::5b6",
          "2001:db8::5b7",
          "2001:db8::5b8",
          "2001:db8::5b9",
          "2001:db8::5ba",
          "2001:db8::5bb",
          "2001:db8::5bc",
          "2001:db8::5bd",
          "2001:db8::5be",
          "2001:db8::5bf",
          "2001:db8::5c0",
          "2001:db8::5c1",
          "2001:db8::5c2",
          "2001:db8::5c3",
          "2001:db8::5c4",
          "2001:db8::5c5",
          "2001:db8::5c6",
          "2001:db8::5c7",
          "2001:db8::5c8",
          "2001:db8::5c9",
          "2001:db8::5ca",
          "2001:db8::5cb",
          "2001:db8::5cc",
          "2001:db8::5cd",
          "2001:db8::5ce",
          "2001:db8::5cf",
          "2001:db8::5d0",
          "2001:db8::5d1",
          "2001:db8::5d2",
          "2001:db8::5d3",
          "2001:db8::5d4",
          "2001:db8::5d5",
          "2001:db8::5d6",
          "2001:db8::5d7",
          "2001:db8::5d8",
          "2001:db8::5d9",
          "2001:db8::5da",
          "2001:db8::5db",
          "2001:db8::5dc",
          "2001:db8::5dd",
          "2001:db8::5de",
          "2001:db8::5df",
          "2001:db8::5e0",
          "2001:db8::5e1",
          "2001:db8::5e2",
          "2001:db8::5e3",
          "2001:db8::5e4",
          "2001:db8::5e5",
          "2001:db8::5e6",
          "2001:db8::5e7",
          "2001:db8::5e8",
          "2001:db8::5e9",
          "2001:db8::5ea",
          "2001:db8::5eb",
          "2001:db8::5ec",
          "2001:db8::5ed",
          "2001:db8::5ee",
          "2001:db8::5ef",
          "2001:db8::5f0",
          "2001:db8::5f1",
          "2001:db8::5f2",
          "2001:db8::5f3",
          "2001:db8::5f4",
          "2001:db8::5f5",
          "2001:db8::5f6",
          "2001:db8::5f7",
          "2001:db8::5f8",
          "2001:db8::5f9",
          "2001:db8::5fa",
          "2001:db8::5fb",
          "2001:db8::5fc",
          "2001:db8::5fd",
          "2001:db8::5fe",
          "2001:db8::5ff",
          "2001:db8::600",
          "2001:db8::601",
          "2001:db8::602",
          "2001:db8::603",
          "2001:db8::604",
          "2001:db8::605",
          "2001:db8::606",
          "2001:db8::607",
          "2001:db8::608",
          "2001:db8::609",
          "2001:db8::60a",
          "2001:db8::60b",
          "2001:db8::60c",
          "2001:db8::60d",
          "2001:db8::60e",
          "2001:db8::60f",
          "2001:db8::610",
          "2001:db8::611",
          "2001:db8::612",
          "2001:db8::613",
          "2001:db8::614",
          "2001:db8::615",
          "2001:db8::616",
          "2001:db8::617",
          "2001:db8::618",
          "2001:db8::619",
          "2001:db8::61a",
          "2001:db8::61b",
          "2001:db8::61c",
          "2001:db8::61d",
          "2001:db8::61e",
          "2001:db8::61f",
          "2001:db8::620",
          "2001:db8::621",
          "2001:db8::622",
          "2001:db8::623",
          "2001:db8::624",
          "2001:db8::625",
          "2001:db8::626",
          "2001:db8::627",
          "2001:db8::628",
          "2001:db8::629",
          "2001:db8::62a",
          "2001:db8::62b",
          "2001:db8::62c",
          "2001:db8::62d",
          "2001:db8::62e",
          "2001:db8::62f",
          "2001:db8::630",
          "2001:db8::631",
          "2001:db8::632",
          "2001:db8::633",
          "2001:db8::634",
          "2001:db8::635",
          "2001:db8::636",
          "2001:db8::637",
          "2001:db8::638",
          "2001:db8::639",
          "2001:db8::63a",
          "2001:db8::63b",
          "2001:db8::63c",
          "2001:db8::63d",
          "2001:db8::63e",
          "2001:db8::63f",
          "2001:db8::640",
          "2001:db8::641",
          "2001:db8::642",
          "2001:db8::643",
          "2001:db8::644",
          "2001:db8::645",
          "2001:db8::646",
          "2001:db8::647",
          "2001:db8::648",
          "2001:db8::649",
          "2001:db8::64a",
          "2001:db8::64b",
          "2001:db8::64c",
          "2001:db8::64d",
          "2001:db8::64e",
          "2001:db8::64f",
          "2001:db8::650",
          "2001:db8::651",
          "2001:db8::652",
          "2001:db8::653",
          "2001:db8::654",
          "2001:db8::655",
          "2001:db8::656",
          "2001:db8::657",
          "2001:db8::658",
          "2001:db8::659",
          "2001:db8::65a",
          "2001:db8::65b",
          "2001:db8::65c",
          "2001:db8::65d",
          "2001:db8::65e",
          "2001:db8::65f",
          "2001:db8::660",
          "2001:db8::661",
          "2001:db8::662",
          "2001:db8::663",
          "2001:db8::664",
          "2001:db8::665",
          "2001:db8::666",
          "2001:db8::667",
          "2001:db8::668",
          "2001:db8::669",
          "2001:db8::66a",
          "2001:db8::66b",
          "2001:db8::66c",
          "2001:db8::66d",
          "2001:db8::66e",
          "2001:db8::66f",
          "2001:db8::670",
          "2001:db8::671",
          "2001:db8::672",
          "2001:db8::673",
          "2001:db8::674",
          "2001:db8::675",
          "2001:db8::676",
          "2001:db8::677",
          "2001:db8::678",
          "2001:db8::679",
          "2001:db8::67a",
          "2001:db8::67b",
          "2001:db8::67c",
          "2001:db8::67d",
          "2001:db8::67e",
          "2001:db8::67f",
          "2001:db8::680",
          "2001:db8::681",
          "2001:db8::682",
          "2001:db8::683",
          "2001:db8::684",
          "2001:db8::685",
          "2001:db8::686",
          "2001:db8::687",
          "2001:db8::688",
          "2001:db8::689",
          "2001:db8::68a",
          "2001:db8::68b",
          "2001:db8::68c",
          "2001:db8::68d",
          "2001:db8::68e",
          "2001:db8::68f",
          "2001:db8::690",
          "2001:db8::691",
          "2001:db8::692",
          "2001:db8::693",
          "2001:db8::694",
          "2001:db8::695",
          "2001:db8::696",
          "2001:db8::697",
          "2001:db8::698",
          "2001:db8::699",
          "2001:db8::69a",
          "2001:db8::69b",
          "2001:db8::69c",
          "2001:db8::69d",
          "2001:db8::69e",
          "2001:db8::69f",
          "2001:db8::6a0",
          "2001:db8::6a1",
          "2001:db8::6a2",
          "2001:db8::6a3",
          "2001:db8::6a4",
          "2001:db8::6a5",
          "2001:db8::6a6",
          "2001:db8::6a7",
          "2001:db8::6a8",
          "2001:db8::6a9",
          "2001:db8::6aa",
          "2001:db8::6ab",
          "2001:db8::6ac",
          "2001:db8::6ad",
          "2001:db8::6ae",
          "2001:db8::6af",
          "2001:db8::6b0",
          "2001:db8::6b1",
          "2001:db8::6b2",
          "2001:db8::6b3",
          "2001:db8::6b4",
          "2001:db8::6b5",
          "2001:db8::6b6",
          "2001:db8::6b7",
          "2001:db8::6b8",
          "2001:db8::6b9",
          "2001:db8::6ba",
          "2001:db8::6bb",
          "2001:db8::6bc",
          "2001:db8::6bd",
          "2001:db8::6be",
          "2001:db8::6bf",
          "2001:db8::6c0",
          "2001:db8::6c1",
          "2001:db8::6c2",
          "2001:db8::6c3",
          "2001:db8::6c4",
          "2001:db8::6c5",
          "2001:db8::6c6",
          "2001:db8::6c7",
          "2001:db8::6c8",
          "2001:db8::6c9",
          "2001:db8::6ca",
          "2001:db8::6cb",
          "2001:db8::6cc",
          "2001:db8::6cd",
          "2001:db8::6ce",
          "2001:db8::6cf",
          "2001:db8::6d0",
          "2001:db8::6d1",
          "2001:db8::6d2",
          "2001:db8::6d3",
          "2001:db8::6d4",
          "2001:db8::6d5",
          "2001:db8::6d6",
          "2001:db8::6d7",
          "2001:db8::6d8",
          "2001:db8::6d9",
          "2001:db8::6da",
          "2001:db8::6db",
          "2001:db8::6dc",
          "2001:db8::6dd",
          "2001:db8::6de",
          "2001:db8::6df",
          "2001:db8::6e0",
          "2001:db8::6e1",
          "2001:db8::6e2",
          "2001:db8::6e3",
          "2001:db8::6e4",
          "2001:db8::6e5",
          "2001:db8::6e6",
          "2001:db8::6e7",
          "2001:db8::6e8",
          "2001:db8::6e9",
          "2001:db8::6ea",
          "2001:db8::6eb",
          "2001:db8::6ec",
          "2001:db8::6ed",
          "2001:db8::6ee",
          "2001:db8::6ef",
          "2001:db8::6f0",
          "2001:db8::6f1",
          "2001:db8::6f2",
          "2001:db8::6f3",
          "2001:db8::6f4",
          "2001:db8::6f5",
          "2001:db8::6f6",
          "2001:db8::6f7",
          "2001:db8::6f8",
          "2001:db8::6f9",
          "2001:db8::6fa",
          "2001:db8::6fb",
          "2001:db8::6fc",
          "2001:db8::6fd",
          "2001:db8::6fe",
          "2001:db8::6ff",
          "2001:db8::700",
          "2001:db8::701",
          "2001:db8::702",
          "2001:db8::703",
          "2001:db8::704",
          "2001:db8::705",
          "2001:db8::706",
          "2001:db8::707",
          "2001:db8::708",
          "2001:db8::709",
          "2001:db8::70a",
          "2001:db8::70b",
          "2001:db8::70c",
          "2001:db8::70d",
          "2001:db8::70e",
          "2001:db8::70f",
          "2001:db8::710",
          "2001:db8::711",
          "2001:db8::712",
          "2001:db8::713",
          "2001:db8::714",
          "2001:db8::715",
          "2001:db8::716",
          "2001:db8::717",
          "2001:db8::718",
          "2001:db8::719",
          "2001:db8::71a",
          "2001:db8::71b",
          "2001:db8::71c",
          "2001:db8::71d",
          "2001:db8::71e",
          "2001:db8::71f",
          "2001:db8::720",
          "2001:db8::721",
          "2001:db8::722",
          "2001:db8::723",
          "2001:db8::724",
          "2001:db8::725",
          "2001:db8::726",
          "2001:db8::727",
          "2001:db8::728",
          "2001:db8::729",
          "2001:db8::72a",
          "2001:db8::72b",
          "2001:db8::72c",
          "2001:db8::72d",
          "2001:db8::72e",
          "2001:db8::72f",
          "2001:db8::730",
          "2001:db8::731",
          "2001:db8::732",
          "2001:db8::733",
          "2001:db8::734",
          "2001:db8::735",
          "2001:db8::736",
          "2001:db8::737",
          "2001:db8::738",
          "2001:db8::739",
          "2001:db8::73a",
          "2001:db8::73b",
          "2001:db8::73c",
          "2001:db8::73d",
          "2001:db8::73e",
          "2001:db8::73f",
          "2001:db8::740",
          "2001:db8::741",
          "2001:db8::742",
          "2001:db8::743",
          "2001:db8::744",
          "2001:db8::745",
          "2001:db8::746",
          "2001:db8::747",
          "2001:db8::748",
          "2001:db8::749",
          "2001:db8::74a",
          "2001:db8::74b",
          "2001:db8::74c",
          "2001:db8::74d",
          "2001:db8::74e",
          "2001:db8::74f",
          "2001:db8::750",
          "2001:db8::751",
          "2001:db8::752",
          "2001:db8::753",
          "2001:db8::754",
          "2001:db8::755",
          "2001:db8::756",
          "2001:db8::757",
          "2001:db8::758",
          "2001:db8::759",
          "2001:db8::75a",
          "2001:db8::75b",
          "2001:db8::75c",
          "2001:db8::75d",
          "2001:db8::75e",
          "2001:db8::75f",
          "2001:db8::760",
          "2001:db8::761",
          "2001:db8::762",
          "2001:db8::763",
          "2001:db8::764",
          "2001:db8::765",
          "2001:db8::766",
          "2001:db8::767",
          "2001:db8::768",
          "2001:db8::769",
          "2001:db8::76a",
          "2001:db8::76b",
          "2001:db8::76c",
          "2001:db8::76d",
          "2001:db8::76e",
          "2001:db8::76f",
          "2001:db8::770",
          "2001:db8::771",
          "2001:db8::772",
          "2001:db8::773",
          "2001:db8::774",
          "2001:db8::775",
          "2001:db8::776",
          "2001:db8::777",
          "2001:db8::778",
          "2001:db8::779",
          "2001:db8::77a",
          "2001:db8::77b",
          "2001:db8::77c",
          "2001:db8::77d",
          "2001:db8::77e",
          "2001:db8::77f",
          "2001:db8::780",
          "2001:db8::781",
          "2001:db8::782",
          "2001:db8::783",
          "2001:db8::784",
          "2001:db8::785",
          "2001:db8::786",
          "2001:db8::787",
          "2001:db8::788",
          "2001:db8::789",
          "2001:db8::78a",
          "2001:db8::78b",
          "2001:db8::78c",
          "2001:db8::78d",
          "2001:db8::78e",
          "2001:db8::78f",
          "2001:db8::790",
          "2001:db8::791",
          "2001:db8::792",
          "2001:db8::793",
          "2001:db8::794",
          "2001:db8::795",
          "2001:db8::796",
          "2001:db8::797",
          "2001:db8::798",
          "2001:db8::799",
          "2001:db8::79a",
          "2001:db8::79b",
          "2001:db8::79c",
          "2001:db8::79d",
          "2001:db8::79e",
          "2001:db8::79f",
          "2001:db8::7a0",
          "2001:db8::7a1",
          "2001:db8::7a2",
          "2001:db8::7a3",
          "2001:db8::7a4",
          "2001:db8::7a5",
          "2001:db8::7a6",
          "2001:db8::7a7",
          "2001:db8::7a8",
          "2001:db8::7a9",
          "2001:db8::7aa",
          "2001:db8::7ab",
          "2001:db8::7ac",
          "2001:db8::7ad",
          "2001:db8::7ae",
          "2001:db8::7af",
          "2001:db8::7b0",
          "2001:db8::7b1",
          "2001:db8::7b2",
          "2001:db8::7b3",
          "2001:db8::7b4",
          "2001:db8::7b5",
          "2001:db8::7b6",
          "2001:db8::7b7",
          "2001:db8::7b8",
          "2001:db8::7b9",
          "2001:db8::7ba",
          "2001:db8::7bb",
          "2001:db8::7bc",
          "2001:db8::7bd",
          "2001:db8::7be",
          "2001:db8::7bf",
          "2001:db8::7c0",
          "2001:db8::7c1",
          "2001:db8::7c2",
          "2001:db8::7c3",
          "2001:db8::7c4",
          "2001:db8::7c5",
          "2001:db8::7c6",
          "2001:db8::7c7",
          "2001:db8::7c8",
          "2001:db8::7c9",
          "2001:db8::7ca",
          "2001:db8::7cb",
          "2001:db8::7cc",
          "2001:db8::7cd",
          "2001:db8::7ce",
          "2001:db8::7cf",
          "2001:db8::7d0",
          "2001:db8::7d1",
          "2001:db8::7d2",
          "2001:db8::7d3",
          "2001:db8::7d4",
          "2001:db8::7d5",
          "2001:db8::7d6",
          "2001:db8::7d7",
          "2001:db8::7d8",
          "2001:db8::7d9",
          "2001:db8::7da",
          "2001:db8::7db",
          "2001:db8::7dc",
          "2001:db8::7dd",
          "2001:db8::7de",
          "2001:db8::7df",
          "2001:db8::7e0",
          "2001:db8::7e1",
          "2001:db8::7e2",
          "2001:db8::7e3",
          "2001:db8::7e4",
          "2001:db8::7e5",
          "2001:db8::7e6",
          "2001:db8::7e7",
          "2001:db8::7e8",
          "2001:db8::7e9",
          "2001:db8::7ea",
          "2001:db8::7eb",
          "2001:db8::7ec",
          "2001:db8::7ed",
          "2001:db8::7ee",
          "2001:db8::7ef",
          "2001:db8::7f0",
          "2001:db8::7f1",
          "2001:db8::7f2",
          "2001:db8::7f3",
          "2001:db8::7f4",
          "2001:db8::7f5",
          "2001:db8::7f6",
          "2001:db8::7f7",
          "2001:db8::7f8",
          "2001:db8::7f9",
          "2001:db8::7fa",
          "2001:db8::7fb",
          "2001:db8::7fc",
          "2001:db8::7fd",
          "2001:db8::7fe",
          "2001:db8::7ff",
          "2001:db8::800",
          "2001:db8::801",
          "2001:db8::802",
          "2001:db8::803",
          "2001:db8::804",
          "2001:db8::805",
          "2001:db8::806",
          "2001:db8::807",
          "2001:db8::808",
          "2001:db8::809",
          "2001:db8::80a",
          "2001:db8::80b",
          "2001:db8::80c",
          "2001:db8::80d",
          "2001:db8::80e",
          "2001:db8::80f",
          "2001:db8::810",
          "2001:db8::811",
          "2001:db8::812",
          "2001:db8::813",
          "2001:db8::814",
          "2001:db8::815",
          "2001:db8::816",
          "2001:db8::817",
          "2001:db8::818",
          "2001:db8::819",
          "2001:db8::81a",
          "2001:db8::81b",
          "2001:db8::81c",
          "2001:db8::81d",
          "2001:db8::81e",
          "2001:db8::81f",
          "2001:db8::820",
          "2001:db8::821",
          "2001:db8::822",
          "2001:db8::823",
          "2001:db8::824",
          "2001:db8::825",
          "2001:db8::826",
          "2001:db8::827",
          "2001:db8::828",
          "2001:db8::829",
          "2001:db8::82a",
          "2001:db8::82b",
          "2001:db8::82c",
          "2001:db8::82d",
          "2001:db8::82e",
          "2001:db8::82f",
          "2001:db8::830",
          "2001:db8::831",
          "2001:db8::832",
          "2001:db8::833",
          "2001:db8::834",
          "2001:db8::835",
          "2001:db8::836",
          "2001:db8::837",
          "2001:db8::838",
          "2001:db8::839",
          "2001:db8::83a",
          "2001:db8::83b",
          "2001:db8::83c",
          "2001:db8::83d",
          "2001:db8::83e",
          "2001:db8::83f",
          "2001:db8::840",
          "2001:db8::841",
          "2001:db8::842",
          "2001:db8::843",
          "2001:db8::844",
          "2001:db8::845",
          "2001:db8::846",
          "2001:db8::847",
          "2001:db8::848",
          "2001:db8::849",
          "2001:db8::84a",
          "2001:db8::84b",
          "2001:db8::84c",
          "2001:db8::84d",
          "2001:db8::84e",
          "2001:db8::84f",
          "2001:db8::850",
          "2001:db8::851",
          "2001:db8::852",
          "2001:db8::853",
          "2001:db8::854",
          "2001:db8::855",
          "2001:db8::856",
          "2001:db8::857",
          "2001:db8::858",
          "2001:db8::859",
          "2001:db8::85a",
          "2001:db8::85b",
          "2001:db8::85c",
          "2001:db8::85d",
          "2001:db8::85e",
          "2001:db8::85f",
          "2001:db8::860",
          "2001:db8::861",
          "2001:db8::862",
          "2001:db8::863",
          "2001:db8::864",
          "2001:db8::865",
          "2001:db8::866",
          "2001:db8::867",
          "2001:db8::868",
          "2001:db8::869",
          "2001:db8::86a",
          "2001:db8::86b",
          "2001:db8::86c",
          "2001:db8::86d",
          "2001:db8::86e",
          "2001:db8::86f",
          "2001:db8::870",
          "2001:db8::871",
          "2001:db8::872",
          "2001:db8::873",
          "2001:db8::874",
          "2001:db8::875",
          "2001:db8::876",
          "2001:db8::877",
          "2001:db8::878",
          "2001:db8::879",
          "2001:db8::87a",
          "2001:db8::87b",
          "2001:db8::87c",
          "2001:db8::87d",
          "2001:db8::87e",
          "2001:db8::87f",
          "2001:db8::880",
          "2001:db8::881",
          "2001:db8::882",
          "2001:db8::883",
          "2001:db8::884",
          "2001:db8::885",
          "2001:db8::886",
          "2001:db8::887",
          "2001:db8::888",
          "2001:db8::889",
          "2001:db8::88a",
          "2001:db8::88b",
          "2001:db8::88c",
          "2001:db8::88d",
          "2001:db8::88e",
          "2001:db8::88f",
          "2001:db8::890",
          "2001:db8::891",
          "2001:db8::892",
          "2001:db8::893",
          "2001:db8::894",
          "2001:db8::895",
          "2001:db8::896",
          "2001:db8::897",
          "2001:db8::898",
          "2001:db8::899",
          "2001:db8::89a",
          "2001:db8::89b",
          "2001:db8::89c",
          "2001:db8::89d",
          "2001:db8::89e",
          "2001:db8::89f",
          "2001:db8::8a0",
          "2001:db8::8a1",
          "2001:db8::8a2",
          "2001:db8::8a3",
          "2001:db8::8a4",
          "2001:db8::8a5",
          "2001:db8::8a6",
          "2001:db8::8a7",
          "2001:db8::8a8",
          "2001:db8::8a9",
          "2001:db8::8aa",
          "2001:db8::8ab",
          "2001:db8::8ac",
          "2001:db8::8ad",
          "2001:db8::8ae",
          "2001:db8::8af",
          "2001:db8::8b0",
          "2001:db8::8b1",
          "2001:db8::8b2",
          "2001:db8::8b3",
          "2001:db8::8b4",
          "2001:db8::8b5",
          "2001:db8::8b6",
          "2001:db8::8b7",
          "2001:db8::8b8",
          "2001:db8::8b9",
          "2001:db8::8ba",
          "2001:db8::8bb",
          "2001:db8::8bc",
          "2001:db8::8bd",
          "2001:db8::8be",
          "2001:db8::8bf",
          "2001:db8::8c0",
          "2001:db8::8c1",
          "2001:db8::8c2",
          "2001:db8::8c3",
          "2001:db8::8c4",
          "2001:db8::8c5",
          "2001:db8::8c6",
          "2001:db8::8c7",
          "2001:db8::8c8",
          "2001:db8::8c9",
          "2001:db8::8ca",
          "2001:db8::8cb",
          "2001:db8::8cc",
          "2001:db8::8cd",
          "2001:db8::8ce",
          "2001:db8::8cf",
          "2001:db8::8d0",
          "2001:db8::8d1",
          "2001:db8::8d2",
          "2001:db8::8d3",
          "2001:db8::8d4",
          "2001:db8::8d5",
          "2001:db8::8d6",
          "2001:db8::8d7",
          "2001:db8::8d8",
          "2001:db8::8d9",
          "2001:db8::8da",
          "2001:db8::8db",
          "2001:db8::8dc",
          "2001:db8::8dd",
          "2001:db8::8de",
          "2001:db8::8df",
          "2001:db8::8e0",
          "2001:db8::8e1",
          "2001:db8::8e2",
          "2001:db8::8e3",
          "2001:db8::8e4",
          "2001:db8::8e5",
          "2001:db8::8e6",
          "2001:db8::8e7",
          "2001:db8::8e8",
          "2001:db8::8e9",
          "2001:db8::8ea",
          "2001:db8::8eb",
          "2001:db8::8ec",
          "2001:db8::8ed",
          "2001:db8::8ee",
          "2001:db8::8ef",
          "2001:db8::8f0",
          "2001:db8::8f1",
          "2001:db8::8f2",
          "2001:db8::8f3",
          "2001:db8::8f4",
          "2001:db8::8f5",
          "2001:db8::8f6",
          "2001:db8::8f7",
          "2001:db8::8f8",
          "2001:db8::8f9",
          "2001:db8::8fa",
          "2001:db8::8fb",
          "2001:db8::8fc",
          "2001:db8::8fd",
          "2001:db8::8fe",
          "2001:db8::8ff",
          "2001:db8::900",
          "2001:db8::901",
          "2001:db8::902",
          "2001:db8::903",
          "2001:db8::904",
          "2001:db8::905",
          "2001:db8::906",
          "2001:db8::907",
          "2001:db8::908",
          "2001:db8::909",
          "2001:db8::90a",
          "2001:db8::90b",
          "2001:db8::90c",
          "2001:db8::90d",
          "2001:db8::90e",
          "2001:db8::90f",
          "2001:db8::910",
          "2001:db8::911",
          "2001:db8::912",
          "2001:db8::913",
          "2001:db8::914",
          "2001:db8::915",
          "2001:db8::916",
          "2001:db8::917",
          "2001:db8::918",
          "2001:db8::919",
          "2001:db8::91a",
          "2001:db8::91b",
          "2001:db8::91c",
          "2001:db8::91d",
          "2001:db8::91e",
          "2001:db8::91f",
          "2001:db8::920",
          "2001:db8::921",
          "2001:db8::922",
          "2001:db8::923",
          "2001:db8::924",
          "2001:db8::925",
          "2001:db8::926",
          "2001:db8::927",
          "2001:db8::928",
          "2001:db8::929",
          "2001:db8::92a",
          "2001:db8::92b",
          "2001:db8::92c",
          "2001:db8::92d",
          "2001:db8::92e",
          "2001:db8::92f",
          "2001:db8::930",
          "2001:db8::931",
          "2001:db8::932",
          "2001:db8::933",
          "2001:db8::934",
          "2001:db8::935",
          "2001:db8::936",
          "2001:db8::937",
          "2001:db8::938",
          "2001:db8::939",
          "2001:db8::93a",
          "2001:db8::93b",
          "2001:db8::93c",
          "2001:db8::93d",
          "2001:db8::93e",
          "2001:db8::93f",
          "2001:db8::940",
          "2001:db8::941",
          "2001:db8::942",
          "2001:db8::943",
          "2001:db8::944",
          "2001:db8::945",
          "2001:db8::946",
          "2001:db8::947",
          "2001:db8::948",
          "2001:db8::949",
          "2001:db8::94a",
          "2001:db8::94b",
          "2001:db8::94c",
          "2001:db8::94d",
          "2001:db8::94e",
          "2001:db8::94f",
          "2001:db8::950",
          "2001:db8::951",
          "2001:db8::952",
          "2001:db8::953",
          "2001:db8::954",
          "2001:db8::955",
          "2001:db8::956",
          "2001:db8::957",
          "2001:db8::958",
          "2001:db8::959",
          "2001:db8::95a",
          "2001:db8::95b",
          "2001:db8::95c",
          "2001:db8::95d",
          "2001:db8::95e",
          "2001:db8::95f",
          "2001:db8::960",
          "2001:db8::961",
          "2001:db8::962",
          "2001:db8::963",
          "2001:db8::964",
          "2001:db8::965",
          "2001:db8::966",
          "2001:db8::967",
          "2001:db8::968",
          "2001:db8::969",
          "2001:db8::96a",
          "2001:db8::96b",
          "2001:db8::96c",
          "2001:db8::96d",
          "2001:db8::96e",
          "2001:db8::96f",
          "2001:db8::970",
          "2001:db8::971",
          "2001:db8::972",
          "2001:db8::973",
          "2001:db8::974",
          "2001:db8::975",
          "2001:db8::976",
          "2001:db8::977",
          "2001:db8::978",
          "2001:db8::979",
          "2001:db8::97a",
          "2001:db8::97b",
          "2001:db8::97c",
          "2001:db8::97d",
          "2001:db8::97e",
          "2001:db8::97f",
          "2001:db8::980",
          "2001:db8::981",
          "2001:db8::982",
          "2001:db8::983",
          "2001:db8::984",
          "2001:db8::985",
          "2001:db8::986",
          "2001:db8::987",
          "2001:db8::988",
          "2001:db8::989",
          "2001:db8::98a",
          "2001:db8::98b",
          "2001:db8::98c",
          "2001:db8::98d",
          "2001:db8::98e",
          "2001:db8::98f",
          "2001:db8::990",
          "2001:db8::991",
          "2001:db8::992",
          "2001:db8::993",
          "2001:db8::994",
          "2001:db8::995",
          "2001:db8::996",
          "2001:db8::997",
          "2001:db8::998",
          "2001:db8::999",
          "2001:db8::99a",
          "2001:db8::99b",
          "2001:db8::99c",
          "2001:db8::99d",
          "2001:db8::99e",
          "2001:db8::99f",
          "2001:db8::9a0",
          "2001:db8::9a1",
          "2001:db8::9a2",
          "2001:db8::9a3",
          "2001:db8::9a4",
          "2001:db8::9a5",
          "2001:db8::9a6",
          "2001:db8::9a7",
          "2001:db8::9a8",
          "2001:db8::9a9",
          "2001:db8::9aa",
          "2001:db8::9ab",
          "2001:db8::9ac",
          "2001:db8::9ad",
          "2001:db8::9ae",
          "2001:db8::9af",
          "2001:db8::9b0",
          "2001:db8::9b1",
          "2001:db8::9b2",
          "2001:db8::9b3",
          "2001:db8::9b4",
          "2001:db8::9b5",
          "2001:db8::9b6",
          "2001:db8::9b7",
          "2001:db8::9b8",
          "2001:db8::9b9",
          "2001:db8::9ba",
          "2001:db8::9bb",
          "2001:db8::9bc",
          "2001:db8::9bd",
          "2001:db8::9be",
          "2001:db8::9bf",
          "2001:db8::9c0",
          "2001:db8::9c1",
          "2001:db8::9c2",
          "2001:db8::9c3",
          "2001:db8::9c4",
          "2001:db8::9c5",
          "2001:db8::9c6",
          "2001:db8::9c7",
          "2001:db8::9c8",
          "2001:db8::9c9",
          "2001:db8::9ca",
          "2001:db8::9cb",
          "2001:db8::9cc",
          "2001:db8::9cd",
          "2001:db8::9ce",
          "2001:db8::9cf",
          "2001:db8::9d0",
          "2001:db8::9d1",
          "2001:db8::9d2",
          "2001:db8::9d3",
          "2001:db8::9d4",
          "2001:db8::9d5",
          "2001:db8::9d6",
          "2001:db8::9d7",
          "2001:db8::9d8",
          "2001:db8::9d9",
          "2001:db8::9da",
          "2001:db8::9db",
          "2001:db8::9dc",
          "2001:db8::9dd",
          "2001:db8::9de",
          "2001:db8::9df",
          "2001:db8::9e0",
          "2001:db8::9e1",
          "2001:db8::9e2",
          "2001:db8::9e3",
          "2001:db8::9e4",
          "2001:db8::9e5",
          "2001:db8::9e6",
          "2001:db8::9e7",
          "2001:db8::9e8",
          "2001:db8::9e9",
          "2001:db8::9ea",
          "2001:db8::9eb",
          "2001:db8::9ec",
          "2001:db8::9ed",
          "2001:db8::9ee",
          "2001:db8::9ef",
          "2001:db8::9f0",
          "2001:db8::9f1",
          "2001:db8::9f2",
          "2001:db8::9f3",
          "2001:db8::9f4",
          "2001:db8::9f5",
          "2001:db8::9f6",
          "2001:db8::9f7",
          "2001:db8::9f8",
          "2001:db8::9f9",
          "2001:db8::9fa",
          "2001:db8::9fb",
          "2001:db8::9fc",
          "2001:db8::9fd",
          "2001:db8::9fe",
          "2001:db8::9ff",
          "2001:db8::a00",
          "2001:db8::a01",
          "2001:db8::a02",
          "2001:db8::a03",
          "2001:db8::a04",
          "2001:db8::a05",
          "2001:db8::a06",
          "2001:db8::a07",
          "2001:db8::a08",
          "2001:db8::a09",
          "2001:db8::a0a",
          "2001:db8::a0b",
          "2001:db8::a0c",
          "2001:db8::a0d",
          "2001:db8::a0e",
          "2001:db8::a0f",
          "2001:db8::a10",
          "2001:db8::a11",
          "2001:db8::a12",
          "2001:db8::a13",
          "2001:db8::a14",
          "2001:db8::a15",
          "2001:db8::a16",
          "2001:db8::a17",
          "2001:db8::a18",
          "2001:db8::a19",
          "2001:db8::a1a",
          "2001:db8::a1b",
          "2001:db8::a1c",
          "2001:db8::a1d",
          "2001:db8::a1e",
          "2001:db8::a1f",
          "2001:db8::a20",
          "2001:db8::a21",
          "2001:db8::a22",
          "2001:db8::a23",
          "2001:db8::a24",
          "2001:db8::a25",
          "2001:db8::a26",
          "2001:db8::a27",
          "2001:db8::a28",
          "2001:db8::a29",
          "2001:db8::a2a",
          "2001:db8::a2b",
          "2001:db8::a2c",
          "2001:db8::a2d",
          "2001:db8::a2e",
          "2001:db8::a2f",
          "2001:db8::a30",
          "2001:db8::a31",
          "2001:db8::a32",
          "2001:db8::a33",
          "2001:db8::a34",
          "2001:db8::a35",
          "2001:db8::a36",
          "2001:db8::a37",
          "2001:db8::a38",
          "2001:db8::a39",
          "2001:db8::a3a",
          "2001:db8::a3b",
          "2001:db8::a3c",
          "2001:db8::a3d",
          "2001:db8::a3e",
          "2001:db8::a3f",
          "2001:db8::a40",
          "2001:db8::a41",
          "2001:db8::a42",
          "2001:db8::a43",
          "2001:db8::a44",
          "2001:db8::a45",
          "2001:db8::a46",
          "2001:db8::a47",
          "2001:db8::a48",
          "2001:db8::a49",
          "2001:db8::a4a",
          "2001:db8::a4b",
          "2001:db8::a4c",
          "2001:db8::a4d",
          "2001:db8::a4e",
          "2001:db8::a4f",
          "2001:db8::a50",
          "2001:db8::a51",
          "2001:db8::a52",
          "2001:db8::a53",
          "2001:db8::a54",
          "2001:db8::a55",
          "2001:db8::a56",
          "2001:db8::a57",
          "2001:db8::a58",
          "2001:db8::a59",
          "2001:db8::a5a",
          "2001:db8::a5b",
          "2001:db8::a5c",
          "2001:db8::a5d",
          "2001:db8::a5e",
          "2001:db8::a5f",
          "2001:db8::a60",
          "2001:db8::a61",
          "2001:db8::a62",
          "2001:db8::a63",
          "2001:db8::a64",
          "2001:db8::a65",
          "2001:db8::a66",
          "2001:db8::a67",
          "2001:db8::a68",
          "2001:db8::a69",
          "2001:db8::a6a",
          "2001:db8::a6b",
          "2001:db8::a6c",
          "2001:db8::a6d",
          "2001:db8::a6e",
          "2001:db8::a6f",
          "2001:db8::a70",
          "2001:db8::a71",
          "2001:db8::a72",
          "2001:db8::a73",
          "2001:db8::a74",
          "2001:db8::a75",
          "2001:db8::a76",
          "2001:db8::a77",
          "2001:db8::a78",
          "2001:db8::a79",
          "2001:db8::a7a",
          "2001:db8::a7b",
          "2001:db8::a7c",
          "2001:db8::a7d",
          "2001:db8::a7e",
          "2001:db8::a7f",
          "2001:db8::a80",
          "2001:db8::a81",
          "2001:db8::a82",
          "2001:db8::a83",
          "2001:db8::a84",
          "2001:db8::a85",
          "2001:db8::a86",
          "2001:db8::a87",
          "2001:db8::a88",
          "2001:db8::a89",
          "2001:db8::a8a",
          "2001:db8::a8b",
          "2001:db8::a8c",
          "2001:db8::a8d",
          "2001:db8::a8e",
          "2001:db8::a8f",
          "2001:db8::a90",
          "2001:db8::a91",
          "2001:db8::a92",
          "2001:db8::a93",
          "2001:db8::a94",
          "2001:db8::a95",
          "2001:db8::a96",
          "2001:db8::a97",
          "2001:db8::a98",
          "2001:db8::a99",
          "2001:db8::a9a",
          "2001:db8::a9b",
          "2001:db8::a9c",
          "2001:db8::a9d",
          "2001:db8::a9e",
          "2001:db8::a9f",
          "2001:db8::aa0",
          "2001:db8::aa1",
          "2001:db8::aa2",
          "2001:db8::aa3",
          "2001:db8::aa4",
          "2001:db8::aa5",
          "2001:db8::aa6",
          "2001:db8::aa7",
          "2001:db8::aa8",
          "2001:db8::aa9",
          "2001:db8::aaa",
          "2001:db8::aab",
          "2001:db8::aac",
          "2001:db8::aad",
          "2001:db8::aae",
          "2001:db8::aaf",
          "2001:db8::ab0",
          "2001:db8::ab1",
          "2001:db8::ab2",
          "2001:db8::ab3",
          "2001:db8::ab4",
          "2001:db8::ab5",
          "2001:db8::ab6",
          "2001:db8::ab7",
          "2001:db8::ab8",
          "2001:db8::ab9",
          "2001:db8::aba",
          "2001:db8::abb",
          "2001:db8::abc",
          "2001:db8::abd",
          "2001:db8::abe",
          "2001:db8::abf",
          "2001:db8::ac0",
          "2001:db8::ac1",
          "2001:db8::ac2",
          "2001:db8::ac3",
          "2001:db8::ac4",
          "2001:db8::ac5",
          "2001:db8::ac6",
          "2001:db8::ac7",
          "2001:db8::ac8",
          "2001:db8::ac9",
          "2001:db8::aca",
          "2001:db8::acb",
          "2001:db8::acc",
          "2001:db8::acd",
          "2001:db8::ace",
          "2001:db8::acf",
          "2001:db8::ad0",
          "2001:db8::ad1",
          "2001:db8::ad2",
          "2001:db8::ad3",
          "2001:db8::ad4",
          "2001:db8::ad5",
          "2001:db8::ad6",
          "2001:db8::ad7",
          "2001:db8::ad8",
          "2001:db8::ad9",
          "2001:db8::ada",
          "2001:db8::adb",
          "2001:db8::adc",
          "2001:db8::add",
          "2001:db8::ade",
          "2001:db8::adf",
          "2001:db8::ae0",
          "2001:db8::ae1",
          "2001:db8::ae2",
          "2001:db8::ae3",
          "2001:db8::ae4",
          "2001:db8::ae5",
          "2001:db8::ae6",
          "2001:db8::ae7",
          "2001:db8::ae8",
          "2001:db8::ae9",
          "2001:db8::aea",
          "2001:db8::aeb",
          "2001:db8::aec",
          "2001:db8::aed",
          "2001:db8::aee",
          "2001:db8::aef",
          "2001:db8::af0",
          "2001:db8::af1",
          "2001:db8::af2",
          "2001:db8::af3",
          "2001:db8::af4",
          "2001:db8::af5",
          "2001:db8::af6",
          "2001:db8::af7",
          "2001:db8::af8",
          "2001:db8::af9",
          "2001:db8::afa",
          "2001:db8::afb",
          "2001:db8::afc",
          "2001:db8::afd",
          "2001:db8::afe",
          "2001:db8::aff",
          "2001:db8::b00",
          "2001:db8::b01",
          "2001:db8::b02",
          "2001:db8::b03",
          "2001:db8::b04",
          "2001:db8::b05",
          "2001:db8::b06",
          "2001:db8::b07",
          "2001:db8::b08",
          "2001:db8::b09",
          "2001:db8::b0a",
          "2001:db8::b0b",
          "2001:db8::b0c",
          "2001:db8::b0d",
          "2001:db8::b0e",
          "2001:db8::b0f",
          "2001:db8::b10",
          "2001:db8::b11",
          "2001:db8::b12",
          "2001:db8::b13",
          "2001:db8::b14",
          "2001:db8::b15",
          "2001:db8::b16",
          "2001:db8::b17",
          "2001:db8::b18",
          "2001:db8::b19",
          "2001:db8::b1a",
          "2001:db8::b1b",
          "2001:db8::b1c",
          "2001:db8::b1d",
          "2001:db8::b1e",
          "2001:db8::b1f",
          "2001:db8::b20",
          "2001:db8::b21",
          "2001:db8::b22",
          "2001:db8::b23",
          "2001:db8::b24",
          "2001:db8::b25",
          "2001:db8::b26",
          "2001:db8::b27",
          "2001:db8::b28",
          "2001:db8::b29",
          "2001:db8::b2a",
          "2001:db8::b2b",
          "2001:db8::b2c",
          "2001:db8::b2d",
          "2001:db8::b2e",
          "2001:db8::b2f",
          "2001:db8::b30",
          "2001:db8::b31",
          "2001:db8::b32",
          "2001:db8::b33",
          "2001:db8::b34",
          "2001:db8::b35",
          "2001:db8::b36",
          "2001:db8::b37",
          "2001:db8::b38",
          "2001:db8::b39",
          "2001:db8::b3a",
          "2001:db8::b3b",
          "2001:db8::b3c",
          "2001:db8::b3d",
          "2001:db8::b3e",
          "2001:db8::b3f",
          "2001:db8::b40",
          "2001:db8::b41",
          "2001:db8::b42",
          "2001:db8::b43",
          "2001:db8::b44",
          "2001:db8::b45",
          "2001:db8::b46",
          "2001:db8::b47",
          "2001:db8::b48",
          "2001:db8::b49",
          "2001:db8::b4a",
          "2001:db8::b4b",
          "2001:db8::b4c",
          "2001:db8::b4d",
          "2001:db8::b4e",
          "2001:db8::b4f",
          "2001:db8::b50",
          "2001:db8::b51",
          "2001:db8::b52",
          "2001:db8::b53",
          "2001:db8::b54",
          "2001:db8::b55",
          "2001:db8::b56",
          "2001:db8::b57",
          "2001:db8::b58",
          "2001:db8::b59",
          "2001:db8::b5a",
          "2001:db8::b5b",
          "2001:db8::b5c",
          "2001:db8::b5d",
          "2001:db8::b5e",
          "2001:db8::b5f",
          "2001:db8::b60",
          "2001:db8::b61",
          "2001:db8::b62",
          "2001:db8::b63",
          "2001:db8::b64",
          "2001:db8::b65",
          "2001:db8::b66",
          "2001:db8::b67",
          "2001:db8::b68",
          "2001:db8::b69",
          "2001:db8::b6a",
          "2001:db8::b6b",
          "2001:db8::b6c",
          "2001:db8::b6d",
          "2001:db8::b6e",
          "2001:db8::b6f",
          "2001:db8::b70",
          "2001:db8::b71",
          "2001:db8::b72",
          "2001:db8::b73",
          "2001:db8::b74",
          "2001:db8::b75",
          "2001:db8::b76",
          "2001:db8::b77",
          "2001:db8::b78",
          "2001:db8::b79",
          "2001:db8::b7a",
          "2001:db8::b7b",
          "2001:db8::b7c",
          "2001:db8::b7d",
          "2001:db8::b7e",
          "2001:db8::b7f",
          "2001:db8::b80",
          "2001:db8::b81",
          "2001:db8::b82",
          "2001:db8::b83",
          "2001:db8::b84",
          "2001:db8::b85",
          "2001:db8::b86",
          "2001:db8::b87",
          "2001:db8::b88",
          "2001:db8::b89",
          "2001:db8::b8a",
          "2001:db8::b8b",
          "2001:db8::b8c",
          "2001:db8::b8d",
          "2001:db8::b8e",
          "2001:db8::b8f",
          "2001:db8::b90",
          "2001:db8::b91",
          "2001:db8::b92",
          "2001:db8::b93",
          "2001:db8::b94",
          "2001:db8::b95",
          "2001:db8::b96",
          "2001:db8::b97",
          "2001:db8::b98",
          "2001:db8::b99",
          "2001:db8::b9a",
          "2001:db8::b9b",
          "2001:db8::b9c",
          "2001:db8::b9d",
          "2001:db8::b9e",
          "2001:db8::b9f",
          "2001:db8::ba0",
          "2001:db8::ba1",
          "2001:db8::ba2",
          "2001:db8::ba3",
          "2001:db8::ba4",
          "2001:db8::ba5",
          "2001:db8::ba6",
          "2001:db8::ba7",
          "2001:db8::ba8",
          "2001:db8::ba9",
          "2001:db8::baa",
          "2001:db8::bab",
          "2001:db8::bac",
          "2001:db8::bad",
          "2001:db8::bae",
          "2001:db8::baf",
          "2001:db8::bb0",
          "2001:db8::bb1",
          "2001:db8::bb2",
          "2001:db8::bb3",
          "2001:db8::bb4",
          "2001:db8::bb5",
          "2001:db8::bb6",
          "2001:db8::bb7",
          "2001:db8::bb8",
          "2001:db8::bb9",
          "2001:db8::bba",
          "2001:db8::bbb",
          "2001:db8::bbc",
          "2001:db8::bbd",
          "2001:db8::bbe",
          "2001:db8::bbf",
          "2001:db8::bc0",
          "2001:db8::bc1",
          "2001:db8::bc2",
          "2001:db8::bc3",
          "2001:db8::bc4",
          "2001:db8::bc5",
          "2001:db8::bc6",
          "2001:db8::bc7",
          "2001:db8::bc8",
          "2001:db8::bc9",
          "2001:db8::bca",
          "2001:db8::bcb",
          "2001:db8::bcc",
          "2001:db8::bcd",
          "2001:db8::bce",
          "2001:db8::bcf",
          "2001:db8::bd0",
          "2001:db8::bd1",
          "2001:db8::bd2",
          "2001:db8::bd3",
          "2001:db8::bd4",
          "2001:db8::bd5",
          "2001:db8::bd6",
          "2001:db8::bd7",
          "2001:db8::bd8",
          "2001:db8::bd9",
          "2001:db8::bda",
          "2001:db8::bdb",
          "2001:db8::bdc",
          "2001:db8::bdd",
          "2001:db8::bde",
          "2001:db8::bdf",
          "2001:db8::be0",
          "2001:db8::be1",
          "2001:db8::be2",
          "2001:db8::be3",
          "2001:db8::be4",
          "2001:db8::be5",
          "2001:db8::be6",
          "2001:db8::be7",
          "2001:db8::be8",
          "2001:db8::be9",
          "2001:db8::bea",
          "2001:db8::beb",
          "2001:db8::bec",
          "2001:db8::bed",
          "2001:db8::bee",
          "2001:db8::bef",
          "2001:db8::bf0",
          "2001:db8::bf1",
          "2001:db8::bf2",
          "2001:db8::bf3",
          "2001:db8::bf4",
          "2001:db8::bf5",
          "2001:db8::bf6",
          "2001:db8::bf7",
          "2001:db8::bf8",
          "2001:db8::bf9",
          "2001:db8::bfa",
          "2001:db8::bfb",
          "2001:db8::bfc",
          "2001:db8::bfd",
          "2001:db8::bfe",
          "2001:db8::bff",
          "2001:db8::c00",
          "2001:db8::c01",
          "2001:db8::c02",
          "2001:db8::c03",
          "2001:db8::c04",
          "2001:db8::c05",
          "2001:db8::c06",
          "2001:db8::c07",
          "2001:db8::c08",
          "2001:db8::c09",
          "2001:db8::c0a",
          "2001:db8::c0b",
          "2001:db8::c0c",
          "2001:db8::c0d",
          "2001:db8::c0e",
          "2001:db8::c0f",
          "2001:db8::c10",
          "2001:db8::c11",
          "2001:db8::c12",
          "2001:db8::c13",
          "2001:db8::c14",
          "2001:db8::c15",
          "2001:db8::c16",
          "2001:db8::c17",
          "2001:db8::c18",
          "2001:db8::c19",
          "2001:db8::c1a",
          "2001:db8::c1b",
          "2001:db8::c1c",
          "2001:db8::c1d",
          "2001:db8::c1e",
          "2001:db8::c1f",
          "2001:db8::c20",
          "2001:db8::c21",
          "2001:db8::c22",
          "2001:db8::c23",
          "2001:db8::c24",
          "2001:db8::c25",
          "2001:db8::c26",
          "2001:db8::c27",
          "2001:db8::c28",
          "2001:db8::c29",
          "2001:db8::c2a",
          "2001:db8::c2b",
          "2001:db8::c2c",
          "2001:db8::c2d",
          "2001:db8::c2e",
          "2001:db8::c2f",
          "2001:db8::c30",
          "2001:db8::c31",
          "2001:db8::c32",
          "2001:db8::c33",
          "2001:db8::c34",
          "2001:db8::c35",
          "2001:db8::c36",
          "2001:db8::c37",
          "2001:db8::c38",
          "2001:db8::c39",
          "2001:db8::c3a",
          "2001:db8::c3b",
          "2001:db8::c3c",
          "2001:db8::c3d",
          "2001:db8::c3e",
          "2001:db8::c3f",
          "2001:db8::c40",
          "2001:db8::c41",
          "2001:db8::c42",
          "2001:db8::c43",
          "2001:db8::c44",
          "2001:db8::c45",
          "2001:db8::c46",
          "2001:db8::c47",
          "2001:db8::c48",
          "2001:db8::c49",
          "2001:db8::c4a",
          "2001:db8::c4b",
          "2001:db8::c4c",
          "2001:db8::c4d",
          "2001:db8::c4e",
          "2001:db8::c4f",
          "2001:db8::c50",
          "2001:db8::c51",
          "2001:db8::c52",
          "2001:db8::c53",
          "2001:db8::c54",
          "2001:db8::c55",
          "2001:db8::c56",
          "2001:db8::c57",
          "2001:db8::c58",
          "2001:db8::c59",
          "2001:db8::c5a",
          "2001:db8::c5b",
          "2001:db8::c5c",
          "2001:db8::c5d",
          "2001:db8::c5e",
          "2001:db8::c5f",
          "2001:db8::c60",
          "2001:db8::c61",
          "2001:db8::c62",
          "2001:db8::c63",
          "2001:db8::c64",
          "2001:db8::c65",
          "2001:db8::c66",
          "2001:db8::c67",
          "2001:db8::c68",
          "2001:db8::c69",
          "2001:db8::c6a",
          "2001:db8::c6b",
          "2001:db8::c6c",
          "2001:db8::c6d",
          "2001:db8::c6e",
          "2001:db8::c6f",
          "2001:db8::c70",
          "2001:db8::c71",
          "2001:db8::c72",
          "2001:db8::c73",
          "2001:db8::c74",
          "2001:db8::c75",
          "2001:db8::c76",
          "2001:db8::c77",
          "2001:db8::c78",
          "2001:db8::c79",
          "2001:db8::c7a",
          "2001:db8::c7b",
          "2001:db8::c7c",
          "2001:db8::c7d",
          "2001:db8::c7e",
          "2001:db8::c7f",
          "2001:db8::c80",
          "2001:db8::c81",
          "2001:db8::c82",
          "2001:db8::c83",
          "2001:db8::c84",
          "2001:db8::c85",
          "2001:db8::c86",
          "2001:db8::c87",
          "2001:db8::c88",
          "2001:db8::c89",
          "2001:db8::c8a",
          "2001:db8::c8b",
          "2001:db8::c8c",
          "2001:db8::c8d",
          "2001:db8::c8e",
          "2001:db8::c8f",
          "2001:db8::c90",
          "2001:db8::c91",
          "2001:db8::c92",
          "2001:db8::c93",
          "2001:db8::c94",
          "2001:db8::c95",
          "2001:db8::c96",
          "2001:db8::c97",
          "2001:db8::c98",
          "2001:db8::c99",
          "2001:db8::c9a",
          "2001:db8::c9b",
          "2001:db8::c9c",
          "2001:db8::c9d",
          "2001:db8::c9e",
          "2001:db8::c9f",
          "2001:db8::ca0",
          "2001:db8::ca1",
          "2001:db8::ca2",
          "2001:db8::ca3",
          "2001:db8::ca4",
          "2001:db8::ca5",
          "2001:db8::ca6",
          "2001:db8::ca7",
          "2001:db8::ca8",
          "2001:db8::ca9",
          "2001:db8::caa",
          "2001:db8::cab",
          "2001:db8::cac",
          "2001:db8::cad",
          "2001:db8::cae",
          "2001:db8::caf",
          "2001:db8::cb0",
          "2001:db8::cb1",
          "2001:db8::cb2",
          "2001:db8::cb3",
          "2001:db8::cb4",
          "2001:db8::cb5",
          "2001:db8::cb6",
          "2001:db8::cb7",
          "2001:db8::cb8",
          "2001:db8::cb9",
          "2001:db8::cba",
          "2001:db8::cbb",
          "2001:db8::cbc",
          "2001:db8::cbd",
          "2001:db8::cbe",
          "2001:db8::cbf",
          "2001:db8::cc0",
          "2001:db8::cc1",
          "2001:db8::cc2",
          "2001:db8::cc3",
          "2001:db8::cc4",
          "2001:db8::cc5",
          "2001:db8::cc6",
          "2001:db8::cc7",
          "2001:db8::cc8",
          "2001:db8::cc9",
          "2001:db8::cca",
          "2001:db8::ccb",
          "2001:db8::ccc",
          "2001:db8::ccd",
          "2001:db8::cce",
          "2001:db8::ccf",
          "2001:db8::cd0",
          "2001:db8::cd1",
          "2001:db8::cd2",
          "2001:db8::cd3",
          "2001:db8::cd4",
          "2001:db8::cd5",
          "2001:db8::cd6",
          "2001:db8::cd7",
          "2001:db8::cd8",
          "2001:db8::cd9",
          "2001:db8::cda",
          "2001:db8::cdb",
          "2001:db8::cdc",
          "2001:db8::cdd",
          "2001:db8::cde",
          "2001:db8::cdf",
          "2001:db8::ce0",
          "2001:db8::ce1",
          "2001:db8::ce2",
          "2001:db8::ce3",
          "2001:db8::ce4",
          "2001:db8::ce5",
          "2001:db8::ce6",
          "2001:db8::ce7",
          "2001:db8::ce8",
          "2001:db8::ce9",
          "2001:db8::cea",
          "2001:db8::ceb",
          "2001:db8::cec",
          "2001:db8::ced",
          "2001:db8::cee",
          "2001:db8::cef",
          "2001:db8::cf0",
          "2001:db8::cf1",
          "2001:db8::cf2",
          "2001:db8::cf3",
          "2001:db8::cf4",
          "2001:db8::cf5",
          "2001:db8::cf6",
          "2001:db8::cf7",
          "2001:db8::cf8",
          "2001:db8::cf9",
          "2001:db8::cfa",
          "2001:db8::cfb",
          "2001:db8::cfc",
          "2001:db8::cfd",
          "2001:db8::cfe",
          "2001:db8::cff",
          "2001:db8::d00",
          "2001:db8::d01",
          "2001:db8::d02",
          "2001:db8::d03",
          "2001:db8::d04",
          "2001:db8::d05",
          "2001:db8::d06",
          "2001:db8::d07",
          "2001:db8::d08",
          "2001:db8::d09",
          "2001:db8::d0a",
          "2001:db8::d0b",
          "2001:db8::d0c",
          "2001:db8::d0d",
          "2001:db8::d0e",
          "2001:db8::d0f",
          "2001:db8::d10",
          "2001:db8::d11",
          "2001:db8::d12",
          "2001:db8::d13",
          "2001:db8::d14",
          "2001:db8::d15",
          "2001:db8::d16",
          "2001:db8::d17",
          "2001:db8::d18",
          "2001:db8::d19",
          "2001:db8::d1a",
          "2001:db8::d1b",
          "2001:db8::d1c",
          "2001:db8::d1d",
          "2001:db8::d1e",
          "2001:db8::d1f",
          "2001:db8::d20",
          "2001:db8::d21",
          "2001:db8::d22",
          "2001:db8::d23",
          "2001:db8::d24",
          "2001:db8::d25",
          "2001:db8::d26",
          "2001:db8::d27",
          "2001:db8::d28",
          "2001:db8::d29",
          "2001:db8::d2a",
          "2001:db8::d2b",
          "2001:db8::d2c",
          "2001:db8::d2d",
          "2001:db8::d2e",
          "2001:db8::d2f",
          "2001:db8::d30",
          "2001:db8::d31",
          "2001:db8::d32",
          "2001:db8::d33",
          "2001:db8::d34",
          "2001:db8::d35",
          "2001:db8::d36",
          "2001:db8::d37",
          "2001:db8::d38",
          "2001:db8::d39",
          "2001:db8::d3a",
          "2001:db8::d3b",
          "2001:db8::d3c",
          "2001:db8::d3d",
          "2001:db8::d3e",
          "2001:db8::d3f",
          "2001:db8::d40",
          "2001:db8::d41",
          "2001:db8::d42",
          "2001:db8::d43",
          "2001:db8::d44",
          "2001:db8::d45",
          "2001:db8::d46",
          "2001:db8::d47",
          "2001:db8::d48",
          "2001:db8::d49",
          "2001:db8::d4a",
          "2001:db8::d4b",
          "2001:db8::d4c",
          "2001:db8::d4d",
          "2001:db8::d4e",
          "2001:db8::d4f",
          "2001:db8::d50",
          "2001:db8::d51",
          "2001:db8::d52",
          "2001:db8::d53",
          "2001:db8::d54",
          "2001:db8::d55",
          "2001:db8::d56",
          "2001:db8::d57",
          "2001:db8::d58",
          "2001:db8::d59",
          "2001:db8::d5a",
          "2001:db8::d5b",
          "2001:db8::d5c",
          "2001:db8::d5d",
          "2001:db8::d5e",
          "2001:db8::d5f",
          "2001:db8::d60",
          "2001:db8::d61",
          "2001:db8::d62",
          "2001:db8::d63",
          "2001:db8::d64",
          "2001:db8::d65",
          "2001:db8::d66",
          "2001:db8::d67",
          "2001:db8::d68",
          "2001:db8::d69",
          "2001:db8::d6a",
          "2001:db8::d6b",
          "2001:db8::d6c",
          "2001:db8::d6d",
          "2001:db8::d6e",
          "2001:db8::d6f",
          "2001:db8::d70",
          "2001:db8::d71",
          "2001:db8::d72",
          "2001:db8::d73",
          "2001:db8::d74",
          "2001:db8::d75",
          "2001:db8::d76",
          "2001:db8::d77",
          "2001:db8::d78",
          "2001:db8::d79",
          "2001:db8::d7a",
          "2001:db8::d7b",
          "2001:db8::d7c",
          "2001:db8::d7d",
          "2001:db8::d7e",
          "2001:db8::d7f",
          "2001:db8::d80",
          "2001:db8::d81",
          "2001:db8::d82",
          "2001:db8::d83",
          "2001:db8::d84",
          "2001:db8::d85",
          "2001:db8::d86",
          "2001:db8::d87",
          "2001:db8::d88",
          "2001:db8::d89",
          "2001:db8::d8a",
          "2001:db8::d8b",
          "2001:db8::d8c",
          "2001:db8::d8d",
          "2001:db8::d8e",
          "2001:db8::d8f",
          "2001:db8::d90",
          "2001:db8::d91",
          "2001:db8::d92",
          "2001:db8::d93",
          "2001:db8::d94",
          "2001:db8::d95",
          "2001:db8::d96",
          "2001:db8::d97",
          "2001:db8::d98",
          "2001:db8::d99",
          "2001:db8::d9a",
          "2001:db8::d9b",
          "2001:db8::d9c",
          "2001:db8::d9d",
          "2001:db8::d9e",
          "2001:db8::d9f",
          "2001:db8::da0",
          "2001:db8::da1",
          "2001:db8::da2",
          "2001:db8::da3",
          "2001:db8::da4",
          "2001:db8::da5",
          "2001:db8::da6",
          "2001:db8::da7",
          "2001:db8::da8",
          "2001:db8::da9",
          "2001:db8::daa",
          "2001:db8::dab",
          "2001:db8::dac",
          "2001:db8::dad",
          "2001:db8::dae",
          "2001:db8::daf",
          "2001:db8::db0",
          "2001:db8::db1",
          "2001:db8::db2",
          "2001:db8::db3",
          "2001:db8::db4",
          "2001:db8::db5",
          "2001:db8::db6",
          "2001:db8::db7",
          "2001:db8::db8",
          "2001:db8::db9",
          "2001:db8::dba",
          "2001:db8::dbb",
          "2001:db8::dbc",
          "2001:db8::dbd",
          "2001:db8::dbe",
          "2001:db8::dbf",
          "2001:db8::dc0",
          "2001:db8::dc1",
          "2001:db8::dc2",
          "2001:db8::dc3",
          "2001:db8::dc4",
          "2001:db8::dc5",
          "2001:db8::dc6",
          "2001:db8::dc7",
          "2001:db8::dc8",
          "2001:db8::dc9",
          "2001:db8::dca",
          "2001:db8::dcb",
          "2001:db8::dcc",
          "2001:db8::dcd",
          "2001:db8::dce",
          "2001:db8::dcf",
          "2001:db8::dd0",
          "2001:db8::dd1",
          "2001:db8::dd2",
          "2001:db8::dd3",
          "2001:db8::dd4",
          "2001:db8::dd5",
          "2001:db8::dd6",
          "2001:db8::dd7",
          "2001:db8::dd8",
          "2001:db8::dd9",
          "2001:db8::dda",
          "2001:db8::ddb",
          "2001:db8::ddc",
          "2001:db8::ddd",
          "2001:db8::dde",
          "2001:db8::ddf",
          "2001:db8::de0",
          "2001:db8::de1",
          "2001:db8::de2",
          "2001:db8::de3",
          "2001:db8::de4",
          "2001:db8::de5",
          "2001:db8::de6",
          "2001:db8::de7",
          "2001:db8::de8",
          "2001:db8::de9",
          "2001:db8::dea",
          "2001:db8::deb",
          "2001:db8::dec",
          "2001:db8::ded",
          "2001:db8::dee",
          "2001:db8::def",
          "2001:db8::df0",
          "2001:db8::df1",
          "2001:db8::df2",
          "2001:db8::df3",
          "2001:db8::df4",
          "2001:db8::df5",
          "2001:db8::df6",
          "2001:db8::df7",
          "2001:db8::df8",
          "2001:db8::df9",
          "2001:db8::dfa",
          "2001:db8::dfb",
          "2001:db8::dfc",
          "2001:db8::dfd",
          "2001:db8::dfe",
          "2001:db8::dff",
          "2001:db8::e00",
          "2001:db8::e01",
          "2001:db8::e02",
          "2001:db8::e03",
          "2001:db8::e04",
          "2001:db8::e05",
          "2001:db8::e06",
          "2001:db8::e07",
          "2001:db8::e08",
          "2001:db8::e09",
          "2001:db8::e0a",
          "2001:db8::e0b",
          "2001:db8::e0c",
          "2001:db8::e0d",
          "2001:db8::e0e",
          "2001:db8::e0f",
          "2001:db8::e10",
          "2001:db8::e11",
          "2001:db8::e12",
          "2001:db8::e13",
          "2001:db8::e14",
          "2001:db8::e15",
          "2001:db8::e16",
          "2001:db8::e17",
          "2001:db8::e18",
          "2001:db8::e19",
          "2001:db8::e1a",
          "2001:db8::e1b",
          "2001:db8::e1c",
          "2001:db8::e1d",
          "2001:db8::e1e",
          "2001:db8::e1f",
          "2001:db8::e20",
          "2001:db8::e21",
          "2001:db8::e22",
          "2001:db8::e23",
          "2001:db8::e24",
          "2001:db8::e25",
          "2001:db8::e26",
          "2001:db8::e27",
          "2001:db8::e28",
          "2001:db8::e29",
          "2001:db8::e2a",
          "2001:db8::e2b",
          "2001:db8::e2c",
          "2001:db8::e2d",
          "2001:db8::e2e",
          "2001:db8::e2f",
          "2001:db8::e30",
          "2001:db8::e31",
          "2001:db8::e32",
          "2001:db8::e33",
          "2001:db8::e34",
          "2001:db8::e35",
          "2001:db8::e36",
          "2001:db8::e37",
          "2001:db8::e38",
          "2001:db8::e39",
          "2001:db8::e3a",
          "2001:db8::e3b",
          "2001:db8::e3c",
          "2001:db8::e3d",
          "2001:db8::e3e",
          "2001:db8::e3f",
          "2001:db8::e40",
          "2001:db8::e41",
          "2001:db8::e42",
          "2001:db8::e43",
          "2001:db8::e44",
          "2001:db8::e45",
          "2001:db8::e46",
          "2001:db8::e47",
          "2001:db8::e48",
          "2001:db8::e49",
          "2001:db8::e4a",
          "2001:db8::e4b",
          "2001:db8::e4c",
          "2001:db8::e4d",
          "2001:db8::e4e",
          "2001:db8::e4f",
          "2001:db8::e50",
          "2001:db8::e51",
          "2001:db8::e52",
          "2001:db8::e53",
          "2001:db8::e54",
          "2001:db8::e55",
          "2001:db8::e56",
          "2001:db8::e57",
          "2001:db8::e58",
          "2001:db8::e59",
          "2001:db8::e5a",
          "2001:db8::e5b",
          "2001:db8::e5c",
          "2001:db8::e5d",
          "2001:db8::e5e",
          "2001:db8::e5f",
          "2001:db8::e60",
          "2001:db8::e61",
          "2001:db8::e62",
          "2001:db8::e63",
          "2001:db8::e64",
          "2001:db8::e65",
          "2001:db8::e66",
          "2001:db8::e67",
          "2001:db8::e68",
          "2001:db8::e69",
          "2001:db8::e6a",
          "2001:db8::e6b",
          "2001:db8::e6c",
          "2001:db8::e6d",
          "2001:db8::e6e",
          "2001:db8::e6f",
          "2001:db8::e70",
          "2001:db8::e71",
          "2001:db8::e72",
          "2001:db8::e73",
          "2001:db8::e74",
          "2001:db8::e75",
          "2001:db8::e76",
          "2001:db8::e77",
          "2001:db8::e78",
          "2001:db8::e79",
          "2001:db8::e7a",
          "2001:db8::e7b",
          "2001:db8::e7c",
          "2001:db8::e7d",
          "2001:db8::e7e",
          "2001:db8::e7f",
          "2001:db8::e80",
          "2001:db8::e81",
          "2001:db8::e82",
          "2001:db8::e83",
          "2001:db8::e84",
          "2001:db8::e85",
          "2001:db8::e86",
          "2001:db8::e87",
          "2001:db8::e88",
          "2001:db8::e89",
          "2001:db8::e8a",
          "2001:db8::e8b",
          "2001:db8::e8c",
          "2001:db8::e8d",
          "2001:db8::e8e",
          "2001:db8::e8f",
          "2001:db8::e90",
          "2001:db8::e91",
          "2001:db8::e92",
          "2001:db8::e93",
          "2001:db8::e94",
          "2001:db8::e95",
          "2001:db8::e96",
          "2001:db8::e97",
          "2001:db8::e98",
          "2001:db8::e99",
          "2001:db8::e9a",
          "2001:db8::e9b",
          "2001:db8::e9c",
          "2001:db8::e9d",
          "2001:db8::e9e",
          "2001:db8::e9f",
          "2001:db8::ea0",
          "2001:db8::ea1",
          "2001:db8::ea2",
          "2001:db8::ea3",
          "2001:db8::ea4",
          "2001:db8::ea5",
          "2001:db8::ea6",
          "2001:db8::ea7",
          "2001:db8::ea8",
          "2001:db8::ea9",
          "2001:db8::eaa",
          "2001:db8::eab",
          "2001:db8::eac",
          "2001:db8::ead",
          "2001:db8::eae",
          "2001:db8::eaf",
          "2001:db8::eb0",
          "2001:db8::eb1",
          "2001:db8::eb2",
          "2001:db8::eb3",
          "2001:db8::eb4",
          "2001:db8::eb5",
          "2001:db8::eb6",
          "2001:db8::eb7",
          "2001:db8::eb8",
          "2001:db8::eb9",
          "2001:db8::eba",
          "2001:db8::ebb",
          "2001:db8::ebc",
          "2001:db8::ebd",
          "2001:db8::ebe",
          "2001:db8::ebf",
          "2001:db8::ec0",
          "2001:db8::ec1",
          "2001:db8::ec2",
          "2001:db8::ec3",
          "2001:db8::ec4",
          "2001:db8::ec5",
          "2001:db8::ec6",
          "2001:db8::ec7",
          "2001:db8::ec8",
          "2001:db8::ec9",
          "2001:db8::eca",
          "2001:db8::ecb",
          "2001:db8::ecc",
          "2001:db8::ecd",
          "2001:db8::ece",
          "2001:db8::ecf",
          "2001:db8::ed0",
          "2001:db8::ed1",
          "2001:db8::ed2",
          "2001:db8::ed3",
          "2001:db8::ed4",
          "2001:db8::ed5",
          "2001:db8::ed6",
          "2001:db8::ed7",
          "2001:db8::ed8",
          "2001:db8::ed9",
          "2001:db8::eda",
          "2001:db8::edb",
          "2001:db8::edc",
          "2001:db8::edd",
          "2001:db8::ede",
          "2001:db8::edf",
          "2001:db8::ee0",
          "2001:db8::ee1",
          "2001:db8::ee2",
          "2001:db8::ee3",
          "2001:db8::ee4",
          "2001:db8::ee5",
          "2001:db8::ee6",
          "2001:db8::ee7",
          "2001:db8::ee8",
          "2001:db8::ee9",
          "2001:db8::eea",
          "2001:db8::eeb",
          "2001:db8::eec",
          "2001:db8::eed",
          "2001:db8::eee",
          "2001:db8::eef",
          "2001:db8::ef0",
          "2001:db8::ef1",
          "2001:db8::ef2",
          "2001:db8::ef3",
          "2001:db8::ef4",
          "2001:db8::ef5",
          "2001:db8::ef6",
          "2001:db8::ef7",
          "2001:db8::ef8",
          "2001:db8::ef9",
          "2001:db8::efa",
          "2001:db8::efb",
          "2001:db8::efc",
          "2001:db8::efd",
          "2001:db8::efe",
          "2001:db8::eff",
          "2001:db8::f00",
          "2001:db8::f01",
          "2001:db8::f02",
          "2001:db8::f03",
          "2001:db8::f04",
          "2001:db8::f05",
          "2001:db8::f06",
          "2001:db8::f07",
          "2001:db8::f08",
          "2001:db8::f09",
          "2001:db8::f0a",
          "2001:db8::f0b",
          "2001:db8::f0c",
          "2001:db8::f0d",
          "2001:db8::f0e",
          "2001:db8::f0f",
          "2001:db8::f10",
          "2001:db8::f11",
          "2001:db8::f12",
          "2001:db8::f13",
          "2001:db8::f14",
          "2001:db8::f15",
          "2001:db8::f16",
          "2001:db8::f17",
          "2001:db8::f18",
          "2001:db8::f19",
          "2001:db8::f1a",
          "2001:db8::f1b",
          "2001:db8::f1c",
          "2001:db8::f1d",
          "2001:db8::f1e",
          "2001:db8::f1f",
          "2001:db8::f20",
          "2001:db8::f21",
          "2001:db8::f22",
          "2001:db8::f23",
          "2001:db8::f24",
          "2001:db8::f25",
          "2001:db8::f26",
          "2001:db8::f27",
          "2001:db8::f28",
          "2001:db8::f29",
          "2001:db8::f2a",
          "2001:db8::f2b",
          "2001:db8::f2c",
          "2001:db8::f2d",
          "2001:db8::f2e",
          "2001:db8::f2f",
          "2001:db8::f30",
          "2001:db8::f31",
          "2001:db8::f32",
          "2001:db8::f33",
          "2001:db8::f34",
          "2001:db8::f35",
          "2001:db8::f36",
          "2001:db8::f37",
          "2001:db8::f38",
          "2001:db8::f39",
          "2001:db8::f3a",
          "2001:db8::f3b",
          "2001:db8::f3c",
          "2001:db8::f3d",
          "2001:db8::f3e",
          "2001:db8::f3f",
          "2001:db8::f40",
          "2001:db8::f41",
          "2001:db8::f42",
          "2001:db8::f43",
          "2001:db8::f44",
          "2001:db8::f45",
          "2001:db8::f46",
          "2001:db8::f47",
          "2001:db8::f48",
          "2001:db8::f49",
          "2001:db8::f4a",
          "2001:db8::f4b",
          "2001:db8::f4c",
          "2001:db8::f4d",
          "2001:db8::f4e",
          "2001:db8::f4f",
          "2001:db8::f50",
          "2001:db8::f51",
          "2001:db8::f52",
          "2001:db8::f53",
          "2001:db8::f54",
          "2001:db8::f55",
          "2001:db8::f56",
          "2001:db8::f57",
          "2001:db8::f58",
          "2001:db8::f59",
          "2001:db8::f5a",
          "2001:db8::f5b",
          "2001:db8::f5c",
          "2001:db8::f5d",
          "2001:db8::f5e",
          "2001:db8::f5f",
          "2001:db8::f60",
          "2001:db8::f61",
          "2001:db8::f62",
          "2001:db8::f63",
          "2001:db8::f64",
          "2001:db8::f65",
          "2001:db8::f66",
          "2001:db8::f67",
          "2001:db8::f68",
          "2001:db8::f69",
          "2001:db8::f6a",
          "2001:db8::f6b",
          "2001:db8::f6c",
          "2001:db8::f6d",
          "2001:db8::f6e",
          "2001:db8::f6f",
          "2001:db8::f70",
          "2001:db8::f71",
          "2001:db8::f72",
          "2001:db8::f73",
          "2001:db8::f74",
          "2001:db8::f75",
          "2001:db8::f76",
          "2001:db8::f77",
          "2001:db8::f78",
          "2001:db8::f79",
          "2001:db8::f7a",
          "2001:db8::f7b",
          "2001:db8::f7c",
          "2001:db8::f7d",
          "2001:db8::f7e",
          "2001:db8::f7f",
          "2001:db8::f80",
          "2001:db8::f81",
          "2001:db8::f82",
          "2001:db8::f83",
          "2001:db8::f84",
          "2001:db8::f85",
          "2001:db8::f86",
          "2001:db8::f87",
          "2001:db8::f88",
          "2001:db8::f89",
          "2001:db8::f8a",
          "2001:db8::f8b",
          "2001:db8::f8c",
          "2001:db8::f8d",
          "2001:db8::f8e",
          "2001:db8::f8f",
          "2001:db8::f90",
          "2001:db8::f91",
          "2001:db8::f92",
          "2001:db8::f93",
          "2001:db8::f94",
          "2001:db8::f95",
          "2001:db8::f96",
          "2001:db8::f97",
          "2001:db8::f98",
          "2001:db8::f99",
          "2001:db8::f9a",
          "2001:db8::f9b",
          "2001:db8::f9c",
          "2001:db8::f9d",
          "2001:db8::f9e",
          "2001:db8::f9f",
          "2001:db8::fa0",
          "2001:db8::fa1",
          "2001:db8::fa2",
          "2001:db8::fa3",
          "2001:db8::fa4",
          "2001:db8::fa5",
          "2001:db8::fa6",
          "2001:db8::fa7",
          "2001:db8::fa8",
          "2001:db8::fa9",
          "2001:db8::faa",
          "2001:db8::fab",
          "2001:db8::fac",
          "2001:db8::fad",
          "2001:db8::fae",
          "2001:db8::faf",
          "2001:db8::fb0",
          "2001:db8::fb1",
          "2001:db8::fb2",
          "2001:db8::fb3",
          "2001:db8::fb4",
          "2001:db8::fb5",
          "2001:db8::fb6",
          "2001:db8::fb7",
          "2001:db8::fb8",
          "2001:db8::fb9",
          "2001:db8::fba",
          "2001:db8::fbb",
          "2001:db8::fbc",
          "2001:db8::fbd",
          "2001:db8::fbe",
          "2001:db8::fbf",
          "2001:db8::fc0",
          "2001:db8::fc1",
          "2001:db8::fc2",
          "2001:db8::fc3",
          "2001:db8::fc4",
          "2001:db8::fc5",
          "2001:db8::fc6",
          "2001:db8::fc7",
          "2001:db8::fc8",
          "2001:db8::fc9",
          "2001:db8::fca",
          "2001:db8::fcb",
          "2001:db8::fcc",
          "2001:db8::fcd",
          "2001:db8::fce",
          "2001:db8::fcf",
          "2001:db8::fd0",
          "2001:db8::fd1",
          "2001:db8::fd2",
          "2001:db8::fd3",
          "2001:db8::fd4",
          "2001:db8::fd5",
          "2001:db8::fd6",
          "2001:db8::fd7",
          "2001:db8::fd8",
          "2001:db8::fd9",
          "2001:db8::fda",
          "2001:db8::fdb",
          "2001:db8::fdc",
          "2001:db8::fdd",
          "2001:db8::fde",
          "2001:db8::fdf",
          "2001:db8::fe0",
          "2001:db8::fe1",
          "2001:db8::fe2",
          "2001:db8::fe3",
          "2001:db8::fe4",
          "2001:db8::fe5",
          "2001:db8::fe6",
          "2001:db8::fe7",
          "2001:db8::fe8",
          "2001:db8::fe9",
          "2001:db8::fea",
          "2001:db8::feb",
          "2001:db8::fec",
          "2001:db8::fed",
          "2001:db8::fee",
          "2001:db8::fef",
          "2001:db8::ff0",
          "2001:db8::ff1",
          "2001:db8::ff2",
          "2001:db8::ff3",
          "2001:db8::ff4",
          "2001:db8::ff5",
          "2001:db8::ff6",
          "2001:db8::ff7",
          "2001:db8::ff8",
          "2001:db8::ff9",
          "2001:db8::ffa",
          "2001:db8::ffb",
          "2001:db8::ffc",
          "2001:db8::ffd",
          "2001:db8::ffe",
          "2001:db8::fff",
          "2001:db8::1000",
          "2001:db8::1001",
          "2001:db8::1002",
          "2001:db8::1003"
        ]
      }
    ],
    "time": null
  },
  {
    "command": "network set_reserved 2001:db8::/64 50",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_reserved 2001:db8::/64 50",
    "ok": [
      "Updated reserved to '50' for 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {
          "reserved": 50
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:37.637811+02:00",
              "updated_at": "2025-08-26T11:56:37.857078+02:00",
              "network": "2001:db8::/64",
              "description": "Lorem ipsum dolor sit amet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 50
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add tinyhost -ip 2001:db8::/64 -contact me@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add tinyhost -ip 2001:db8::/64 -contact me@example.org",
    "ok": [
      "Created host tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinyhost.example.org",
      "Contact:      me@example.org",
      "AAAA_Records:",
      "              IP             MAC         ",
      "              2001:db8::33   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Mon May 19 10:27:41 2025",
      "Updated:      Mon May 19 10:27:41 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:40.492919+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:40.647474+02:00",
          "updated_at": "2025-05-19T10:27:40.909644+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 50
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "tinyhost.example.org",
          "contact": "me@example.org",
          "network": "2001:db8::/64"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-05-19T10:27:41.076121+02:00",
              "updated_at": "2025-05-19T10:27:41.076127+02:00",
              "ipaddress": "2001:db8::33",
              "host": 2
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-05-19T10:27:41.057373+02:00",
              "updated_at": "2025-05-19T10:27:41.057380+02:00",
              "txt": "v=spf1 -all",
              "host": 2
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.055560+02:00",
          "updated_at": "2025-05-19T10:27:41.055568+02:00",
          "name": "tinyhost.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A33",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:40.647474+02:00",
          "updated_at": "2025-05-19T10:27:40.909644+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 50
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info tinyhost",
    "command_filter": "2001",
    "command_filter_negate": false,
    "command_issued": "host info tinyhost | 2001",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "              2001:db8::33   <not set>   "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:38.120762+02:00",
              "updated_at": "2025-08-26T11:56:38.120771+02:00",
              "ipaddress": "2001:db8::33",
              "host": 2
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:38.094364+02:00",
              "updated_at": "2025-08-26T11:56:38.094372+02:00",
              "txt": "v=spf1 -all",
              "host": 2
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.090913+02:00",
          "updated_at": "2025-08-26T11:56:38.090922+02:00",
          "name": "tinyhost.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info tinyhost",
    "command_filter": "example.org",
    "command_filter_negate": true,
    "command_issued": "host info tinyhost |! example.org",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "AAAA_Records:",
      "              IP             MAC         ",
      "              2001:db8::33   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:38 2025",
      "Updated:      Tue Aug 26 11:56:38 2025"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host remove tinyhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove tinyhost",
    "ok": [
      "removed tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 2001:db8::/64 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 2001:db8::/64 -f",
    "ok": [
      "Removed network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:43.865439+01:00",
          "updated_at": "2025-03-19T10:10:44.125057+01:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 50
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.1.0/24 -desc \"Frozzzen\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.1.0/24 -desc \"Frozzzen\"        # frozen network",
    "ok": [
      "created network 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:44.688206+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_frozen 10.0.1.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_frozen 10.0.1.0/24",
    "ok": [
      "Updated frozen to 'True' for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:44.688206+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "frozen": true
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:44.688196+01:00",
              "updated_at": "2025-03-19T10:10:44.766999+01:00",
              "network": "10.0.1.0/24",
              "description": "Frozzzen",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.0/24 -contact support@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.0/24 -contact support@example.org  # should require force, because net's frozen",
    "ok": [],
    "warning": [
      "Network 10.0.1.0/24 is frozen, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:41.326674+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.451087+02:00",
          "updated_at": "2025-05-19T10:27:41.515781+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network add_excluded_range 10.0.1.0/24 10.0.1.20 10.0.1.30",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network add_excluded_range 10.0.1.0/24 10.0.1.20 10.0.1.30",
    "ok": [
      "Added exclude range to 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.1.0/24/excluded_ranges/",
        "data": {
          "network": 3,
          "start_ip": "10.0.1.20",
          "end_ip": "10.0.1.30"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.20 -contact support@example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.20 -contact support@example.org -force # should fail because ip is in excluded range",
    "ok": [],
    "warning": [
      "POST \"http://127.0.0.1:8000/api/v1/hosts/\": 400: Bad Request\n{\n  \"type\": \"validation_error\",\n  \"errors\": [\n    {\n      \"code\": \"invalid\",\n      \"detail\": \"IP 10.0.1.20 in an excluded range: 10.0.1.0/24 -> [10.0.1.20 -> [10.0.1.30]\",\n      \"attr\": \"non_field_errors\"\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:41.326674+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-05-19T10:27:41.676748+02:00",
              "updated_at": "2025-05-19T10:27:41.676760+02:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.451087+02:00",
          "updated_at": "2025-05-19T10:27:41.515781+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ipaddress": "10.0.1.20"
        },
        "status": 400,
        "response": {
          "type": "validation_error",
          "errors": [
            {
              "code": "invalid",
              "detail": "IP 10.0.1.20 in an excluded range: 10.0.1.0/24 -> [10.0.1.20 -> [10.0.1.30]",
              "attr": "non_field_errors"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.0/24 -contact support@example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.0/24 -contact support@example.org -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      support@example.org",
      "A_Records:",
      "              IP         MAC         ",
      "              10.0.1.4   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:38 2025",
      "Updated:      Tue Aug 26 11:56:38 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-08-26T11:56:38.588823+02:00",
              "updated_at": "2025-08-26T11:56:38.588836+02:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:38.446974+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "network": "10.0.1.0/24"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:38.799820+02:00",
              "updated_at": "2025-08-26T11:56:38.799833+02:00",
              "ipaddress": "10.0.1.4",
              "host": 4
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:38.772317+02:00",
              "updated_at": "2025-08-26T11:56:38.772325+02:00",
              "txt": "v=spf1 -all",
              "host": 4
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.769930+02:00",
          "updated_at": "2025-08-26T11:56:38.769945+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-08-26T11:56:38.588823+02:00",
              "updated_at": "2025-08-26T11:56:38.588836+02:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:38.446974+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network list_used_addresses 10.0.1.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network list_used_addresses 10.0.1.0/24",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "10.0.1.4                                      somehost.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:44.766999+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozzzen",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/used_host_list",
        "data": {},
        "status": 200,
        "response": {
          "10.0.1.4": [
            "somehost.example.org"
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/ptroverride_host_list",
        "data": {},
        "status": 200,
        "response": {}
      }
    ],
    "time": null
  },
  {
    "command": "network set_description 10.0.1.0/24 \"Frozen but has one host\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_description 10.0.1.0/24 \"Frozen but has one host\"",
    "ok": [
      "Updated description to 'Frozen but has one host' for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "description": "Frozen but has one host"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-08-26T11:56:38.588823+02:00",
                  "updated_at": "2025-08-26T11:56:38.588836+02:00",
                  "start_ip": "10.0.1.20",
                  "end_ip": "10.0.1.30",
                  "network": 3
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:38.384090+02:00",
              "updated_at": "2025-08-26T11:56:38.965659+02:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_category 10.0.1.0/24 cat1",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_category 10.0.1.0/24 cat1",
    "ok": [
      "Updated category tag to 'cat1' for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:45.413979+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "category": "cat1"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-03-19T10:10:44.935337+01:00",
                  "updated_at": "2025-03-19T10:10:44.935355+01:00",
                  "start_ip": "10.0.1.20",
                  "end_ip": "10.0.1.30",
                  "network": 3
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:44.688196+01:00",
              "updated_at": "2025-03-19T10:10:45.489029+01:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": null,
              "dns_delegated": false,
              "category": "cat1",
              "location": "",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_location 10.0.1.0/24 loc1",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_location 10.0.1.0/24 loc1",
    "ok": [
      "Updated location tag to 'loc1' for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:45.489029+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "cat1",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "location": "loc1"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-03-19T10:10:44.935337+01:00",
                  "updated_at": "2025-03-19T10:10:44.935355+01:00",
                  "start_ip": "10.0.1.20",
                  "end_ip": "10.0.1.30",
                  "network": 3
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:44.688196+01:00",
              "updated_at": "2025-03-19T10:10:45.562172+01:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": null,
              "dns_delegated": false,
              "category": "cat1",
              "location": "loc1",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_vlan 10.0.1.0/24 1234",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_vlan 10.0.1.0/24 1234",
    "ok": [
      "Updated vlan to 1234 for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:45.562172+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "vlan": 1234
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-03-19T10:10:44.935337+01:00",
                  "updated_at": "2025-03-19T10:10:44.935355+01:00",
                  "start_ip": "10.0.1.20",
                  "end_ip": "10.0.1.30",
                  "network": 3
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:44.688196+01:00",
              "updated_at": "2025-03-19T10:10:45.629603+01:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "cat1",
              "location": "loc1",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network info 10.0.1.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network info 10.0.1.0/24",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Network:                 10.0.1.0/24",
      "Netmask:                 255.255.255.0",
      "Description:             Frozen but has one host",
      "Category:                cat1",
      "Network policy:          ",
      "Communities:             ",
      "Location:                loc1",
      "VLAN:                    1234",
      "DNS delegated:           False",
      "Frozen:                  True",
      "IP-range:                10.0.1.0 - 10.0.1.255",
      "Reserved host addresses: 3",
      "                         10.0.1.0 (net)",
      "                         10.0.1.1",
      "                         10.0.1.2",
      "                         10.0.1.3",
      "                         10.0.1.255 (broadcast)",
      "Excluded ranges:         11 ipaddresses",
      " 10.0.1.20                 -> 10.0.1.30",
      "Used addresses:          1",
      "Unused addresses:        239 (excluding reserved adr.)"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:45.629603+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.1.0",
          "10.0.1.1",
          "10.0.1.2",
          "10.0.1.3",
          "10.0.1.255"
        ]
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 1
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/unused_count",
        "data": {},
        "status": 200,
        "response": 239
      }
    ],
    "time": null
  },
  {
    "command": "network find -network 10.0.1.0/24 -description '*one host*' -vlan 1234 -frozen 1 -reserved 6 -dns_delegated 0 -category Yellow -location Somewhere",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network find -network 10.0.1.0/24 -description '*one host*' -vlan 1234 -frozen 1 -reserved 6 -dns_delegated 0 -category Yellow -location Somewhere",
    "ok": [],
    "warning": [
      "No networks matching the query were found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/?network=10.0.1.0%2F24&description__regex=.%2Aone+host.%2A&vlan=1234&dns_delegated=0&category=Yellow&location=Somewhere&frozen=1&reserved=6",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "host set_contact somehost \"new-support@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host set_contact somehost \"new-support@example.org\"",
    "ok": [
      "Updated contact of somehost.example.org to new-support@example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-03-20T15:36:58.706620+01:00",
              "updated_at": "2025-03-20T15:36:58.706626+01:00",
              "ipaddress": "10.0.1.4",
              "host": 4
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-03-20T15:36:58.692419+01:00",
              "updated_at": "2025-03-20T15:36:58.692425+01:00",
              "txt": "v=spf1 -all",
              "host": 4
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.690682+01:00",
          "updated_at": "2025-03-20T15:36:58.690689+01:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {
          "contact": "new-support@example.org"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-03-20T15:36:58.706620+01:00",
                  "updated_at": "2025-03-20T15:36:58.706626+01:00",
                  "ipaddress": "10.0.1.4",
                  "host": 4
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-03-20T15:36:58.692419+01:00",
                  "updated_at": "2025-03-20T15:36:58.692425+01:00",
                  "txt": "v=spf1 -all",
                  "host": 4
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-03-20T15:36:58.690682+01:00",
              "updated_at": "2025-03-20T15:36:59.267728+01:00",
              "name": "somehost.example.org",
              "contact": "new-support@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host history somehost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host history somehost",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2025-03-20 15:36:58 [system-signals]: Txt create: txt = 'v=spf1 -all'",
      "2025-03-20 15:36:58 [test]: Host create: name = 'somehost.example.org', contact = 'support@example.org'",
      "2025-03-20 15:36:58 [test]: Ipaddress create: ipaddress = '10.0.1.4'",
      "2025-03-20 15:36:59 [test]: Host update: contact: support@example.org -> new-support@example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=host&name=somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 4,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2025-03-20T15:36:58.692928+01:00",
              "user": "system-signals",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Txt",
              "action": "create",
              "data": {
                "txt": "v=spf1 -all"
              }
            },
            {
              "timestamp": "2025-03-20T15:36:58.701239+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Host",
              "action": "create",
              "data": "{\"name\": \"somehost.example.org\", \"contact\": \"support@example.org\"}"
            },
            {
              "timestamp": "2025-03-20T15:36:58.707191+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Ipaddress",
              "action": "create",
              "data": "{\"ipaddress\": \"10.0.1.4\"}"
            },
            {
              "timestamp": "2025-03-20T15:36:59.273131+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Host",
              "action": "update",
              "data": "{\"current_data\": {\"id\": 4, \"ipaddresses\": [{\"id\": 3, \"macaddress\": \"\", \"created_at\": \"2025-03-20T15:36:58.706620+01:00\", \"updated_at\": \"2025-03-20T15:36:58.706626+01:00\", \"ipaddress\": \"10.0.1.4\", \"host\": 4}], \"cnames\": [], \"mxs\": [], \"txts\": [{\"id\": 4, \"created_at\": \"2025-03-20T15:36:58.692419+01:00\", \"updated_at\": \"2025-03-20T15:36:58.692425+01:00\", \"txt\": \"v=spf1 -all\", \"host\": 4}], \"ptr_overrides\": [], \"srvs\": [], \"naptrs\": [], \"sshfps\": [], \"hostgroups\": [], \"roles\": [], \"hinfo\": null, \"loc\": null, \"bacnetid\": null, \"communities\": [], \"created_at\": \"2025-03-20T15:36:58.690682+01:00\", \"updated_at\": \"2025-03-20T15:36:58.690689+01:00\", \"name\": \"somehost.example.org\", \"contact\": \"support@example.org\", \"ttl\": null, \"comment\": \"\", \"zone\": 1}, \"update\": {\"contact\": \"new-support@example.org\"}}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=host&model_id__in=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 4,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2025-03-20T15:36:58.692928+01:00",
              "user": "system-signals",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Txt",
              "action": "create",
              "data": {
                "txt": "v=spf1 -all"
              }
            },
            {
              "timestamp": "2025-03-20T15:36:58.701239+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Host",
              "action": "create",
              "data": "{\"name\": \"somehost.example.org\", \"contact\": \"support@example.org\"}"
            },
            {
              "timestamp": "2025-03-20T15:36:58.707191+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Ipaddress",
              "action": "create",
              "data": "{\"ipaddress\": \"10.0.1.4\"}"
            },
            {
              "timestamp": "2025-03-20T15:36:59.273131+01:00",
              "user": "test",
              "resource": "host",
              "name": "somehost.example.org",
              "model_id": 4,
              "model": "Host",
              "action": "update",
              "data": "{\"current_data\": {\"id\": 4, \"ipaddresses\": [{\"id\": 3, \"macaddress\": \"\", \"created_at\": \"2025-03-20T15:36:58.706620+01:00\", \"updated_at\": \"2025-03-20T15:36:58.706626+01:00\", \"ipaddress\": \"10.0.1.4\", \"host\": 4}], \"cnames\": [], \"mxs\": [], \"txts\": [{\"id\": 4, \"created_at\": \"2025-03-20T15:36:58.692419+01:00\", \"updated_at\": \"2025-03-20T15:36:58.692425+01:00\", \"txt\": \"v=spf1 -all\", \"host\": 4}], \"ptr_overrides\": [], \"srvs\": [], \"naptrs\": [], \"sshfps\": [], \"hostgroups\": [], \"roles\": [], \"hinfo\": null, \"loc\": null, \"bacnetid\": null, \"communities\": [], \"created_at\": \"2025-03-20T15:36:58.690682+01:00\", \"updated_at\": \"2025-03-20T15:36:58.690689+01:00\", \"name\": \"somehost.example.org\", \"contact\": \"support@example.org\", \"ttl\": null, \"comment\": \"\", \"zone\": 1}, \"update\": {\"contact\": \"new-support@example.org\"}}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=hosts&data__id__in=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.0/24  # should require force, because the network is frozen",
    "ok": [],
    "warning": [
      "Network 10.0.1.0/24 is frozen, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-03-20T15:36:58.706620+01:00",
              "updated_at": "2025-03-20T15:36:58.706626+01:00",
              "ipaddress": "10.0.1.4",
              "host": 4
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-03-20T15:36:58.692419+01:00",
              "updated_at": "2025-03-20T15:36:58.692425+01:00",
              "txt": "v=spf1 -all",
              "host": 4
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.690682+01:00",
          "updated_at": "2025-03-20T15:36:59.267728+01:00",
          "name": "somehost.example.org",
          "contact": "new-support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-20T15:36:58.452833+01:00",
              "updated_at": "2025-03-20T15:36:58.452841+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.260675+01:00",
          "updated_at": "2025-03-20T15:36:59.051810+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/first_unused",
        "data": {},
        "status": 200,
        "response": "10.0.1.5"
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.0/24 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.0/24 -force",
    "ok": [
      "Added ipaddress 10.0.1.5 to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.1.5",
          "host": "4"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:39.688003+02:00",
          "updated_at": "2025-08-26T11:56:39.688010+02:00",
          "ipaddress": "10.0.1.5",
          "host": 4
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:38.799820+02:00",
                  "updated_at": "2025-08-26T11:56:38.799833+02:00",
                  "ipaddress": "10.0.1.4",
                  "host": 4
                },
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:39.688003+02:00",
                  "updated_at": "2025-08-26T11:56:39.688010+02:00",
                  "ipaddress": "10.0.1.5",
                  "host": 4
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:38.772317+02:00",
                  "updated_at": "2025-08-26T11:56:38.772325+02:00",
                  "txt": "v=spf1 -all",
                  "host": 4
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:38.769930+02:00",
              "updated_at": "2025-08-26T11:56:39.434951+02:00",
              "name": "somehost.example.org",
              "contact": "new-support@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost # requires force because host has 2 ip addresses",
    "ok": [],
    "warning": [
      "somehost.example.org requires force for deletion:\n  multiple ipaddresses on the same VLAN\nUse `-force` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-03-20T15:36:58.706620+01:00",
              "updated_at": "2025-03-20T15:36:58.706626+01:00",
              "ipaddress": "10.0.1.4",
              "host": 4
            },
            {
              "macaddress": "",
              "created_at": "2025-03-20T15:36:59.539135+01:00",
              "updated_at": "2025-03-20T15:36:59.539141+01:00",
              "ipaddress": "10.0.1.5",
              "host": 4
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-03-20T15:36:58.692419+01:00",
              "updated_at": "2025-03-20T15:36:58.692425+01:00",
              "txt": "v=spf1 -all",
              "host": 4
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.690682+01:00",
          "updated_at": "2025-03-20T15:36:59.267728+01:00",
          "name": "somehost.example.org",
          "contact": "new-support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-20T15:36:58.452833+01:00",
              "updated_at": "2025-03-20T15:36:58.452841+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.260675+01:00",
          "updated_at": "2025-03-20T15:36:59.051810+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-20T15:36:58.452833+01:00",
              "updated_at": "2025-03-20T15:36:58.452841+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-20T15:36:58.260675+01:00",
          "updated_at": "2025-03-20T15:36:59.051810+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network unset_frozen 10.0.1.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network unset_frozen 10.0.1.0/24",
    "ok": [
      "Updated frozen to 'False' for 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:45.629603+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {
          "frozen": false
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-03-19T10:10:44.935337+01:00",
                  "updated_at": "2025-03-19T10:10:44.935355+01:00",
                  "start_ip": "10.0.1.20",
                  "end_ip": "10.0.1.30",
                  "network": 3
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:44.688196+01:00",
              "updated_at": "2025-03-19T10:10:46.452187+01:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "cat1",
              "location": "loc1",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add otherhost -ip 10.0.1.20 -contact support@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add otherhost -ip 10.0.1.20 -contact support@example.org  # fails because reserved range",
    "ok": [],
    "warning": [
      "POST \"http://127.0.0.1:8000/api/v1/hosts/\": 400: Bad Request\n{\n  \"type\": \"validation_error\",\n  \"errors\": [\n    {\n      \"code\": \"invalid\",\n      \"detail\": \"IP 10.0.1.20 in an excluded range: 10.0.1.0/24 -> [10.0.1.20 -> [10.0.1.30]\",\n      \"attr\": \"non_field_errors\"\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/otherhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/otherhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/otherhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:43.596470+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-05-19T10:27:41.676748+02:00",
              "updated_at": "2025-05-19T10:27:41.676760+02:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.451087+02:00",
          "updated_at": "2025-05-19T10:27:43.643614+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "otherhost.example.org",
          "contact": "support@example.org",
          "ipaddress": "10.0.1.20"
        },
        "status": 400,
        "response": {
          "type": "validation_error",
          "errors": [
            {
              "code": "invalid",
              "detail": "IP 10.0.1.20 in an excluded range: 10.0.1.0/24 -> [10.0.1.20 -> [10.0.1.30]",
              "attr": "non_field_errors"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network remove_excluded_range 10.0.1.0/24 10.0.1.20 10.0.1.30",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove_excluded_range 10.0.1.0/24 10.0.1.20 10.0.1.30",
    "ok": [
      "Removed exclude range from 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-03-19T10:10:44.935337+01:00",
              "updated_at": "2025-03-19T10:10:44.935355+01:00",
              "start_ip": "10.0.1.20",
              "end_ip": "10.0.1.30",
              "network": 3
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:44.688196+01:00",
          "updated_at": "2025-03-19T10:10:46.452187+01:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.1.0/24/excluded_ranges/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add otherhost -ip 10.0.1.20 -contact support@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add otherhost -ip 10.0.1.20 -contact support@example.org  # should not need force now that net is unfrozen",
    "ok": [
      "Created host otherhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         otherhost.example.org",
      "Contact:      support@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.1.20   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Mon May 19 10:27:43 2025",
      "Updated:      Mon May 19 10:27:43 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/otherhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/otherhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/otherhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:38.232774+02:00",
            "updated_at": "2025-05-19T10:27:43.596470+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.451087+02:00",
          "updated_at": "2025-05-19T10:27:43.643614+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "otherhost.example.org",
          "contact": "support@example.org",
          "ipaddress": "10.0.1.20"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/otherhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-05-19T10:27:43.986248+02:00",
              "updated_at": "2025-05-19T10:27:43.986255+02:00",
              "ipaddress": "10.0.1.20",
              "host": 6
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-05-19T10:27:43.967471+02:00",
              "updated_at": "2025-05-19T10:27:43.967481+02:00",
              "txt": "v=spf1 -all",
              "host": 6
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:43.965062+02:00",
          "updated_at": "2025-05-19T10:27:43.965074+02:00",
          "name": "otherhost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T10:27:41.451087+02:00",
          "updated_at": "2025-05-19T10:27:43.643614+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove otherhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove otherhost",
    "ok": [
      "removed otherhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/otherhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T11:56:58.119037+02:00",
              "updated_at": "2025-06-19T11:56:58.119043+02:00",
              "ipaddress": "10.0.1.20",
              "host": 6
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:58.105242+02:00",
              "updated_at": "2025-06-19T11:56:58.105248+02:00",
              "txt": "v=spf1 -all",
              "host": 6
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.103701+02:00",
          "updated_at": "2025-06-19T11:56:58.103708+02:00",
          "name": "otherhost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/otherhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 2001:db8::/64 -desc \"Lorem ipsum dolor sit amet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 2001:db8::/64 -desc \"Lorem ipsum dolor sit amet\"",
    "ok": [
      "created network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-06-19T11:56:56.238306+02:00",
              "updated_at": "2025-06-19T11:56:57.831469+02:00",
              "network": "10.0.1.0/24",
              "description": "Frozen but has one host",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "cat1",
              "location": "loc1",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001:db8::/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.276305+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_frozen 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_frozen 2001:db8::/64",
    "ok": [
      "Updated frozen to 'True' for 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.276305+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {
          "frozen": true
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-06-19T11:56:58.276297+02:00",
              "updated_at": "2025-06-19T11:56:58.331422+02:00",
              "network": "2001:db8::/64",
              "description": "Lorem ipsum dolor sit amet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 2001:db8::/64 -contact m@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 2001:db8::/64 -contact m@example.org  # should require force, because the network is frozen",
    "ok": [],
    "warning": [
      "Network 2001:db8::/64 is frozen, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T11:56:54.325815+02:00",
                "updated_at": "2025-06-19T11:56:54.325829+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T11:56:53.844130+02:00",
            "updated_at": "2025-06-19T11:56:58.229983+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T11:56:54.386439+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.331422+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network add_excluded_range 2001:db8::/64 2001:db8::20 2001:db8::30",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network add_excluded_range 2001:db8::/64 2001:db8::20 2001:db8::30",
    "ok": [
      "Added exclude range to 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/excluded_ranges/",
        "data": {
          "network": 4,
          "start_ip": "2001:db8::20",
          "end_ip": "2001:db8::30"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 2001:db8::20 -contact support@example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 2001:db8::20 -contact support@example.org -force # should fail, because the address is in a reserved range",
    "ok": [],
    "warning": [
      "POST \"http://127.0.0.1:8000/api/v1/hosts/\": 400: Bad Request\n{\n  \"type\": \"validation_error\",\n  \"errors\": [\n    {\n      \"code\": \"invalid\",\n      \"detail\": \"IP 2001:db8::20 in an excluded range: 2001:db8::/64 -> [2001:db8::20 -> [2001:db8::30]\",\n      \"attr\": \"non_field_errors\"\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T11:56:54.325815+02:00",
                "updated_at": "2025-06-19T11:56:54.325829+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T11:56:53.844130+02:00",
            "updated_at": "2025-06-19T11:56:58.229983+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T11:56:54.386439+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.331422+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ipaddress": "2001:db8::20"
        },
        "status": 400,
        "response": {
          "type": "validation_error",
          "errors": [
            {
              "code": "invalid",
              "detail": "IP 2001:db8::20 in an excluded range: 2001:db8::/64 -> [2001:db8::20 -> [2001:db8::30]",
              "attr": "non_field_errors"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 2001:db8::/64 -contact support@example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 2001:db8::/64 -contact support@example.org -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      support@example.org",
      "AAAA_Records:",
      "              IP            MAC         ",
      "              2001:db8::4   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:41 2025",
      "Updated:      Tue Aug 26 11:56:41 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-08-26T11:56:40.989836+02:00",
              "updated_at": "2025-08-26T11:56:40.989850+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:40.636727+02:00",
          "updated_at": "2025-08-26T11:56:40.699144+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "network": "2001:db8::/64"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:41.212812+02:00",
              "updated_at": "2025-08-26T11:56:41.212818+02:00",
              "ipaddress": "2001:db8::4",
              "host": 8
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:41.197863+02:00",
              "updated_at": "2025-08-26T11:56:41.197869+02:00",
              "txt": "v=spf1 -all",
              "host": 8
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:41.196169+02:00",
          "updated_at": "2025-08-26T11:56:41.196176+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-08-26T11:56:40.989836+02:00",
              "updated_at": "2025-08-26T11:56:40.989850+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:40.636727+02:00",
          "updated_at": "2025-08-26T11:56:40.699144+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network set_description 2001:db8::/64 \"Frozen but has one host\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network set_description 2001:db8::/64 \"Frozen but has one host\"",
    "ok": [
      "Updated description to 'Frozen but has one host' for 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.331422+02:00",
          "network": "2001:db8::/64",
          "description": "Lorem ipsum dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {
          "description": "Frozen but has one host"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-06-19T11:56:58.463832+02:00",
                  "updated_at": "2025-06-19T11:56:58.463842+02:00",
                  "start_ip": "2001:db8::20",
                  "end_ip": "2001:db8::30",
                  "network": 4
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-06-19T11:56:58.276297+02:00",
              "updated_at": "2025-06-19T11:56:58.779271+02:00",
              "network": "2001:db8::/64",
              "description": "Frozen but has one host",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": true,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network info 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network info 2001:db8::/64",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Network:                 2001:db8::/64",
      "Netmask:                 ffff:ffff:ffff:ffff::",
      "Description:             Frozen but has one host",
      "Category:                ",
      "Network policy:          ",
      "Communities:             ",
      "Location:                ",
      "VLAN:                    None",
      "DNS delegated:           False",
      "Frozen:                  True",
      "IP-range:                2001:db8:: - 2001:db8::ffff:ffff:ffff:ffff",
      "Reserved host addresses: 3",
      "                         2001:db8:: (net)",
      "                         2001:db8::1",
      "                         2001:db8::2",
      "                         2001:db8::3",
      "Excluded ranges:         17 ipaddresses",
      " 2001:db8::20              -> 2001:db8::30",
      "Used addresses:          1",
      "Unused addresses:        18446744073709551594 (excluding reserved adr.)"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.779271+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "2001:db8::",
          "2001:db8::1",
          "2001:db8::2",
          "2001:db8::3"
        ]
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 1
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/unused_count",
        "data": {},
        "status": 200,
        "response": 18446744073709551594
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8::/64  # should require force, because the network is frozen",
    "ok": [],
    "warning": [
      "Network 2001:db8::/64 is frozen, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:41.212812+02:00",
              "updated_at": "2025-08-26T11:56:41.212818+02:00",
              "ipaddress": "2001:db8::4",
              "host": 8
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:41.197863+02:00",
              "updated_at": "2025-08-26T11:56:41.197869+02:00",
              "txt": "v=spf1 -all",
              "host": 8
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:41.196169+02:00",
          "updated_at": "2025-08-26T11:56:41.196176+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/first_unused",
        "data": {},
        "status": 200,
        "response": "2001:db8::5"
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8::/64 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8::/64 -force",
    "ok": [
      "Added ipaddress 2001:db8::5 to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::5",
          "host": "8"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:41.500616+02:00",
          "updated_at": "2025-08-26T11:56:41.500623+02:00",
          "ipaddress": "2001:db8::5",
          "host": 8
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=8",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:41.212812+02:00",
                  "updated_at": "2025-08-26T11:56:41.212818+02:00",
                  "ipaddress": "2001:db8::4",
                  "host": 8
                },
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:41.500616+02:00",
                  "updated_at": "2025-08-26T11:56:41.500623+02:00",
                  "ipaddress": "2001:db8::5",
                  "host": 8
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:41.197863+02:00",
                  "updated_at": "2025-08-26T11:56:41.197869+02:00",
                  "txt": "v=spf1 -all",
                  "host": 8
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:41.196169+02:00",
              "updated_at": "2025-08-26T11:56:41.196176+02:00",
              "name": "somehost.example.org",
              "contact": "support@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T11:56:58.690703+02:00",
              "updated_at": "2025-06-19T11:56:58.690711+02:00",
              "ipaddress": "2001:db8::4",
              "host": 8
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T11:56:59.025456+02:00",
              "updated_at": "2025-06-19T11:56:59.025461+02:00",
              "ipaddress": "2001:db8::5",
              "host": 8
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:58.676157+02:00",
              "updated_at": "2025-06-19T11:56:58.676163+02:00",
              "txt": "v=spf1 -all",
              "host": 8
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.674253+02:00",
          "updated_at": "2025-06-19T11:56:58.674261+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.779271+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.779271+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network unset_frozen 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network unset_frozen 2001:db8::/64",
    "ok": [
      "Updated frozen to 'False' for 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T11:56:58.463832+02:00",
              "updated_at": "2025-06-19T11:56:58.463842+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:58.276297+02:00",
          "updated_at": "2025-06-19T11:56:58.779271+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": true,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {
          "frozen": false
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [
                {
                  "created_at": "2025-06-19T11:56:58.463832+02:00",
                  "updated_at": "2025-06-19T11:56:58.463842+02:00",
                  "start_ip": "2001:db8::20",
                  "end_ip": "2001:db8::30",
                  "network": 4
                }
              ],
              "policy": null,
              "communities": [],
              "created_at": "2025-06-19T11:56:58.276297+02:00",
              "updated_at": "2025-06-19T11:56:59.423682+02:00",
              "network": "2001:db8::/64",
              "description": "Frozen but has one host",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -contact support@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -contact support@example.org",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      support@example.org",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 11:56:59 2025",
      "Updated:      Thu Jun 19 11:56:59 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T11:56:54.325815+02:00",
                "updated_at": "2025-06-19T11:56:54.325829+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T11:56:53.844130+02:00",
            "updated_at": "2025-06-19T11:56:59.368472+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T11:56:54.386439+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "contact": "support@example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:59.536346+02:00",
              "updated_at": "2025-06-19T11:56:59.536355+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:59.534175+02:00",
          "updated_at": "2025-06-19T11:56:59.534182+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.0",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.0 # should require force because it is a network address",
    "ok": [],
    "warning": [
      "IP 10.0.1.0 is the network address of network 10.0.1.0/24, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:59.536346+02:00",
              "updated_at": "2025-06-19T11:56:59.536355+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:59.534175+02:00",
          "updated_at": "2025-06-19T11:56:59.534182+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.0",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:56.238306+02:00",
          "updated_at": "2025-06-19T11:56:57.831469+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.0 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.0 -force",
    "ok": [
      "Added ipaddress 10.0.1.0 to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.1.0",
          "host": "9"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:41.993992+02:00",
          "updated_at": "2025-08-26T11:56:41.993997+02:00",
          "ipaddress": "10.0.1.0",
          "host": 9
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=9",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:41.993992+02:00",
                  "updated_at": "2025-08-26T11:56:41.993997+02:00",
                  "ipaddress": "10.0.1.0",
                  "host": 9
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:41.884045+02:00",
                  "updated_at": "2025-08-26T11:56:41.884052+02:00",
                  "txt": "v=spf1 -all",
                  "host": 9
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:41.882174+02:00",
              "updated_at": "2025-08-26T11:56:41.882182+02:00",
              "name": "somehost.example.org",
              "contact": "support@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_remove somehost 10.0.1.0",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_remove somehost 10.0.1.0 # force not required for removal",
    "ok": [
      "Removed ipaddress 10.0.1.0 from somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T11:56:59.691204+02:00",
              "updated_at": "2025-06-19T11:56:59.691210+02:00",
              "ipaddress": "10.0.1.0",
              "host": 9
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:59.536346+02:00",
              "updated_at": "2025-06-19T11:56:59.536355+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:59.534175+02:00",
          "updated_at": "2025-06-19T11:56:59.534182+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/8",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.255",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.255 # force again (broadcast address)",
    "ok": [],
    "warning": [
      "IP 10.0.1.255 is the broadcast address of network 10.0.1.0/24, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T11:56:59.536346+02:00",
              "updated_at": "2025-06-19T11:56:59.536355+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:59.534175+02:00",
          "updated_at": "2025-06-19T11:56:59.534182+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.255",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:56.238306+02:00",
          "updated_at": "2025-06-19T11:56:57.831469+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add somehost 10.0.1.255 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add somehost 10.0.1.255 -force",
    "ok": [
      "Added ipaddress 10.0.1.255 to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.1.255",
          "host": "9"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:42.223919+02:00",
          "updated_at": "2025-08-26T11:56:42.223938+02:00",
          "ipaddress": "10.0.1.255",
          "host": 9
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=9",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:42.223919+02:00",
                  "updated_at": "2025-08-26T11:56:42.223938+02:00",
                  "ipaddress": "10.0.1.255",
                  "host": 9
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:41.884045+02:00",
                  "updated_at": "2025-08-26T11:56:41.884052+02:00",
                  "txt": "v=spf1 -all",
                  "host": 9
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:41.882174+02:00",
              "updated_at": "2025-08-26T11:56:41.882182+02:00",
              "name": "somehost.example.org",
              "contact": "support@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_change -old 10.0.1.255 -new 10.0.1.0 somehost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_change -old 10.0.1.255 -new 10.0.1.0 somehost # changing to network address, requires force",
    "ok": [],
    "warning": [
      "IP 10.0.1.0 is the network address of network 10.0.1.0/24, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.0",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:10.897148+02:00",
          "updated_at": "2025-06-20T11:43:12.833706+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:15.678831+02:00",
              "updated_at": "2025-06-20T11:43:15.678840+02:00",
              "ipaddress": "10.0.1.255",
              "host": 9
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-20T11:43:14.707352+02:00",
              "updated_at": "2025-06-20T11:43:14.707360+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:14.704872+02:00",
          "updated_at": "2025-06-20T11:43:14.704882+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_change -old 10.0.1.255 -new 10.0.1.0 somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_change -old 10.0.1.255 -new 10.0.1.0 somehost -force",
    "ok": [
      "changed ip 10.0.1.255 to 10.0.1.0 for somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/9",
        "data": {
          "ipaddress": "10.0.1.0"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/9",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:42.223919+02:00",
          "updated_at": "2025-08-26T11:56:42.368461+02:00",
          "ipaddress": "10.0.1.0",
          "host": 9
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force # cleanup",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:13:26.186349+02:00",
              "updated_at": "2025-06-19T13:13:26.369464+02:00",
              "ipaddress": "10.0.1.0",
              "host": 9
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:13:25.719677+02:00",
              "updated_at": "2025-06-19T13:13:25.719683+02:00",
              "txt": "v=spf1 -all",
              "host": 9
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:13:25.717996+02:00",
          "updated_at": "2025-06-19T13:13:25.718004+02:00",
          "name": "somehost.example.org",
          "contact": "support@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.0",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.0 # requires force because it is a network address",
    "ok": [],
    "warning": [
      "IP 10.0.1.0 is a network address, not a host address, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T12:49:17.978940+02:00",
                "updated_at": "2025-06-19T12:49:17.978953+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T12:49:17.403500+02:00",
            "updated_at": "2025-06-19T12:49:24.244041+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T12:49:18.049890+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.0",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T12:49:20.307109+02:00",
          "updated_at": "2025-06-19T12:49:21.946774+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.1 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.1 -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP         MAC         ",
      "              10.0.1.1   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:42 2025",
      "Updated:      Tue Aug 26 11:56:42 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.1",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "ipaddress": "10.0.1.1"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:42.628635+02:00",
              "updated_at": "2025-08-26T11:56:42.628641+02:00",
              "ipaddress": "10.0.1.1",
              "host": 10
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:42.613402+02:00",
              "updated_at": "2025-08-26T11:56:42.613407+02:00",
              "txt": "v=spf1 -all",
              "host": 10
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:42.611708+02:00",
          "updated_at": "2025-08-26T11:56:42.611715+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.1",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force -override ipaddress",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force -override ipaddress",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:04:10.503890+02:00",
              "updated_at": "2025-06-19T13:04:10.503896+02:00",
              "ipaddress": "10.0.1.1",
              "host": 10
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:04:10.488719+02:00",
              "updated_at": "2025-06-19T13:04:10.488725+02:00",
              "txt": "v=spf1 -all",
              "host": 10
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:04:10.487012+02:00",
          "updated_at": "2025-06-19T13:04:10.487020+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.255",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.255 # requires force because it is a broadcast address",
    "ok": [],
    "warning": [
      "IP 10.0.1.255 is a broadcast address, not a host address, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:04:03.806300+02:00",
                "updated_at": "2025-06-19T13:04:03.806309+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:04:03.507442+02:00",
            "updated_at": "2025-06-19T13:04:10.613583+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:04:03.847616+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.255",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:04:05.973393+02:00",
          "updated_at": "2025-06-19T13:04:07.988169+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.255 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.255 -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP           MAC         ",
      "              10.0.1.255   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:42 2025",
      "Updated:      Tue Aug 26 11:56:42 2025"
    ],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "ipaddress": "10.0.1.255"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:42.881768+02:00",
              "updated_at": "2025-08-26T11:56:42.881777+02:00",
              "ipaddress": "10.0.1.255",
              "host": 11
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:42.862300+02:00",
              "updated_at": "2025-08-26T11:56:42.862307+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:42.859916+02:00",
          "updated_at": "2025-08-26T11:56:42.859925+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.255",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_remove somehost 10.0.1.255",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_remove somehost 10.0.1.255 # cleanup",
    "ok": [
      "Removed ipaddress 10.0.1.255 from somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:42:10.124558+02:00",
              "updated_at": "2025-06-19T13:42:10.124564+02:00",
              "ipaddress": "10.0.1.255",
              "host": 11
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:42:10.106647+02:00",
              "updated_at": "2025-06-19T13:42:10.106653+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:10.104606+02:00",
          "updated_at": "2025-06-19T13:42:10.104613+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/11",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8::",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8:: # should require force because it is a network address",
    "ok": [],
    "warning": [
      "IP 2001:db8:: is the network address of network 2001:db8::/64, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:42:10.106647+02:00",
              "updated_at": "2025-06-19T13:42:10.106653+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:10.104606+02:00",
          "updated_at": "2025-06-19T13:42:10.104613+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T13:42:08.147979+02:00",
              "updated_at": "2025-06-19T13:42:08.147988+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:07.836969+02:00",
          "updated_at": "2025-06-19T13:42:08.906149+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8:: -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8:: -force",
    "ok": [
      "Added ipaddress 2001:db8:: to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::",
          "host": "11"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:43.088591+02:00",
          "updated_at": "2025-08-26T11:56:43.088600+02:00",
          "ipaddress": "2001:db8::",
          "host": 11
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=11",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:43.088591+02:00",
                  "updated_at": "2025-08-26T11:56:43.088600+02:00",
                  "ipaddress": "2001:db8::",
                  "host": 11
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:42.862300+02:00",
                  "updated_at": "2025-08-26T11:56:42.862307+02:00",
                  "txt": "v=spf1 -all",
                  "host": 11
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:42.859916+02:00",
              "updated_at": "2025-08-26T11:56:42.859925+02:00",
              "name": "somehost.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_remove somehost 2001:db8::",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_remove somehost 2001:db8:: # force not required for removal",
    "ok": [
      "Removed ipaddress 2001:db8:: from somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:42:10.331837+02:00",
              "updated_at": "2025-06-19T13:42:10.331843+02:00",
              "ipaddress": "2001:db8::",
              "host": 11
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:42:10.106647+02:00",
              "updated_at": "2025-06-19T13:42:10.106653+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:10.104606+02:00",
          "updated_at": "2025-06-19T13:42:10.104613+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/12",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8::ffff:ffff:ffff:ffff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8::ffff:ffff:ffff:ffff # force again (broadcast address)",
    "ok": [],
    "warning": [
      "IP 2001:db8::ffff:ffff:ffff:ffff is the broadcast address of network 2001:db8::/64, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:42:10.106647+02:00",
              "updated_at": "2025-06-19T13:42:10.106653+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:10.104606+02:00",
          "updated_at": "2025-06-19T13:42:10.104613+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3Affff%3Affff%3Affff%3Affff",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T13:42:08.147979+02:00",
              "updated_at": "2025-06-19T13:42:08.147988+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:07.836969+02:00",
          "updated_at": "2025-06-19T13:42:08.906149+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add somehost 2001:db8::ffff:ffff:ffff:ffff -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add somehost 2001:db8::ffff:ffff:ffff:ffff -force",
    "ok": [
      "Added ipaddress 2001:db8::ffff:ffff:ffff:ffff to somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::ffff:ffff:ffff:ffff",
          "host": "11"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:43.293421+02:00",
          "updated_at": "2025-08-26T11:56:43.293428+02:00",
          "ipaddress": "2001:db8::ffff:ffff:ffff:ffff",
          "host": 11
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=11",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:43.293421+02:00",
                  "updated_at": "2025-08-26T11:56:43.293428+02:00",
                  "ipaddress": "2001:db8::ffff:ffff:ffff:ffff",
                  "host": 11
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:42.862300+02:00",
                  "updated_at": "2025-08-26T11:56:42.862307+02:00",
                  "txt": "v=spf1 -all",
                  "host": 11
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:42.859916+02:00",
              "updated_at": "2025-08-26T11:56:42.859925+02:00",
              "name": "somehost.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_change -old 2001:db8::ffff:ffff:ffff:ffff -new 2001:db8:: somehost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_change -old 2001:db8::ffff:ffff:ffff:ffff -new 2001:db8:: somehost # changing to network address, requires force",
    "ok": [],
    "warning": [
      "IP 2001:db8:: is the network address of network 2001:db8::/64, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-20T11:43:13.637366+02:00",
              "updated_at": "2025-06-20T11:43:13.637380+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:13.395028+02:00",
          "updated_at": "2025-06-20T11:43:14.560692+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:17.529248+02:00",
              "updated_at": "2025-06-20T11:43:17.529255+02:00",
              "ipaddress": "2001:db8::ffff:ffff:ffff:ffff",
              "host": 11
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-20T11:43:16.941149+02:00",
              "updated_at": "2025-06-20T11:43:16.941159+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:16.931464+02:00",
          "updated_at": "2025-06-20T11:43:16.931486+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_change -old 2001:db8::ffff:ffff:ffff:ffff -new 2001:db8:: somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_change -old 2001:db8::ffff:ffff:ffff:ffff -new 2001:db8:: somehost -force",
    "ok": [
      "changed ip 2001:db8::ffff:ffff:ffff:ffff to 2001:db8:: for somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/13",
        "data": {
          "ipaddress": "2001:db8::"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/13",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:43.293421+02:00",
          "updated_at": "2025-08-26T11:56:43.429354+02:00",
          "ipaddress": "2001:db8::",
          "host": 11
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_remove somehost 2001:db8::ffff:ffff:ffff:ffff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_remove somehost 2001:db8::ffff:ffff:ffff:ffff # force not required for removal",
    "ok": [],
    "warning": [
      "Host somehost.example.org does not have IP 2001:db8::ffff:ffff:ffff:ffff"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:42:10.549776+02:00",
              "updated_at": "2025-06-19T13:42:10.967604+02:00",
              "ipaddress": "2001:db8::",
              "host": 11
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:42:10.106647+02:00",
              "updated_at": "2025-06-19T13:42:10.106653+02:00",
              "txt": "v=spf1 -all",
              "host": 11
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:42:10.104606+02:00",
          "updated_at": "2025-06-19T13:42:10.104613+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force -override ipaddress",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force -override ipaddress# cleanup",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.0",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.0 # requires force because it is a network address",
    "ok": [],
    "warning": [
      "IP 10.0.1.0 is a network address, not a host address, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:04:03.806300+02:00",
                "updated_at": "2025-06-19T13:04:03.806309+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:04:03.507442+02:00",
            "updated_at": "2025-06-19T13:04:11.532322+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:04:03.847616+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.0",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:04:05.973393+02:00",
          "updated_at": "2025-06-19T13:04:07.988169+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.1 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.1 -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP         MAC         ",
      "              10.0.1.1   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:43 2025",
      "Updated:      Tue Aug 26 11:56:43 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.1",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "ipaddress": "10.0.1.1"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:43.663246+02:00",
              "updated_at": "2025-08-26T11:56:43.663255+02:00",
              "ipaddress": "10.0.1.1",
              "host": 12
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:43.648168+02:00",
              "updated_at": "2025-08-26T11:56:43.648174+02:00",
              "txt": "v=spf1 -all",
              "host": 12
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:43.646373+02:00",
          "updated_at": "2025-08-26T11:56:43.646380+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.1",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force -override ipaddress",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force -override ipaddress",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:04:11.710063+02:00",
              "updated_at": "2025-06-19T13:04:11.710069+02:00",
              "ipaddress": "10.0.1.1",
              "host": 12
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:04:11.696356+02:00",
              "updated_at": "2025-06-19T13:04:11.696362+02:00",
              "txt": "v=spf1 -all",
              "host": 12
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:04:11.694840+02:00",
          "updated_at": "2025-06-19T13:04:11.694847+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.255",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.255 # requires force because it is a broadcast address",
    "ok": [],
    "warning": [
      "IP 10.0.1.255 is a broadcast address, not a host address, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/somehost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:01.355366+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.255",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:08:53.578354+02:00",
          "updated_at": "2025-06-19T13:08:56.071248+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add somehost -ip 10.0.1.255 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add somehost -ip 10.0.1.255 -force",
    "ok": [
      "Created host somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         somehost.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP           MAC         ",
      "              10.0.1.255   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:43 2025",
      "Updated:      Tue Aug 26 11:56:43 2025"
    ],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "somehost.example.org",
          "ipaddress": "10.0.1.255"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:43.939550+02:00",
              "updated_at": "2025-08-26T11:56:43.939556+02:00",
              "ipaddress": "10.0.1.255",
              "host": 13
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:43.924102+02:00",
              "updated_at": "2025-08-26T11:56:43.924109+02:00",
              "txt": "v=spf1 -all",
              "host": 13
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:43.921940+02:00",
          "updated_at": "2025-08-26T11:56:43.921946+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.1.255",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:38.384090+02:00",
          "updated_at": "2025-08-26T11:56:40.079937+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove somehost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove somehost -force",
    "ok": [
      "removed somehost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:01.562059+02:00",
              "updated_at": "2025-06-19T13:09:01.562065+02:00",
              "ipaddress": "10.0.1.255",
              "host": 13
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:01.545751+02:00",
              "updated_at": "2025-06-19T13:09:01.545757+02:00",
              "txt": "v=spf1 -all",
              "host": 13
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:01.543440+02:00",
          "updated_at": "2025-06-19T13:09:01.543448+02:00",
          "name": "somehost.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/somehost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.1.0/24 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.1.0/24 -f",
    "ok": [
      "Removed network 10.0.1.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T11:56:56.238306+02:00",
          "updated_at": "2025-06-19T11:56:57.831469+02:00",
          "network": "10.0.1.0/24",
          "description": "Frozen but has one host",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "cat1",
          "location": "loc1",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.1.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.1.0/24",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 2001:db8::/64 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 2001:db8::/64 -f",
    "ok": [
      "Removed network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [
            {
              "created_at": "2025-06-19T12:05:19.448322+02:00",
              "updated_at": "2025-06-19T12:05:19.448339+02:00",
              "start_ip": "2001:db8::20",
              "end_ip": "2001:db8::30",
              "network": 4
            }
          ],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T12:05:19.212057+02:00",
          "updated_at": "2025-06-19T12:05:20.227928+02:00",
          "network": "2001:db8::/64",
          "description": "Frozen but has one host",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "group create mygroup \"This describes the group\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group create mygroup \"This describes the group\"",
    "ok": [
      "Created new group mygroup"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/",
        "data": {
          "name": "mygroup",
          "description": "This describes the group"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [],
          "owners": [],
          "created_at": "2025-05-19T10:27:45.736414+02:00",
          "updated_at": "2025-05-19T10:27:45.736430+02:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add testhost1",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add testhost1",
    "ok": [
      "Created host testhost1.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         testhost1.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:02 2025",
      "Updated:      Thu Jun 19 13:09:02 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost1.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/testhost1.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/testhost1.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:01.687553+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "testhost1.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost1.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.041616+02:00",
              "updated_at": "2025-06-19T13:09:02.041622+02:00",
              "txt": "v=spf1 -all",
              "host": 14
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.039368+02:00",
          "updated_at": "2025-06-19T13:09:02.039384+02:00",
          "name": "testhost1.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add testhost2",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add testhost2",
    "ok": [
      "Created host testhost2.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         testhost2.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:02 2025",
      "Updated:      Thu Jun 19 13:09:02 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/testhost2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/testhost2.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:02.041081+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "testhost2.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.162011+02:00",
              "updated_at": "2025-06-19T13:09:02.162021+02:00",
              "txt": "v=spf1 -all",
              "host": 15
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.160106+02:00",
          "updated_at": "2025-06-19T13:09:02.160113+02:00",
          "name": "testhost2.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "group host_add mygroup testhost1",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group host_add mygroup testhost1",
    "ok": [
      "Added host 'testhost1.example.org' to 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [],
          "owners": [],
          "created_at": "2025-06-19T13:09:01.889409+02:00",
          "updated_at": "2025-06-19T13:09:01.889423+02:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost1.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.041616+02:00",
              "updated_at": "2025-06-19T13:09:02.041622+02:00",
              "txt": "v=spf1 -all",
              "host": 14
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.039368+02:00",
          "updated_at": "2025-06-19T13:09:02.039384+02:00",
          "name": "testhost1.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/mygroup/hosts/",
        "data": {
          "name": "testhost1.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [],
              "created_at": "2025-06-19T13:09:01.889409+02:00",
              "updated_at": "2025-06-19T13:09:02.290242+02:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group host_add mygroup testhost2",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group host_add mygroup testhost2",
    "ok": [
      "Added host 'testhost2.example.org' to 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [],
          "created_at": "2025-06-19T13:09:01.889409+02:00",
          "updated_at": "2025-06-19T13:09:02.290242+02:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.162011+02:00",
              "updated_at": "2025-06-19T13:09:02.162021+02:00",
              "txt": "v=spf1 -all",
              "host": 15
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.160106+02:00",
          "updated_at": "2025-06-19T13:09:02.160113+02:00",
          "name": "testhost2.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/mygroup/hosts/",
        "data": {
          "name": "testhost2.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                },
                {
                  "name": "testhost2.example.org"
                }
              ],
              "owners": [],
              "created_at": "2025-06-19T13:09:01.889409+02:00",
              "updated_at": "2025-06-19T13:09:02.609042+02:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group owner_add mygroup myself",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group owner_add mygroup myself",
    "ok": [
      "Added owner 'myself' to 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            },
            {
              "name": "testhost2.example.org"
            }
          ],
          "owners": [],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:55.692565+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/mygroup/owners/",
        "data": {
          "name": "myself"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                },
                {
                  "name": "testhost2.example.org"
                }
              ],
              "owners": [
                {
                  "name": "myself"
                }
              ],
              "created_at": "2024-12-11T16:44:54.078203+01:00",
              "updated_at": "2024-12-11T16:44:55.692565+01:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group host_remove mygroup testhost2",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group host_remove mygroup testhost2",
    "ok": [
      "Removed host 'testhost2.example.org' from 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            },
            {
              "name": "testhost2.example.org"
            }
          ],
          "owners": [
            {
              "name": "myself"
            }
          ],
          "created_at": "2025-06-19T13:09:01.889409+02:00",
          "updated_at": "2025-06-19T13:09:02.609042+02:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.162011+02:00",
              "updated_at": "2025-06-19T13:09:02.162021+02:00",
              "txt": "v=spf1 -all",
              "host": 15
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [
            "mygroup"
          ],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.160106+02:00",
          "updated_at": "2025-06-19T13:09:02.160113+02:00",
          "name": "testhost2.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostgroups/mygroup/hosts/testhost2.example.org",
        "data": {},
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [
                {
                  "name": "myself"
                }
              ],
              "created_at": "2025-06-19T13:09:01.889409+02:00",
              "updated_at": "2025-06-19T13:09:02.812915+02:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group info mygroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group info mygroup",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         mygroup",
      "Description:  This describes the group",
      "Owners:       myself",
      "Parents:      ",
      "Groups:       ",
      "Hosts:        1",
      "Created:      Wed Dec 11 16:44:54 2024",
      "Updated:      Wed Dec 11 16:44:56 2024"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "myself"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.044625+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      }
    ],
    "time": null
  },
  {
    "command": "group history mygroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group history mygroup",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2024-10-08 15:31:16 [test]: HostGroup create: name = 'mygroup', description = 'This describes the group'",
      "2024-10-08 15:31:17 [test]: Host add: host testhost1.example.org to group mygroup",
      "2024-10-08 15:31:17 [test]: Host add: host testhost2.example.org to group mygroup",
      "2024-10-08 15:31:17 [test]: Group add: owner myself to group mygroup",
      "2024-10-08 15:31:17 [test]: Host remove: host testhost2.example.org from group mygroup"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=group&name=mygroup",
        "data": {},
        "status": 200,
        "response": {
          "count": 5,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:16.854660+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "create",
              "data": "{\"name\": \"mygroup\", \"description\": \"This describes the group\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:17.117956+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost1.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.158190+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.189894+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.234115+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=group&model_id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 5,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:16.854660+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "create",
              "data": "{\"name\": \"mygroup\", \"description\": \"This describes the group\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:17.117956+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost1.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.158190+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.189894+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.234115+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=groups&data__id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "group create yourgroup \"meh\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group create yourgroup \"meh\"",
    "ok": [
      "Created new group yourgroup"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/yourgroup",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/",
        "data": {
          "name": "yourgroup",
          "description": "meh"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/yourgroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [],
          "owners": [],
          "created_at": "2025-05-19T10:27:46.675079+02:00",
          "updated_at": "2025-05-19T10:27:46.675091+02:00",
          "name": "yourgroup",
          "description": "meh"
        }
      }
    ],
    "time": null
  },
  {
    "command": "group group_add mygroup yourgroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group group_add mygroup yourgroup",
    "ok": [
      "Added group 'yourgroup' to 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/yourgroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [],
          "owners": [],
          "created_at": "2024-12-11T16:44:56.440003+01:00",
          "updated_at": "2024-12-11T16:44:56.440025+01:00",
          "name": "yourgroup",
          "description": "meh"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "myself"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.044625+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/mygroup/groups/",
        "data": {
          "name": "yourgroup"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [
                {
                  "name": "yourgroup"
                }
              ],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [
                {
                  "name": "myself"
                }
              ],
              "created_at": "2024-12-11T16:44:54.078203+01:00",
              "updated_at": "2024-12-11T16:44:56.640484+01:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group info mygroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group info mygroup",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         mygroup",
      "Description:  This describes the group",
      "Owners:       myself",
      "Parents:      ",
      "Groups:       yourgroup",
      "Hosts:        1",
      "Created:      Wed Dec 11 16:44:54 2024",
      "Updated:      Wed Dec 11 16:44:56 2024"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [
            {
              "name": "yourgroup"
            }
          ],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "myself"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.640484+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      }
    ],
    "time": null
  },
  {
    "command": "group group_remove mygroup yourgroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group group_remove mygroup yourgroup",
    "ok": [
      "Removed group 'yourgroup' from 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hostgroups/mygroup/groups/yourgroup",
        "data": {},
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [
                {
                  "name": "myself"
                }
              ],
              "created_at": "2025-08-26T11:56:44.457550+02:00",
              "updated_at": "2025-08-26T11:56:45.501550+02:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group owner_add mygroup anotherowner",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group owner_add mygroup anotherowner",
    "ok": [
      "Added owner 'anotherowner' to 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "myself"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.864542+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostgroups/mygroup/owners/",
        "data": {
          "name": "anotherowner"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [
                {
                  "name": "myself"
                },
                {
                  "name": "anotherowner"
                }
              ],
              "created_at": "2024-12-11T16:44:54.078203+01:00",
              "updated_at": "2024-12-11T16:44:56.864542+01:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group owner_remove mygroup myself",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group owner_remove mygroup myself",
    "ok": [
      "Removed owner 'myself' from 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "anotherowner"
            },
            {
              "name": "myself"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.864542+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostgroups/mygroup/owners/myself",
        "data": {},
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/?id=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "parent": [],
              "groups": [],
              "hosts": [
                {
                  "name": "testhost1.example.org"
                }
              ],
              "owners": [
                {
                  "name": "anotherowner"
                }
              ],
              "created_at": "2024-12-11T16:44:54.078203+01:00",
              "updated_at": "2024-12-11T16:44:56.864542+01:00",
              "name": "mygroup",
              "description": "This describes the group"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "group history mygroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group history mygroup",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2024-10-08 15:31:16 [test]: HostGroup create: name = 'mygroup', description = 'This describes the group'",
      "2024-10-08 15:31:17 [test]: Host add: host testhost1.example.org to group mygroup",
      "2024-10-08 15:31:17 [test]: Host add: host testhost2.example.org to group mygroup",
      "2024-10-08 15:31:17 [test]: Group add: owner myself to group mygroup",
      "2024-10-08 15:31:17 [test]: Host remove: host testhost2.example.org from group mygroup",
      "2024-10-08 15:31:17 [test]: HostGroup add: group yourgroup to group mygroup",
      "2024-10-08 15:31:17 [test]: HostGroup remove: group yourgroup from group mygroup",
      "2024-10-08 15:31:17 [test]: Group add: owner anotherowner to group mygroup",
      "2024-10-08 15:31:17 [test]: Group remove: owner myself from group mygroup"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=group&name=mygroup",
        "data": {},
        "status": 200,
        "response": {
          "count": 9,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:16.854660+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "create",
              "data": "{\"name\": \"mygroup\", \"description\": \"This describes the group\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:17.117956+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost1.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.158190+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.189894+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.234115+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.348613+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "add",
              "data": {
                "name": "yourgroup",
                "relation": "groups"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.391385+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "remove",
              "data": {
                "name": "yourgroup",
                "relation": "groups"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.423290+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "anotherowner",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.456577+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "remove",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=group&model_id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 9,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:16.854660+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "create",
              "data": "{\"name\": \"mygroup\", \"description\": \"This describes the group\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:17.117956+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost1.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.158190+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.189894+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.234115+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "testhost2.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.348613+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "add",
              "data": {
                "name": "yourgroup",
                "relation": "groups"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.391385+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "HostGroup",
              "action": "remove",
              "data": {
                "name": "yourgroup",
                "relation": "groups"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.423290+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "add",
              "data": {
                "name": "anotherowner",
                "relation": "owners"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:17.456577+02:00",
              "user": "test",
              "resource": "group",
              "name": "mygroup",
              "model_id": 1,
              "model": "Group",
              "action": "remove",
              "data": {
                "name": "myself",
                "relation": "owners"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=groups&data__id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "group delete mygroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group delete mygroup     # fails because the group contains testhost1, must force",
    "ok": [],
    "warning": [
      "Group contains hosts or groups, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [
            {
              "name": "testhost1.example.org"
            }
          ],
          "owners": [
            {
              "name": "anotherowner"
            }
          ],
          "created_at": "2024-12-11T16:44:54.078203+01:00",
          "updated_at": "2024-12-11T16:44:56.864542+01:00",
          "name": "mygroup",
          "description": "This describes the group"
        }
      }
    ],
    "time": null
  },
  {
    "command": "group delete mygroup -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group delete mygroup -force",
    "ok": [
      "Deleted group 'mygroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hostgroups/mygroup",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "group delete yourgroup",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "group delete yourgroup",
    "ok": [
      "Deleted group 'yourgroup'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostgroups/yourgroup",
        "data": {},
        "status": 200,
        "response": {
          "parent": [],
          "groups": [],
          "hosts": [],
          "owners": [],
          "created_at": "2024-12-11T16:44:56.440003+01:00",
          "updated_at": "2024-12-11T16:44:56.440025+01:00",
          "name": "yourgroup",
          "description": "meh"
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostgroups/yourgroup",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove testhost1",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove testhost1",
    "ok": [
      "removed testhost1.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost1.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.041616+02:00",
              "updated_at": "2025-06-19T13:09:02.041622+02:00",
              "txt": "v=spf1 -all",
              "host": 14
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.039368+02:00",
          "updated_at": "2025-06-19T13:09:02.039384+02:00",
          "name": "testhost1.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/testhost1.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove testhost2",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove testhost2",
    "ok": [
      "removed testhost2.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:02.162011+02:00",
              "updated_at": "2025-06-19T13:09:02.162021+02:00",
              "txt": "v=spf1 -all",
              "host": 15
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:02.160106+02:00",
          "updated_at": "2025-06-19T13:09:02.160113+02:00",
          "name": "testhost2.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/testhost2.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone delegation_create example.org wut.example.org ns2.example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delegation_create example.org wut.example.org ns2.example.org -force",
    "ok": [
      "Created zone delegation wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2025-05-19T10:27:38.778680+02:00",
              "updated_at": "2025-05-19T10:27:38.778705+02:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2025-05-19T10:27:38.232774+02:00",
          "updated_at": "2025-05-19T10:27:47.465803+02:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2025-05-19T10:27:38.853040+02:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/ns2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/ns2.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/zones/forward/example.org/delegations/",
        "data": {
          "name": "wut.example.org",
          "nameservers": [
            "ns2.example.org"
          ]
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2025-05-19T10:27:38.778680+02:00",
              "updated_at": "2025-05-19T10:27:38.778705+02:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2025-05-19T10:27:47.606669+02:00",
          "updated_at": "2025-05-19T10:27:47.611536+02:00",
          "name": "wut.example.org",
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "zone delegation_comment_set example.org wut.example.org \"This is a comment\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delegation_comment_set example.org wut.example.org \"This is a comment\"",
    "ok": [
      "Updated comment for wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2025-08-26T11:56:35.781651+02:00",
              "updated_at": "2025-08-26T11:56:35.781663+02:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2025-08-26T11:56:35.478972+02:00",
          "updated_at": "2025-08-26T11:56:46.169656+02:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2025-08-26T11:56:36.090230+02:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {
          "comment": "This is a comment"
        },
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone delegation_list example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delegation_list example.org",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Delegations:",
      "    wut.example.org",
      "        Comment: This is a comment",
      "        Nameservers:        hostname            TTL",
      "                            ns2.example.org     <not set>"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:58.774765+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2024-12-11T16:44:40.474871+01:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org/delegations/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "nameservers": [
                {
                  "created_at": "2024-12-11T16:44:40.356452+01:00",
                  "updated_at": "2024-12-11T16:44:40.356481+01:00",
                  "name": "ns2.example.org",
                  "ttl": null
                }
              ],
              "created_at": "2024-12-11T16:44:58.566491+01:00",
              "updated_at": "2024-12-11T16:44:58.811285+01:00",
              "name": "wut.example.org",
              "comment": "This is a comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add testhost.wut.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add testhost.wut.example.org   #  should fail: host is in delegation, should require force",
    "ok": [],
    "warning": [
      "testhost.wut.example.org is in zone delegation wut.example.org, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost.wut.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/testhost.wut.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/testhost.wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "delegation": {
            "nameservers": [
              {
                "created_at": "2025-05-19T10:27:38.778680+02:00",
                "updated_at": "2025-05-19T10:27:38.778705+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-05-19T10:27:47.606669+02:00",
            "updated_at": "2025-05-19T10:27:47.702410+02:00",
            "name": "wut.example.org",
            "comment": "This is a comment",
            "zone": 1
          }
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add testhost.wut.example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add testhost.wut.example.org -force  # should work",
    "ok": [
      "Created host testhost.wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         testhost.wut.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "Created:      Tue Aug 26 11:56:46 2025",
      "Updated:      Tue Aug 26 11:56:46 2025"
    ],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "testhost.wut.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost.wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:46.360926+02:00",
          "updated_at": "2025-08-26T11:56:46.360935+02:00",
          "name": "testhost.wut.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": null
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove testhost.wut.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove testhost.wut.example.org",
    "ok": [
      "removed testhost.wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/testhost.wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-03-20T15:37:03.515664+01:00",
          "updated_at": "2025-03-20T15:37:03.515673+01:00",
          "name": "testhost.wut.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": null
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/testhost.wut.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone delegation_comment_remove example.org wut.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delegation_comment_remove example.org wut.example.org",
    "ok": [
      "Removed comment for wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:58.774765+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2024-12-11T16:44:40.474871+01:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:58.566491+01:00",
          "updated_at": "2024-12-11T16:44:58.811285+01:00",
          "name": "wut.example.org",
          "comment": "This is a comment",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {
          "comment": ""
        },
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone delegation_delete example.org wut.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delegation_delete example.org wut.example.org",
    "ok": [
      "Removed zone delegation wut.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:39.701254+01:00",
          "updated_at": "2024-12-11T16:44:59.950305+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2024-12-11T16:44:40.474871+01:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2024-12-11T16:44:40.356452+01:00",
              "updated_at": "2024-12-11T16:44:40.356481+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2024-12-11T16:44:58.566491+01:00",
          "updated_at": "2024-12-11T16:44:59.996272+01:00",
          "name": "wut.example.org",
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/zones/forward/example.org/delegations/wut.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_create apple \"Here's the description\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_create apple \"Here's the description\"",
    "ok": [
      "Created new atom apple"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/atoms/",
        "data": {
          "name": "apple",
          "description": "Here's the description"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2025-05-19T10:27:48.245987+02:00",
          "description": "Here's the description",
          "name": "apple"
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_create -created 2018-07-07 orange \"Round and orange\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_create -created 2018-07-07 orange \"Round and orange\"",
    "ok": [
      "Created new atom orange"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/atoms/",
        "data": {
          "name": "orange",
          "description": "Round and orange",
          "create_date": "2018-07-07"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2025-05-19T10:27:48.328583+02:00",
          "description": "Round and orange",
          "name": "orange"
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_atoms *",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_atoms *",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "apple                \"Here's the description\"",
      "orange               'Round and orange'"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/?name__regex=.",
        "data": {},
        "status": 200,
        "response": {
          "count": 2,
          "next": null,
          "previous": null,
          "results": [
            {
              "roles": [],
              "updated_at": "2024-12-11T16:45:00.243440+01:00",
              "description": "Here's the description",
              "name": "apple"
            },
            {
              "roles": [],
              "updated_at": "2024-12-11T16:45:00.386958+01:00",
              "description": "Round and orange",
              "name": "orange"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_atoms ppl",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_atoms ppl",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "apple                \"Here's the description\""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/?name__regex=.%2Appl.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "roles": [],
              "updated_at": "2024-12-11T16:45:00.243440+01:00",
              "description": "Here's the description",
              "name": "apple"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy role_create fruit \"5 a day\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_create fruit \"5 a day\"",
    "ok": [
      "Created new role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/roles/",
        "data": {
          "name": "fruit",
          "description": "5 a day"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2025-05-19T10:27:48.469607+02:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_roles *",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_roles *",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name    Description   Labels   ",
      "fruit   5 a day                "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?name__regex=.",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2024-12-11T16:45:00.640584+01:00",
              "description": "5 a day",
              "name": "fruit",
              "labels": []
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_roles fru",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_roles fru",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name    Description   Labels   ",
      "fruit   5 a day                "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?name__regex=.%2Afru.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2024-12-11T16:45:00.640584+01:00",
              "description": "5 a day",
              "name": "fruit",
              "labels": []
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy add_atom fruit apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy add_atom fruit apple",
    "ok": [
      "Added atom 'apple' to role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2024-12-11T16:45:00.640584+01:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2024-12-11T16:45:00.243440+01:00",
          "description": "Here's the description",
          "name": "apple"
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/roles/fruit/atoms/",
        "data": {
          "name": "apple"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "policy add_atom fruit orange",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy add_atom fruit orange",
    "ok": [
      "Added atom 'orange' to role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [
            {
              "name": "apple"
            }
          ],
          "updated_at": "2024-12-11T16:45:01.052408+01:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2024-12-11T16:45:00.386958+01:00",
          "description": "Round and orange",
          "name": "orange"
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/roles/fruit/atoms/",
        "data": {
          "name": "orange"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "policy info orange",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy info orange",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         orange",
      "Created:      Sat Jul  7 00:00:00 2018",
      "Updated:      Wed Dec 11 16:45:00 2024",
      "Description:  Round and orange",
      "Roles where this atom is a member:",
      "               fruit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 200,
        "response": {
          "roles": [
            {
              "name": "fruit"
            }
          ],
          "updated_at": "2024-12-11T16:45:00.386958+01:00",
          "description": "Round and orange",
          "name": "orange"
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy info fruit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy info fruit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         fruit",
      "Created:      Mon May 19 00:00:00 2025",
      "Updated:      Mon May 19 10:27:48 2025",
      "Description:  5 a day",
      "Atom members:",
      "               apple",
      "               orange",
      "Labels:"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/fruit",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [
            {
              "name": "apple"
            },
            {
              "name": "orange"
            }
          ],
          "updated_at": "2025-05-19T10:27:48.998114+02:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_members fruit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_members fruit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:",
      " apple",
      " orange"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "policy atom_history apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_history apple",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2024-10-08 15:31:18 [test]: HostPolicyAtom create: description = 'Here's the description', name = 'apple'",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom add: atom apple to role fruit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_atom&name=apple",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.060615+02:00",
              "user": "test",
              "resource": "hostpolicy_atom",
              "name": "apple",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "create",
              "data": "{\"description\": \"Here's the description\", \"name\": \"apple\"}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_atom&model_id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.060615+02:00",
              "user": "test",
              "resource": "hostpolicy_atom",
              "name": "apple",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "create",
              "data": "{\"description\": \"Here's the description\", \"name\": \"apple\"}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=atoms&data__id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.206102+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_delete apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_delete apple  # Should fail because 'apple' is used in role 'fruit'",
    "ok": [],
    "warning": [],
    "error": [
      "Atom 'apple' used in roles: fruit"
    ],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 200,
        "response": {
          "roles": [
            {
              "name": "fruit"
            }
          ],
          "updated_at": "2024-12-11T16:45:00.243440+01:00",
          "description": "Here's the description",
          "name": "apple"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?atoms__name__exact=apple",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [
                {
                  "name": "apple"
                },
                {
                  "name": "orange"
                }
              ],
              "updated_at": "2024-12-11T16:45:01.258316+01:00",
              "description": "5 a day",
              "name": "fruit",
              "labels": []
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy remove_atom fruit apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy remove_atom fruit apple",
    "ok": [
      "Removed atom 'apple' from role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/roles/fruit/atoms/apple",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_history apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_history apple",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2024-10-08 15:31:18 [test]: HostPolicyAtom create: description = 'Here's the description', name = 'apple'",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom add: atom apple to role fruit",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom remove: atom apple from role fruit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_atom&name=apple",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.060615+02:00",
              "user": "test",
              "resource": "hostpolicy_atom",
              "name": "apple",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "create",
              "data": "{\"description\": \"Here's the description\", \"name\": \"apple\"}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_atom&model_id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.060615+02:00",
              "user": "test",
              "resource": "hostpolicy_atom",
              "name": "apple",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "create",
              "data": "{\"description\": \"Here's the description\", \"name\": \"apple\"}"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=atoms&data__id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 2,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.206102+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.351614+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "remove",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_delete apple",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_delete apple",
    "ok": [
      "Deleted atom apple"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2024-12-11T16:45:00.243440+01:00",
          "description": "Here's the description",
          "name": "apple"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?atoms__name__exact=apple",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/atoms/apple",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy set_description orange \"Juicy\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy set_description orange \"Juicy\"",
    "ok": [
      "updated description to 'Juicy' for 'orange'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 200,
        "response": {
          "roles": [
            {
              "name": "fruit"
            }
          ],
          "updated_at": "2024-12-11T16:45:00.386958+01:00",
          "description": "Round and orange",
          "name": "orange"
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {
          "description": "Juicy"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/?id=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "roles": [
                {
                  "name": "fruit"
                }
              ],
              "updated_at": "2024-12-11T16:45:02.376357+01:00",
              "description": "Juicy",
              "name": "orange"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy rename orange tangerine",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy rename orange tangerine",
    "ok": [
      "Renamed 'orange' to 'tangerine'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/tangerine",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/tangerine",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {},
        "status": 200,
        "response": {
          "roles": [
            {
              "name": "fruit"
            }
          ],
          "updated_at": "2025-05-19T10:27:49.697504+02:00",
          "description": "Juicy",
          "name": "orange"
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hostpolicy/atoms/orange",
        "data": {
          "name": "tangerine"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/?id=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "roles": [
                {
                  "name": "fruit"
                }
              ],
              "updated_at": "2025-05-19T10:27:49.824613+02:00",
              "description": "Juicy",
              "name": "tangerine"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:05 2025",
      "Updated:      Thu Jun 19 13:09:05 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:04.405253+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:05.909776+02:00",
              "updated_at": "2025-06-19T13:09:05.909782+02:00",
              "txt": "v=spf1 -all",
              "host": 17
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:05.907474+02:00",
          "updated_at": "2025-06-19T13:09:05.907487+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:05 2025",
      "Updated:      Thu Jun 19 13:09:05 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:05.909776+02:00",
              "updated_at": "2025-06-19T13:09:05.909782+02:00",
              "txt": "v=spf1 -all",
              "host": 17
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:05.907474+02:00",
          "updated_at": "2025-06-19T13:09:05.907487+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy host_add tangerine foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy host_add tangerine foo # should fail, tangerine is an atom, not a role",
    "ok": [],
    "warning": [
      "Role with name 'tangerine' not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/tangerine",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy host_add fruit foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy host_add fruit foo",
    "ok": [
      "Added host foo.example.org to role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [
            {
              "name": "tangerine"
            }
          ],
          "updated_at": "2025-08-26T11:56:47.676513+02:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/roles/fruit/hosts/",
        "data": {
          "name": "foo.example.org"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "policy list_hosts fruit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_hosts fruit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:",
      " foo.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [
            {
              "name": "foo.example.org"
            }
          ],
          "atoms": [
            {
              "name": "tangerine"
            }
          ],
          "updated_at": "2024-12-11T16:45:03.805072+01:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy host_list foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy host_list foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Roles for foo.example.org:",
      "  fruit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:05.909776+02:00",
              "updated_at": "2025-06-19T13:09:05.909782+02:00",
              "txt": "v=spf1 -all",
              "host": 17
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [
            "fruit"
          ],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:05.907474+02:00",
          "updated_at": "2025-06-19T13:09:05.907487+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Roles:        fruit",
      "Created:      Tue Aug 26 11:56:47 2025",
      "Updated:      Tue Aug 26 11:56:47 2025"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "policy host_remove fruit foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy host_remove fruit foo",
    "ok": [
      "Removed host 'foo.example.org' from role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/roles/fruit/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy remove_atom fruit banana",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy remove_atom fruit banana # should fail",
    "ok": [],
    "warning": [
      "Atom 'banana' not a member of 'fruit'"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [
            {
              "name": "tangerine"
            }
          ],
          "updated_at": "2024-12-11T16:45:04.346261+01:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy remove_atom fruit tangerine",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy remove_atom fruit tangerine",
    "ok": [
      "Removed atom 'tangerine' from role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/roles/fruit/atoms/tangerine",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy role_delete vegetables",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_delete vegetables  # fails, that role doesn't exist",
    "ok": [],
    "warning": [
      "Role with name 'vegetables' not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/vegetables",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy role_history fruit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_history fruit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "2024-10-08 15:31:18 [test]: HostPolicyRole create: description = '5 a day', name = 'fruit'",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom add: atom apple to role fruit",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom add: atom orange to role fruit",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom remove: atom apple from role fruit",
      "2024-10-08 15:31:18 [test]: Host add: host foo.example.org to role fruit",
      "2024-10-08 15:31:18 [test]: Host remove: host foo.example.org from role fruit",
      "2024-10-08 15:31:18 [test]: HostPolicyAtom remove: atom tangerine from role fruit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_role&name=fruit",
        "data": {},
        "status": 200,
        "response": {
          "count": 7,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.143450+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyRole",
              "action": "create",
              "data": "{\"description\": \"5 a day\", \"name\": \"fruit\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:18.206102+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.237345+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "orange",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.351614+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "remove",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.742902+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "foo.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.885966+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "foo.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.917045+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "remove",
              "data": {
                "name": "tangerine",
                "relation": "atoms"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?resource=hostpolicy_role&model_id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 7,
          "next": null,
          "previous": null,
          "results": [
            {
              "timestamp": "2024-10-08T15:31:18.143450+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyRole",
              "action": "create",
              "data": "{\"description\": \"5 a day\", \"name\": \"fruit\"}"
            },
            {
              "timestamp": "2024-10-08T15:31:18.206102+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.237345+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "add",
              "data": {
                "name": "orange",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.351614+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "remove",
              "data": {
                "name": "apple",
                "relation": "atoms"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.742902+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "Host",
              "action": "add",
              "data": {
                "name": "foo.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.885966+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "Host",
              "action": "remove",
              "data": {
                "name": "foo.example.org",
                "relation": "hosts"
              }
            },
            {
              "timestamp": "2024-10-08T15:31:18.917045+02:00",
              "user": "test",
              "resource": "hostpolicy_role",
              "name": "fruit",
              "model_id": 1,
              "model": "HostPolicyAtom",
              "action": "remove",
              "data": {
                "name": "tangerine",
                "relation": "atoms"
              }
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/history/?data__relation=roles&data__id__in=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy role_delete fruit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_delete fruit",
    "ok": [
      "Deleted role 'fruit'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2024-12-11T16:45:04.506713+01:00",
          "description": "5 a day",
          "name": "fruit",
          "labels": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/roles/fruit",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "policy atom_delete tangerine",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy atom_delete tangerine",
    "ok": [
      "Deleted atom tangerine"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/tangerine",
        "data": {},
        "status": 200,
        "response": {
          "roles": [],
          "updated_at": "2024-12-11T16:45:02.667228+01:00",
          "description": "Juicy",
          "name": "tangerine"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?atoms__name__exact=tangerine",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/atoms/tangerine",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo",
    "ok": [
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:05.909776+02:00",
              "updated_at": "2025-06-19T13:09:05.909782+02:00",
              "txt": "v=spf1 -all",
              "host": 17
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:05.907474+02:00",
          "updated_at": "2025-06-19T13:09:05.907487+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "permission network_add 10.0.0.0/24 somegroup \"[abc]+.uio.no\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_add 10.0.0.0/24 somegroup \"[abc]+.uio.no\"",
    "ok": [
      "Added permission to 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?range=10.0.0.0%2F24&group=somegroup&regex=%5Babc%5D%2B.uio.no",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/permissions/netgroupregex/",
        "data": {
          "range": "10.0.0.0/24",
          "group": "somegroup",
          "regex": "[abc]+.uio.no"
        },
        "status": 201,
        "response": {
          "created_at": "2024-12-11T16:45:05.428527+01:00",
          "updated_at": "2024-12-11T16:45:05.428550+01:00",
          "group": "somegroup",
          "range": "10.0.0.0/24",
          "regex": "[abc]+.uio.no",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Range         Group       Regex           Labels   ",
      "10.0.0.0/24   somegroup   [abc]+.uio.no            "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?ordering=range%2Cgroup",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:05.428527+01:00",
              "updated_at": "2024-12-11T16:45:05.428550+01:00",
              "group": "somegroup",
              "range": "10.0.0.0/24",
              "regex": "[abc]+.uio.no",
              "labels": []
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/?ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_remove 10.0.0.0/24 othergroup \"[abc]*.uio.no\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_remove 10.0.0.0/24 othergroup \"[abc]*.uio.no\"  # fails, no match",
    "ok": [],
    "warning": [
      "Permission with query {'group': 'othergroup', 'range': '10.0.0.0/24', 'regex': '[abc]*.uio.no'} not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?group=othergroup&range=10.0.0.0%2F24&regex=%5Babc%5D%2A.uio.no",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_remove 10.0.0.0/24 somegroup \"[abc]+.uio.no\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_remove 10.0.0.0/24 somegroup \"[abc]+.uio.no\"",
    "ok": [
      "Removed permission for 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?group=somegroup&range=10.0.0.0%2F24&regex=%5Babc%5D%2B.uio.no",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:05.428527+01:00",
              "updated_at": "2024-12-11T16:45:05.428550+01:00",
              "group": "somegroup",
              "range": "10.0.0.0/24",
              "regex": "[abc]+.uio.no",
              "labels": []
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/permissions/netgroupregex/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.0.0/24 -desc foo -vlan 1234",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.0.0/24 -desc foo -vlan 1234",
    "ok": [
      "created network 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": "1234",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:54.577597+01:00",
          "updated_at": "2025-03-19T10:10:54.577613+01:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:07 2025",
      "Updated:      Thu Jun 19 13:09:07 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:06.675918+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add foo 10.0.0.5",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add foo 10.0.0.5",
    "ok": [
      "Added ipaddress 10.0.0.5 to foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:06.902388+02:00",
          "updated_at": "2025-06-19T13:09:06.902398+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=10.0.0.5&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.0.5",
          "host": "18"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:07.202179+02:00",
          "updated_at": "2025-06-19T13:09:07.202186+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=18",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:07.202179+02:00",
                  "updated_at": "2025-06-19T13:09:07.202186+02:00",
                  "ipaddress": "10.0.0.5",
                  "host": 18
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:07.019259+02:00",
                  "updated_at": "2025-06-19T13:09:07.019265+02:00",
                  "txt": "v=spf1 -all",
                  "host": 18
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:07.017552+02:00",
              "updated_at": "2025-06-19T13:09:07.017559+02:00",
              "name": "foo.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc 1.2.3.4 aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc 1.2.3.4 aa:bb:cc:dd:ee:ff  # doesn't work, because ip addr doesn't exist",
    "ok": [],
    "warning": [
      "IP address 1.2.3.4 does not exist."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?ipaddress=1.2.3.4",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc 10.0.0.5 aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc 10.0.0.5 aa:bb:cc:dd:ee:ff",
    "ok": [
      "Associated mac address aa:bb:cc:dd:ee:ff with ip 10.0.0.5"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?ipaddress=10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:56:49.288257+02:00",
              "updated_at": "2025-08-26T11:56:49.288280+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/16",
        "data": {
          "macaddress": "aa:bb:cc:dd:ee:ff"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/16",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "aa:bb:cc:dd:ee:ff",
          "created_at": "2025-08-26T11:56:49.288257+02:00",
          "updated_at": "2025-08-26T11:56:49.602146+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp disassoc 1.2.3.4",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp disassoc 1.2.3.4    # ip addr dosnt exst",
    "ok": [],
    "warning": [
      "IP address 1.2.3.4 does not exist."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?ipaddress=1.2.3.4",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp disassoc 10.0.0.5",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp disassoc 10.0.0.5",
    "ok": [
      "Disassociated mac address aa:bb:cc:dd:ee:ff from ip 10.0.0.5"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?ipaddress=10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "macaddress": "aa:bb:cc:dd:ee:ff",
              "created_at": "2025-06-19T13:09:07.202179+02:00",
              "updated_at": "2025-06-19T13:09:07.552574+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/16",
        "data": {
          "macaddress": ""
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/16",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:07.202179+02:00",
          "updated_at": "2025-06-19T13:09:07.662258+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc meh 11:22:33:44:55:66",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc meh 11:22:33:44:55:66  # host not found",
    "ok": [],
    "warning": [
      "Host meh not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A33%3A44%3A55%3A66",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/meh.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/meh.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "ok": [
      "Associated mac address aa:bb:cc:dd:ee:ff with ip 10.0.0.5"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:07.202179+02:00",
              "updated_at": "2025-06-19T13:09:07.662258+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/16",
        "data": {
          "macaddress": "aa:bb:cc:dd:ee:ff"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/16",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "aa:bb:cc:dd:ee:ff",
          "created_at": "2025-06-19T13:09:07.202179+02:00",
          "updated_at": "2025-06-19T13:09:07.824424+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp disassoc foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp disassoc foo",
    "ok": [
      "Disassociated mac address aa:bb:cc:dd:ee:ff from ip 10.0.0.5"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "aa:bb:cc:dd:ee:ff",
              "created_at": "2025-06-19T13:09:07.202179+02:00",
              "updated_at": "2025-06-19T13:09:07.824424+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/16",
        "data": {
          "macaddress": ""
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/16",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:07.202179+02:00",
          "updated_at": "2025-06-19T13:09:07.914981+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp disassoc meh",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp disassoc meh   # host not found",
    "ok": [],
    "warning": [
      "Host meh not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/meh.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/meh.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_remove foo 10.0.0.5",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_remove foo 10.0.0.5",
    "ok": [
      "Removed ipaddress 10.0.0.5 from foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:07.202179+02:00",
              "updated_at": "2025-06-19T13:09:07.914981+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/16",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc foo aa:bb:cc:dd:ee:ff # doesn't work, because the host doesn't have any ip addresses",
    "ok": [],
    "warning": [
      "Host foo.example.org has no IP addresses."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add foo 10.0.0.5",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add foo 10.0.0.5",
    "ok": [
      "Added ipaddress 10.0.0.5 to foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:48.961289+02:00",
          "updated_at": "2025-08-26T11:56:48.961300+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=10.0.0.5&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.0.5",
          "host": "18"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:50.510378+02:00",
          "updated_at": "2025-08-26T11:56:50.510386+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=18",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:50.510378+02:00",
                  "updated_at": "2025-08-26T11:56:50.510386+02:00",
                  "ipaddress": "10.0.0.5",
                  "host": 18
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:49.094847+02:00",
                  "updated_at": "2025-08-26T11:56:49.094856+02:00",
                  "txt": "v=spf1 -all",
                  "host": 18
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:49.090929+02:00",
              "updated_at": "2025-08-26T11:56:49.090940+02:00",
              "name": "foo.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add foo 10.0.0.6 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add foo 10.0.0.6 -f",
    "ok": [
      "Added ipaddress 10.0.0.6 to foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:08.251883+02:00",
              "updated_at": "2025-06-19T13:09:08.251892+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.6",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:06.902388+02:00",
          "updated_at": "2025-06-19T13:09:06.902398+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.0.6",
          "host": "18"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:08.382145+02:00",
          "updated_at": "2025-06-19T13:09:08.382151+02:00",
          "ipaddress": "10.0.0.6",
          "host": 18
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=18",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:08.251883+02:00",
                  "updated_at": "2025-06-19T13:09:08.251892+02:00",
                  "ipaddress": "10.0.0.5",
                  "host": 18
                },
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:08.382145+02:00",
                  "updated_at": "2025-06-19T13:09:08.382151+02:00",
                  "ipaddress": "10.0.0.6",
                  "host": 18
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:07.019259+02:00",
                  "updated_at": "2025-06-19T13:09:07.019265+02:00",
                  "txt": "v=spf1 -all",
                  "host": 18
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:07.017552+02:00",
              "updated_at": "2025-06-19T13:09:07.017559+02:00",
              "name": "foo.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc foo aa:bb:cc:dd:ee:ff # should fail, two IPs of same type",
    "ok": [],
    "warning": [
      "Host foo.example.org has multiple IPs, cannot determine which one to use: 10.0.0.5, 10.0.0.6."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-13T10:41:00.041467+02:00",
              "updated_at": "2025-08-13T10:41:00.041474+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            },
            {
              "macaddress": "",
              "created_at": "2025-08-13T10:41:00.185731+02:00",
              "updated_at": "2025-08-13T10:41:00.185738+02:00",
              "ipaddress": "10.0.0.6",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-13T10:40:58.935125+02:00",
              "updated_at": "2025-08-13T10:40:58.935130+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-13T10:40:58.933270+02:00",
          "updated_at": "2025-08-13T10:40:58.933280+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_remove foo 10.0.0.6",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_remove foo 10.0.0.6",
    "ok": [
      "Removed ipaddress 10.0.0.6 from foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/18",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 2001:db8::/64 -desc \"foo_ipv6\" -vlan 1234",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 2001:db8::/64 -desc \"foo_ipv6\" -vlan 1234",
    "ok": [
      "created network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:54.577597+01:00",
              "updated_at": "2025-03-19T10:10:54.577613+01:00",
              "network": "10.0.0.0/24",
              "description": "foo",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": "1234",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001:db8::/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:56.614500+01:00",
          "updated_at": "2025-03-19T10:10:56.614509+01:00",
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 2001:db9::/64 -desc \"notfoo_ipv6\" -vlan 1235",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 2001:db9::/64 -desc \"notfoo_ipv6\" -vlan 1235",
    "ok": [
      "created network 2001:db9::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 2,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:54.577597+01:00",
              "updated_at": "2025-03-19T10:10:54.577613+01:00",
              "network": "10.0.0.0/24",
              "description": "foo",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            },
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:56.614500+01:00",
              "updated_at": "2025-03-19T10:10:56.614509+01:00",
              "network": "2001:db8::/64",
              "description": "foo_ipv6",
              "vlan": 1234,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "2001:db9::/64",
          "description": "notfoo_ipv6",
          "vlan": "1235",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001:db9::/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:56.681621+01:00",
          "updated_at": "2025-03-19T10:10:56.681633+01:00",
          "network": "2001:db9::/64",
          "description": "notfoo_ipv6",
          "vlan": 1235,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add foo 2001:db9::5 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add foo 2001:db9::5 -f",
    "ok": [
      "Added ipaddress 2001:db9::5 to foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:08.251883+02:00",
              "updated_at": "2025-06-19T13:09:08.251892+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb9%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:08.663889+02:00",
          "updated_at": "2025-06-19T13:09:08.663898+02:00",
          "network": "2001:db9::/64",
          "description": "notfoo_ipv6",
          "vlan": 1235,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db9::5",
          "host": "18"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:08.758513+02:00",
          "updated_at": "2025-06-19T13:09:08.758520+02:00",
          "ipaddress": "2001:db9::5",
          "host": 18
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=18",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:08.251883+02:00",
                  "updated_at": "2025-06-19T13:09:08.251892+02:00",
                  "ipaddress": "10.0.0.5",
                  "host": 18
                },
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:08.758513+02:00",
                  "updated_at": "2025-06-19T13:09:08.758520+02:00",
                  "ipaddress": "2001:db9::5",
                  "host": 18
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:07.019259+02:00",
                  "updated_at": "2025-06-19T13:09:07.019265+02:00",
                  "txt": "v=spf1 -all",
                  "host": 18
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:07.017552+02:00",
              "updated_at": "2025-06-19T13:09:07.017559+02:00",
              "name": "foo.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc foo aa:bb:cc:dd:ee:ff # should fail, the host has two IPs of different types on different VLANs.",
    "ok": [],
    "warning": [
      "Host foo.example.org has multiple IPs, cannot determine which one to use: 10.0.0.5, 2001:db9::5."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-13T10:41:00.041467+02:00",
              "updated_at": "2025-08-13T10:41:00.041474+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            },
            {
              "macaddress": "",
              "created_at": "2025-08-13T10:41:00.786601+02:00",
              "updated_at": "2025-08-13T10:41:00.786608+02:00",
              "ipaddress": "2001:db9::5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-13T10:40:58.935125+02:00",
              "updated_at": "2025-08-13T10:40:58.935130+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-13T10:40:58.933270+02:00",
          "updated_at": "2025-08-13T10:40:58.933280+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-13T10:40:58.822374+02:00",
          "updated_at": "2025-08-13T10:40:58.822385+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb9%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-13T10:41:00.673383+02:00",
          "updated_at": "2025-08-13T10:41:00.673397+02:00",
          "network": "2001:db9::/64",
          "description": "notfoo_ipv6",
          "vlan": 1235,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_remove foo 2001:db9::5",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_remove foo 2001:db9::5",
    "ok": [
      "Removed ipaddress 2001:db9::5 from foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/19",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add foo 2001:db8::5 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add foo 2001:db8::5 -f",
    "ok": [
      "Added ipaddress 2001:db8::5 to foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:08.251883+02:00",
              "updated_at": "2025-06-19T13:09:08.251892+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:08.595654+02:00",
          "updated_at": "2025-06-19T13:09:08.595664+02:00",
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::5",
          "host": "18"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-19T13:09:09.025963+02:00",
          "updated_at": "2025-06-19T13:09:09.025970+02:00",
          "ipaddress": "2001:db8::5",
          "host": 18
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=18",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:08.251883+02:00",
                  "updated_at": "2025-06-19T13:09:08.251892+02:00",
                  "ipaddress": "10.0.0.5",
                  "host": 18
                },
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:09.025963+02:00",
                  "updated_at": "2025-06-19T13:09:09.025970+02:00",
                  "ipaddress": "2001:db8::5",
                  "host": 18
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:07.019259+02:00",
                  "updated_at": "2025-06-19T13:09:07.019265+02:00",
                  "txt": "v=spf1 -all",
                  "host": 18
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:07.017552+02:00",
              "updated_at": "2025-06-19T13:09:07.017559+02:00",
              "name": "foo.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "dhcp assoc foo aa:bb:cc:dd:ee:ff",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "dhcp assoc foo aa:bb:cc:dd:ee:ff # should work, the host now has two IPs of different types on the same VLAN.",
    "ok": [
      "Associated mac address aa:bb:cc:dd:ee:ff with ip 10.0.0.5"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Add%3Aee%3Aff",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:08.251883+02:00",
              "updated_at": "2025-06-19T13:09:08.251892+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:09.025963+02:00",
              "updated_at": "2025-06-19T13:09:09.025970+02:00",
              "ipaddress": "2001:db8::5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:06.902388+02:00",
          "updated_at": "2025-06-19T13:09:06.902398+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:08.595654+02:00",
          "updated_at": "2025-06-19T13:09:08.595664+02:00",
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/17",
        "data": {
          "macaddress": "aa:bb:cc:dd:ee:ff"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/17",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "aa:bb:cc:dd:ee:ff",
          "created_at": "2025-06-19T13:09:08.251883+02:00",
          "updated_at": "2025-06-19T13:09:09.214112+02:00",
          "ipaddress": "10.0.0.5",
          "host": 18
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info foo # should work and show both IPs",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP         MAC                 ",
      "              10.0.0.5   aa:bb:cc:dd:ee:ff   ",
      "AAAA_Records:",
      "              IP            MAC         ",
      "              2001:db8::5   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:07 2025",
      "Updated:      Thu Jun 19 13:09:07 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "aa:bb:cc:dd:ee:ff",
              "created_at": "2025-06-19T13:09:08.251883+02:00",
              "updated_at": "2025-06-19T13:09:09.214112+02:00",
              "ipaddress": "10.0.0.5",
              "host": 18
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:09.025963+02:00",
              "updated_at": "2025-06-19T13:09:09.025970+02:00",
              "ipaddress": "2001:db8::5",
              "host": 18
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:07.019259+02:00",
              "updated_at": "2025-06-19T13:09:07.019265+02:00",
              "txt": "v=spf1 -all",
              "host": 18
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:07.017552+02:00",
          "updated_at": "2025-06-19T13:09:07.017559+02:00",
          "name": "foo.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:06.902388+02:00",
          "updated_at": "2025-06-19T13:09:06.902398+02:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:08.595654+02:00",
          "updated_at": "2025-06-19T13:09:08.595664+02:00",
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -f",
    "ok": [
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.0.0/24 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.0.0/24 -f",
    "ok": [
      "Removed network 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:54.577597+01:00",
          "updated_at": "2025-03-19T10:10:54.577613+01:00",
          "network": "10.0.0.0/24",
          "description": "foo",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 2001:db8::/64 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 2001:db8::/64 -f",
    "ok": [
      "Removed network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:56.614500+01:00",
          "updated_at": "2025-03-19T10:10:56.614509+01:00",
          "network": "2001:db8::/64",
          "description": "foo_ipv6",
          "vlan": 1234,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 2001:db9::/64 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 2001:db9::/64 -f",
    "ok": [
      "Removed network 2001:db9::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb9%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:56.681621+01:00",
          "updated_at": "2025-03-19T10:10:56.681633+01:00",
          "network": "2001:db9::/64",
          "description": "notfoo_ipv6",
          "vlan": 1235,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb9%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/2001%3Adb9%3A%3A/64",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.0.0/24 -desc \"lorem ipsum\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.0.0/24 -desc \"lorem ipsum\"",
    "ok": [
      "created network 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:58.258082+01:00",
          "updated_at": "2025-03-19T10:10:58.258094+01:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 2001:db8::/64 -desc \"dolor sit amet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 2001:db8::/64 -desc \"dolor sit amet\"",
    "ok": [
      "created network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": null,
              "communities": [],
              "created_at": "2025-03-19T10:10:58.258082+01:00",
              "updated_at": "2025-03-19T10:10:58.258094+01:00",
              "network": "10.0.0.0/24",
              "description": "lorem ipsum",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001:db8::/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:58.349561+01:00",
          "updated_at": "2025-03-19T10:10:58.349577+01:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact hi@ho.com -comment \"meh\" -macaddress 11:22:33:aa:bb:cc",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact hi@ho.com -comment \"meh\" -macaddress 11:22:33:aa:bb:cc",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      hi@ho.com",
      "Comment:      meh",
      "A_Records:",
      "              IP          MAC                 ",
      "              10.0.0.10   11:22:33:aa:bb:cc   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:09 2025",
      "Updated:      Thu Jun 19 13:09:09 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A33%3Aaa%3Abb%3Acc",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:09.419053+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "hi@ho.com",
          "comment": "meh",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:09.968172+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:09.942923+02:00",
          "name": "foo.example.org",
          "contact": "hi@ho.com",
          "ttl": null,
          "comment": "meh",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A33%3Aaa%3Abb%3Acc&ordering=ipaddress",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/21",
        "data": {
          "macaddress": "11:22:33:aa:bb:cc"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/21",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:aa:bb:cc",
          "created_at": "2025-06-19T13:09:09.968166+02:00",
          "updated_at": "2025-06-19T13:09:10.068876+02:00",
          "ipaddress": "10.0.0.10",
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:09.942923+02:00",
              "name": "foo.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      hi@ho.com",
      "Comment:      meh",
      "A_Records:",
      "              IP          MAC                 ",
      "              10.0.0.10   11:22:33:aa:bb:cc   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:56:52 2025",
      "Updated:      Tue Aug 26 11:56:52 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-08-26T11:56:52.681144+02:00",
              "updated_at": "2025-08-26T11:56:52.826848+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:56:52.619543+02:00",
              "updated_at": "2025-08-26T11:56:52.619576+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.606852+02:00",
          "updated_at": "2025-08-26T11:56:52.606863+02:00",
          "name": "foo.example.org",
          "contact": "hi@ho.com",
          "ttl": null,
          "comment": "meh",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host find -name *oo*",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host find -name *oo*",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name                 Contact              Comment",
      "foo.example.org      hi@ho.com            meh"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ordering=name&name__regex=.%2Aoo.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:09.942923+02:00",
              "name": "foo.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host find -contact hi*",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host find -contact hi*",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name                 Contact              Comment",
      "foo.example.org      hi@ho.com            meh"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ordering=name&contact__regex=%5Ehi",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:09.942923+02:00",
              "name": "foo.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host find -comment meh",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host find -comment meh",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name                 Contact              Comment",
      "foo.example.org      hi@ho.com            meh"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ordering=name&comment__regex=.%2Ameh.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:09.942923+02:00",
              "name": "foo.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host find -name f* -contact h* -comment m*",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host find -name f* -contact h* -comment m*",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name                 Contact              Comment",
      "foo.example.org      hi@ho.com            meh"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ordering=name&contact__regex=%5Eh&comment__regex=%5Em&name__regex=%5Ef",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:09.942923+02:00",
              "name": "foo.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host rename foo bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host rename foo bar",
    "ok": [
      "renamed foo.example.org to bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/bar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-08-26T11:56:35.781651+02:00",
                "updated_at": "2025-08-26T11:56:35.781663+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-08-26T11:56:35.478972+02:00",
            "updated_at": "2025-08-26T11:56:52.826172+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-08-26T11:56:36.090230+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {
          "name": "bar.example.org"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-08-26T11:56:52.681144+02:00",
                  "updated_at": "2025-08-26T11:56:52.826848+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:52.619543+02:00",
                  "updated_at": "2025-08-26T11:56:52.619576+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:52.606852+02:00",
              "updated_at": "2025-08-26T11:56:53.429621+02:00",
              "name": "bar.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "meh",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host set_comment bar 'This is the comment'",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host set_comment bar 'This is the comment'",
    "ok": [
      "Updated comment of bar.example.org to This is the comment"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:10.609509+02:00",
          "name": "bar.example.org",
          "contact": "hi@ho.com",
          "ttl": null,
          "comment": "meh",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {
          "comment": "This is the comment"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:10.799518+02:00",
              "name": "bar.example.org",
              "contact": "hi@ho.com",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host set_contact bar \"I'm the contact\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host set_contact bar \"I'm the contact\"   # fails because invalid email address",
    "ok": [],
    "warning": [
      "PATCH \"http://127.0.0.1:8000/api/v1/hosts/bar.example.org\": 400: Bad Request\n{\n  \"type\": \"validation_error\",\n  \"errors\": [\n    {\n      \"code\": \"invalid\",\n      \"detail\": \"Enter a valid email address.\",\n      \"attr\": \"contact\"\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:10.799518+02:00",
          "name": "bar.example.org",
          "contact": "hi@ho.com",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {
          "contact": "I'm the contact"
        },
        "status": 400,
        "response": {
          "type": "validation_error",
          "errors": [
            {
              "code": "invalid",
              "detail": "Enter a valid email address.",
              "attr": "contact"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host set_contact bar me@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host set_contact bar me@example.org",
    "ok": [
      "Updated contact of bar.example.org to me@example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {
          "contact": "me@example.org"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-08-26T11:56:52.681144+02:00",
                  "updated_at": "2025-08-26T11:56:52.826848+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:52.619543+02:00",
                  "updated_at": "2025-08-26T11:56:52.619576+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:52.606852+02:00",
              "updated_at": "2025-08-26T11:56:54.198507+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add bar 10.0.0.12",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add bar 10.0.0.12  # must force",
    "ok": [],
    "warning": [
      "Host bar.example.org already has one or more ip addresses, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.12",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add bar 10.0.0.12 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add bar 10.0.0.12 -f",
    "ok": [
      "Added ipaddress 10.0.0.12 to bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.0.12",
          "host": "19"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:54.782509+02:00",
          "updated_at": "2025-08-26T11:56:54.782520+02:00",
          "ipaddress": "10.0.0.12",
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-08-26T11:56:52.681144+02:00",
                  "updated_at": "2025-08-26T11:56:52.826848+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                },
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:54.782509+02:00",
                  "updated_at": "2025-08-26T11:56:54.782520+02:00",
                  "ipaddress": "10.0.0.12",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:52.619543+02:00",
                  "updated_at": "2025-08-26T11:56:52.619576+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:52.606852+02:00",
              "updated_at": "2025-08-26T11:56:54.198507+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_add bar 10.0.0.13 -macaddress 11:22:33:44:55:66 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_add bar 10.0.0.13 -macaddress 11:22:33:44:55:66 -force",
    "ok": [
      "Added ipaddress 10.0.0.13 to bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.489536+02:00",
              "ipaddress": "10.0.0.12",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.13",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "10.0.0.13",
          "host": "19",
          "macaddress": "11:22:33:44:55:66"
        },
        "status": 201,
        "response": {
          "macaddress": "11:22:33:44:55:66",
          "created_at": "2025-06-19T13:09:11.658060+02:00",
          "updated_at": "2025-06-19T13:09:11.658067+02:00",
          "ipaddress": "10.0.0.13",
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:10.068876+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 19
                },
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:11.489496+02:00",
                  "updated_at": "2025-06-19T13:09:11.489536+02:00",
                  "ipaddress": "10.0.0.12",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:66",
                  "created_at": "2025-06-19T13:09:11.658060+02:00",
                  "updated_at": "2025-06-19T13:09:11.658067+02:00",
                  "ipaddress": "10.0.0.13",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:11.270412+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_change -old 10.0.0.12 -new 10.0.0.14 bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_change -old 10.0.0.12 -new 10.0.0.14 bar",
    "ok": [
      "changed ip 10.0.0.12 to 10.0.0.14 for bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.165542+02:00",
          "updated_at": "2025-06-20T11:43:28.165554+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-20T11:43:28.412509+02:00",
              "updated_at": "2025-06-20T11:43:28.495270+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:29.619291+02:00",
              "updated_at": "2025-06-20T11:43:29.619299+02:00",
              "ipaddress": "10.0.0.12",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-20T11:43:29.750216+02:00",
              "updated_at": "2025-06-20T11:43:29.750224+02:00",
              "ipaddress": "10.0.0.13",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-20T11:43:28.396092+02:00",
              "updated_at": "2025-06-20T11:43:28.396098+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.393781+02:00",
          "updated_at": "2025-06-20T11:43:29.367767+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=10.0.0.14&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/22",
        "data": {
          "ipaddress": "10.0.0.14"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/22",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-06-20T11:43:29.619291+02:00",
          "updated_at": "2025-06-20T11:43:29.973056+02:00",
          "ipaddress": "10.0.0.14",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_change -old 10.0.0.13 -new 10.0.0.15 bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_change -old 10.0.0.13 -new 10.0.0.15 bar   # has mac addr, should keep it assigned to the new ip",
    "ok": [
      "changed ip 10.0.0.13 to 10.0.0.15 for bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.15",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.165542+02:00",
          "updated_at": "2025-06-20T11:43:28.165554+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-20T11:43:28.412509+02:00",
              "updated_at": "2025-06-20T11:43:28.495270+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-20T11:43:29.750216+02:00",
              "updated_at": "2025-06-20T11:43:29.750224+02:00",
              "ipaddress": "10.0.0.13",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:29.619291+02:00",
              "updated_at": "2025-06-20T11:43:29.973056+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-20T11:43:28.396092+02:00",
              "updated_at": "2025-06-20T11:43:28.396098+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.393781+02:00",
          "updated_at": "2025-06-20T11:43:29.367767+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=10.0.0.15&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/23",
        "data": {
          "ipaddress": "10.0.0.15"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/23",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:44:55:66",
          "created_at": "2025-06-20T11:43:29.750216+02:00",
          "updated_at": "2025-06-20T11:43:30.160959+02:00",
          "ipaddress": "10.0.0.15",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_remove bar 10.0.0.13",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_remove bar 10.0.0.13",
    "ok": [],
    "warning": [
      "Host bar.example.org does not have IP 10.0.0.13"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add baz",
    "ok": [
      "Created host baz.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         baz.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:12 2025",
      "Updated:      Thu Jun 19 13:09:12 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/baz.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:12.011636+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "baz.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_move -ip 10.0.0.10 -fromhost bar -tohost baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_move -ip 10.0.0.10 -fromhost bar -tohost baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Moved ipaddress 10.0.0.10"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:10.068876+02:00",
              "ipaddress": "10.0.0.10",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/21",
        "data": {
          "host": 20
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/21",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:aa:bb:cc",
          "created_at": "2025-06-19T13:09:09.968166+02:00",
          "updated_at": "2025-06-19T13:09:12.300460+02:00",
          "ipaddress": "10.0.0.10",
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "A_Records     IP            MAC",
      "              10.0.0.10     11:22:33:aa:bb:cc"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add bar 2001:db8::/64",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add bar 2001:db8::/64  # must force",
    "ok": [],
    "warning": [
      "Host bar.example.org already has one or more ip addresses, must force"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.737206+02:00",
          "updated_at": "2025-06-19T13:09:09.737214+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/first_unused",
        "data": {},
        "status": 200,
        "response": "2001:db8::4"
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add bar 2001:db8::11 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add bar 2001:db8::11 -f",
    "ok": [
      "Added ipaddress 2001:db8::11 to bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A11",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.409989+02:00",
          "updated_at": "2025-08-26T11:56:52.410004+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::11",
          "host": "19"
        },
        "status": 201,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:56.531110+02:00",
          "updated_at": "2025-08-26T11:56:56.531124+02:00",
          "ipaddress": "2001:db8::11",
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:54.782509+02:00",
                  "updated_at": "2025-08-26T11:56:55.340478+02:00",
                  "ipaddress": "10.0.0.14",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:66",
                  "created_at": "2025-08-26T11:56:55.103884+02:00",
                  "updated_at": "2025-08-26T11:56:55.613257+02:00",
                  "ipaddress": "10.0.0.15",
                  "host": 19
                },
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:56.531110+02:00",
                  "updated_at": "2025-08-26T11:56:56.531124+02:00",
                  "ipaddress": "2001:db8::11",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:52.619543+02:00",
                  "updated_at": "2025-08-26T11:56:52.619576+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:52.606852+02:00",
              "updated_at": "2025-08-26T11:56:54.198507+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_add bar 2001:db8::12 -macaddress 11:22:33:44:55:67 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_add bar 2001:db8::12 -macaddress 11:22:33:44:55:67 -f",
    "ok": [
      "Added ipaddress 2001:db8::12 to bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:12.500812+02:00",
              "updated_at": "2025-06-19T13:09:12.500818+02:00",
              "ipaddress": "2001:db8::11",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A12",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.737206+02:00",
          "updated_at": "2025-06-19T13:09:09.737214+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/ipaddresses/",
        "data": {
          "ipaddress": "2001:db8::12",
          "host": "19",
          "macaddress": "11:22:33:44:55:67"
        },
        "status": 201,
        "response": {
          "macaddress": "11:22:33:44:55:67",
          "created_at": "2025-06-19T13:09:12.648868+02:00",
          "updated_at": "2025-06-19T13:09:12.648877+02:00",
          "ipaddress": "2001:db8::12",
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:11.489496+02:00",
                  "updated_at": "2025-06-19T13:09:11.845269+02:00",
                  "ipaddress": "10.0.0.14",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:66",
                  "created_at": "2025-06-19T13:09:11.658060+02:00",
                  "updated_at": "2025-06-19T13:09:12.012542+02:00",
                  "ipaddress": "10.0.0.15",
                  "host": 19
                },
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:12.500812+02:00",
                  "updated_at": "2025-06-19T13:09:12.500818+02:00",
                  "ipaddress": "2001:db8::11",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:12.648877+02:00",
                  "ipaddress": "2001:db8::12",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:11.270412+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove bar # should fail, because it has multiple addresses, must force",
    "ok": [],
    "warning": [
      "bar.example.org requires force for deletion:\n  multiple ipaddresses on the same VLAN\nUse `-force` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:12.500812+02:00",
              "updated_at": "2025-06-19T13:09:12.500818+02:00",
              "ipaddress": "2001:db8::11",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:12.648877+02:00",
              "ipaddress": "2001:db8::12",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.15",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A11",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.737206+02:00",
          "updated_at": "2025-06-19T13:09:09.737214+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A12",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.737206+02:00",
          "updated_at": "2025-06-19T13:09:09.737214+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_show bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_show bar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "AAAA_Records  IP            MAC",
      "              2001:db8::11  <not set>",
      "              2001:db8::12  11:22:33:44:55:67"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host aaaa_change -old 2001:db8::11 -new 2001:db8::13 bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_change -old 2001:db8::11 -new 2001:db8::13 bar",
    "ok": [
      "changed ip 2001:db8::11 to 2001:db8::13 for bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A13",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.409989+02:00",
          "updated_at": "2025-08-26T11:56:52.410004+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=2001%3Adb8%3A%3A13&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/24",
        "data": {
          "ipaddress": "2001:db8::13"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/24",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "",
          "created_at": "2025-08-26T11:56:56.531110+02:00",
          "updated_at": "2025-08-26T11:56:57.688141+02:00",
          "ipaddress": "2001:db8::13",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_change -old 2001:db8::12 -new 2001:db8::14 bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_change -old 2001:db8::12 -new 2001:db8::14 bar  # has mac addr, should keep it assigned to the new ip",
    "ok": [
      "changed ip 2001:db8::12 to 2001:db8::14 for bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.247683+02:00",
          "updated_at": "2025-06-20T11:43:28.247699+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:29.619291+02:00",
              "updated_at": "2025-06-20T11:43:29.973056+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-20T11:43:29.750216+02:00",
              "updated_at": "2025-06-20T11:43:30.160959+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-20T11:43:31.368764+02:00",
              "updated_at": "2025-06-20T11:43:31.368770+02:00",
              "ipaddress": "2001:db8::12",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-20T11:43:31.228509+02:00",
              "updated_at": "2025-06-20T11:43:32.086423+02:00",
              "ipaddress": "2001:db8::13",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-20T11:43:28.396092+02:00",
              "updated_at": "2025-06-20T11:43:28.396098+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-20T11:43:28.393781+02:00",
          "updated_at": "2025-06-20T11:43:29.367767+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=2001%3Adb8%3A%3A14&ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/25",
        "data": {
          "ipaddress": "2001:db8::14"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/25",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:44:55:67",
          "created_at": "2025-06-20T11:43:31.368764+02:00",
          "updated_at": "2025-06-20T11:43:32.265497+02:00",
          "ipaddress": "2001:db8::14",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_remove bar 2001:db8::13",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_remove bar 2001:db8::13",
    "ok": [
      "Removed ipaddress 2001:db8::13 from bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            },
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:12.500812+02:00",
              "updated_at": "2025-06-19T13:09:12.959603+02:00",
              "ipaddress": "2001:db8::13",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.124679+02:00",
              "ipaddress": "2001:db8::14",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ipaddresses/24",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host aaaa_move -ip 2001:db8::14 -fromhost bar -tohost baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host aaaa_move -ip 2001:db8::14 -fromhost bar -tohost baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Moved ipaddress 2001:db8::14"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.124679+02:00",
              "ipaddress": "2001:db8::14",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/25",
        "data": {
          "host": 20
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/25",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:44:55:67",
          "created_at": "2025-06-19T13:09:12.648868+02:00",
          "updated_at": "2025-06-19T13:09:13.288692+02:00",
          "ipaddress": "2001:db8::14",
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host a_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host a_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "A_Records     IP            MAC",
      "              10.0.0.10     11:22:33:aa:bb:cc"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host cname_add bar fubar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host cname_add bar fubar",
    "ok": [
      "Added CNAME fubar.example.org for bar.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:13.287976+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/cnames/",
        "data": {
          "host": "19",
          "name": "fubar.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:13.466436+02:00",
          "updated_at": "2025-06-19T13:09:13.466444+02:00",
          "name": "fubar.example.org",
          "ttl": null,
          "zone": 1,
          "host": 19
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [
            {
              "created_at": "2025-06-19T13:09:13.466436+02:00",
              "updated_at": "2025-06-19T13:09:13.466444+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 19
            }
          ],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/?host=19&name=fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-06-19T13:09:13.466436+02:00",
              "updated_at": "2025-06-19T13:09:13.466444+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 19
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove bar # should fail, because it has a cname record, must force and override with 'cname'",
    "ok": [],
    "warning": [
      "bar.example.org requires force and override for deletion:\n  1 cnames\n    - fubar.example.org\n  multiple ipaddresses on the same VLAN\nUse `-force cname` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.269985+02:00",
          "updated_at": "2025-08-26T11:56:52.270000+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.15",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.269985+02:00",
          "updated_at": "2025-08-26T11:56:52.270000+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host cname_show bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host cname_show bar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Cname:        fubar.example.org -> bar.example.org"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host cname_remove bar fubar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host cname_remove bar fubar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Removed CNAME fubar.example.org for bar.example.org."
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2025-08-26T11:56:58.707306+02:00",
          "updated_at": "2025-08-26T11:56:58.707335+02:00",
          "name": "fubar.example.org",
          "ttl": null,
          "zone": 1,
          "host": 19
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/cnames/fubar.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host hinfo_add baz x86 Win",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host hinfo_add baz x86 Win",
    "ok": [
      "Added HINFO record for baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hinfos/",
        "data": {
          "host": 20,
          "cpu": "x86",
          "os": "Win"
        },
        "status": 201,
        "response": {
          "host": 20,
          "created_at": "2025-06-19T13:09:13.901605+02:00",
          "updated_at": "2025-06-19T13:09:13.901611+02:00",
          "cpu": "x86",
          "os": "Win"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=20",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:12.300460+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 20
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:13.288692+02:00",
                  "ipaddress": "2001:db8::14",
                  "host": 20
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:12.150069+02:00",
                  "updated_at": "2025-06-19T13:09:12.150078+02:00",
                  "txt": "v=spf1 -all",
                  "host": 20
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": {
                "host": 20,
                "created_at": "2025-06-19T13:09:13.901605+02:00",
                "updated_at": "2025-06-19T13:09:13.901611+02:00",
                "cpu": "x86",
                "os": "Win"
              },
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:12.147666+02:00",
              "updated_at": "2025-06-19T13:09:12.147677+02:00",
              "name": "baz.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host hinfo_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host hinfo_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Hinfo:        cpu=x86 os=Win"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": {
            "host": 20,
            "created_at": "2025-06-19T13:09:13.901605+02:00",
            "updated_at": "2025-06-19T13:09:13.901611+02:00",
            "cpu": "x86",
            "os": "Win"
          },
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hinfos/20",
        "data": {},
        "status": 200,
        "response": {
          "host": 20,
          "created_at": "2025-06-19T13:09:13.901605+02:00",
          "updated_at": "2025-06-19T13:09:13.901611+02:00",
          "cpu": "x86",
          "os": "Win"
        }
      }
    ],
    "time": null
  },
  {
    "command": "host hinfo_remove baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host hinfo_remove baz",
    "ok": [
      "Removed HINFO record for baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hinfos/20",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host loc_add baz \"52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host loc_add baz \"52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m\"",
    "ok": [
      "Added LOC record for baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/locs/",
        "data": {
          "host": 20,
          "loc": "52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m"
        },
        "status": 201,
        "response": {
          "host": 20,
          "created_at": "2025-06-19T13:09:14.141935+02:00",
          "updated_at": "2025-06-19T13:09:14.141941+02:00",
          "loc": "52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=20",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:12.300460+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 20
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:13.288692+02:00",
                  "ipaddress": "2001:db8::14",
                  "host": 20
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:12.150069+02:00",
                  "updated_at": "2025-06-19T13:09:12.150078+02:00",
                  "txt": "v=spf1 -all",
                  "host": 20
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": {
                "host": 20,
                "created_at": "2025-06-19T13:09:14.141935+02:00",
                "updated_at": "2025-06-19T13:09:14.141941+02:00",
                "loc": "52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m"
              },
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:12.147666+02:00",
              "updated_at": "2025-06-19T13:09:12.147677+02:00",
              "name": "baz.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host loc_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host loc_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "LOC:          52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": {
            "host": 20,
            "created_at": "2025-06-19T13:09:14.141935+02:00",
            "updated_at": "2025-06-19T13:09:14.141941+02:00",
            "loc": "52 22 23.000 N 4 53 32.000 E -2.00m 0.00m 10000m 10m"
          },
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host loc_remove baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host loc_remove baz",
    "ok": [
      "Removed LOC for baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/locs/20",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host mx_add baz 10 mail.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host mx_add baz 10 mail.example.org",
    "ok": [
      "Added MX record to baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/mxs/",
        "data": {
          "host": 20,
          "priority": 10,
          "mx": "mail.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:14.322891+02:00",
          "updated_at": "2025-06-19T13:09:14.322898+02:00",
          "priority": 10,
          "mx": "mail.example.org",
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host mx_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host mx_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "MX:           Priority Server",
      "                    10 mail.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:14.322891+02:00",
              "updated_at": "2025-06-19T13:09:14.322898+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 20
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove baz # Should fail, because it has an MX record, must force and override with 'mx'",
    "ok": [],
    "warning": [
      "baz.example.org requires force and override for deletion:\n  multiple ipaddresses on the same VLAN\n  1 MX records\n    - mail.example.org (priority: 10)\nUse `-force mx` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.269985+02:00",
          "updated_at": "2025-08-26T11:56:52.270000+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:56:52.409989+02:00",
          "updated_at": "2025-08-26T11:56:52.410004+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host mx_remove baz 10 mail.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host mx_remove baz 10 mail.example.org",
    "ok": [
      "deleted MX from baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/mxs/?host=20&mx=mail.example.org&priority=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-08-26T11:56:59.513810+02:00",
              "updated_at": "2025-08-26T11:56:59.513816+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 20
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/mxs/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host naptr_add -name baz -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host naptr_add -name baz -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "ok": [
      "Added NAPTR record to baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/naptrs/?preference=16384&order=3&flag=u&service=SIP&regex=%5Babc%5D%2B&replacement=wonk&host=20",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/naptrs/",
        "data": {
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 20
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:14.606131+02:00",
          "updated_at": "2025-06-19T13:09:14.606137+02:00",
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host naptr_show baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host naptr_show baz",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "NAPTRs:       Preference    Order         Flag          Service       Regex         Replacement   ",
      "              16384         3             u             sip           [abc]+        wonk          "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [
            {
              "created_at": "2025-06-19T13:09:14.606131+02:00",
              "updated_at": "2025-06-19T13:09:14.606137+02:00",
              "preference": 16384,
              "order": 3,
              "flag": "u",
              "service": "sip",
              "regex": "[abc]+",
              "replacement": "wonk",
              "host": 20
            }
          ],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host naptr_remove -name baz -preference 16384 -order 3 -flag u -service \"sip\" -regex \"[abc]+\" -replacement \"wonk\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host naptr_remove -name baz -preference 16384 -order 3 -flag u -service \"sip\" -regex \"[abc]+\" -replacement \"wonk\"",
    "ok": [
      "Deleted NAPTR record from baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/naptrs/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_add 10.0.0.20 baz.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_add 10.0.0.20 baz.example.org",
    "ok": [
      "Added PTR record 10.0.0.20 to baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ptroverrides/?ipaddress=10.0.0.20",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.20",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.0.0",
          "10.0.0.1",
          "10.0.0.2",
          "10.0.0.3",
          "10.0.0.255"
        ]
      },
      {
        "method": "POST",
        "url": "/api/v1/ptroverrides/",
        "data": {
          "host": 20,
          "ipaddress": "10.0.0.20"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:14.844833+02:00",
          "updated_at": "2025-06-19T13:09:14.844840+02:00",
          "ipaddress": "10.0.0.20",
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_show 10.0.0.20",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_show 10.0.0.20",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "PTR override: 10.0.0.20 -> baz.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ipaddresses__ipaddress=10.0.0.20",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?ptr_overrides__ipaddress=10.0.0.20",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:12.300460+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 20
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:13.288692+02:00",
                  "ipaddress": "2001:db8::14",
                  "host": 20
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:12.150069+02:00",
                  "updated_at": "2025-06-19T13:09:12.150078+02:00",
                  "txt": "v=spf1 -all",
                  "host": 20
                }
              ],
              "ptr_overrides": [
                {
                  "created_at": "2025-06-19T13:09:14.844833+02:00",
                  "updated_at": "2025-06-19T13:09:14.844840+02:00",
                  "ipaddress": "10.0.0.20",
                  "host": 20
                }
              ],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:12.147666+02:00",
              "updated_at": "2025-06-19T13:09:12.147677+02:00",
              "name": "baz.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=20",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:12.300460+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 20
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:13.288692+02:00",
                  "ipaddress": "2001:db8::14",
                  "host": 20
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:12.150069+02:00",
                  "updated_at": "2025-06-19T13:09:12.150078+02:00",
                  "txt": "v=spf1 -all",
                  "host": 20
                }
              ],
              "ptr_overrides": [
                {
                  "created_at": "2025-06-19T13:09:14.844833+02:00",
                  "updated_at": "2025-06-19T13:09:14.844840+02:00",
                  "ipaddress": "10.0.0.20",
                  "host": 20
                }
              ],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:12.147666+02:00",
              "updated_at": "2025-06-19T13:09:12.147677+02:00",
              "name": "baz.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add clover",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add clover",
    "ok": [
      "Created host clover.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         clover.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:15 2025",
      "Updated:      Thu Jun 19 13:09:15 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/clover.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/clover.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:14.843974+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "clover.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:15.266692+02:00",
              "updated_at": "2025-06-19T13:09:15.266698+02:00",
              "txt": "v=spf1 -all",
              "host": 21
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:15.264970+02:00",
          "updated_at": "2025-06-19T13:09:15.264978+02:00",
          "name": "clover.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_change -ip 10.0.0.20 -old baz -new clover",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_change -ip 10.0.0.20 -old baz -new clover",
    "ok": [
      "Moved PTR record 10.0.0.20 from baz.example.org to clover.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:14.844833+02:00",
              "updated_at": "2025-06-19T13:09:14.844840+02:00",
              "ipaddress": "10.0.0.20",
              "host": 20
            }
          ],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:15.266692+02:00",
              "updated_at": "2025-06-19T13:09:15.266698+02:00",
              "txt": "v=spf1 -all",
              "host": 21
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:15.264970+02:00",
          "updated_at": "2025-06-19T13:09:15.264978+02:00",
          "name": "clover.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ptroverrides/1",
        "data": {
          "host": 21
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ptroverrides/1",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2025-06-19T13:09:14.844833+02:00",
          "updated_at": "2025-06-19T13:09:15.395147+02:00",
          "ipaddress": "10.0.0.20",
          "host": 21
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_remove 10.0.0.20 clover",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_remove 10.0.0.20 clover",
    "ok": [
      "Removed PTR record 10.0.0.20 from clover.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:15.266692+02:00",
              "updated_at": "2025-06-19T13:09:15.266698+02:00",
              "txt": "v=spf1 -all",
              "host": 21
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:14.844833+02:00",
              "updated_at": "2025-06-19T13:09:15.395147+02:00",
              "ipaddress": "10.0.0.20",
              "host": 21
            }
          ],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:15.264970+02:00",
          "updated_at": "2025-06-19T13:09:15.264978+02:00",
          "name": "clover.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/ptroverrides/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host srv_add -name \"whatever\" -priority 1 -weight 1 -port 80 -host baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_add -name \"whatever\" -priority 1 -weight 1 -port 80 -host baz  # doesn't work",
    "ok": [],
    "warning": [
      "POST \"http://127.0.0.1:8000/api/v1/srvs/\": 400: Bad Request\n{\n  \"type\": \"validation_error\",\n  \"errors\": [\n    {\n      \"code\": \"invalid\",\n      \"detail\": \"Must match: ^_[a-z0-9]+(([a-z0-9][_-]?)+[a-z0-9]+)?._(tcp|tls|udp)\\\\.\",\n      \"attr\": \"name\"\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/whatever.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:15.460033+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:15.460033+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=whatever.example.org&priority=1&weight=1&port=80&host=20&ttl=None",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/srvs/",
        "data": {
          "name": "whatever.example.org",
          "priority": "1",
          "weight": "1",
          "port": "80",
          "host": 20
        },
        "status": 400,
        "response": {
          "type": "validation_error",
          "errors": [
            {
              "code": "invalid",
              "detail": "Must match: ^_[a-z0-9]+(([a-z0-9][_-]?)+[a-z0-9]+)?._(tcp|tls|udp)\\.",
              "attr": "name"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host baz.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host baz.example.org",
    "ok": [
      "Added SRV record _sip._tcp.example.org with target baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/_sip._tcp.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-08-26T11:56:35.781651+02:00",
                "updated_at": "2025-08-26T11:56:35.781663+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-08-26T11:56:35.478972+02:00",
            "updated_at": "2025-08-26T11:57:00.621893+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-08-26T11:56:36.090230+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=_sip._tcp.example.org&priority=10&weight=5&port=3456&host=20&ttl=None",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/srvs/",
        "data": {
          "name": "_sip._tcp.example.org",
          "priority": "10",
          "weight": "5",
          "port": "3456",
          "host": 20
        },
        "status": 201,
        "response": {
          "created_at": "2025-08-26T11:57:00.848637+02:00",
          "updated_at": "2025-08-26T11:57:00.848645+02:00",
          "name": "_sip._tcp.example.org",
          "priority": 10,
          "weight": 5,
          "port": 3456,
          "ttl": null,
          "zone": 1,
          "host": 20
        }
      }
    ],
    "time": null
  },
  {
    "command": "host srv_show \"_sip._tcp.example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_show \"_sip._tcp.example.org\"",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "SRV: _sip._tcp.example.org   10     5     3456  baz.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=_sip._tcp.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-06-19T13:09:15.741486+02:00",
              "updated_at": "2025-06-19T13:09:15.741494+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 20
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id__in=20",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:09.968166+02:00",
                  "updated_at": "2025-06-19T13:09:12.300460+02:00",
                  "ipaddress": "10.0.0.10",
                  "host": 20
                },
                {
                  "macaddress": "11:22:33:44:55:67",
                  "created_at": "2025-06-19T13:09:12.648868+02:00",
                  "updated_at": "2025-06-19T13:09:13.288692+02:00",
                  "ipaddress": "2001:db8::14",
                  "host": 20
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:12.150069+02:00",
                  "updated_at": "2025-06-19T13:09:12.150078+02:00",
                  "txt": "v=spf1 -all",
                  "host": 20
                }
              ],
              "ptr_overrides": [],
              "srvs": [
                {
                  "created_at": "2025-06-19T13:09:15.741486+02:00",
                  "updated_at": "2025-06-19T13:09:15.741494+02:00",
                  "name": "_sip._tcp.example.org",
                  "priority": 10,
                  "weight": 5,
                  "port": 3456,
                  "ttl": null,
                  "zone": 1,
                  "host": 20
                }
              ],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:12.147666+02:00",
              "updated_at": "2025-06-19T13:09:12.147677+02:00",
              "name": "baz.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host srv_remove -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host baz.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_remove -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host baz.example.org",
    "ok": [
      "Removed SRV record _sip._tcp.example.org from baz.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [
            {
              "created_at": "2025-06-19T13:09:15.741486+02:00",
              "updated_at": "2025-06-19T13:09:15.741494+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 20
            }
          ],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=_sip._tcp.example.org&host=20&priority=10&port=3456&weight=5",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-06-19T13:09:15.741486+02:00",
              "updated_at": "2025-06-19T13:09:15.741494+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 20
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/srvs/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host sshfp_add bar 1 1 12345678abcde",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host sshfp_add bar 1 1 12345678abcde",
    "ok": [
      "Added SSHFP record for bar.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/sshfps/?algorithm=1&hash_type=1&fingerprint=12345678abcde&host=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/sshfps/",
        "data": {
          "algorithm": "1",
          "hash_type": "1",
          "fingerprint": "12345678abcde",
          "host": 19
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:15.967843+02:00",
          "updated_at": "2025-06-19T13:09:15.967849+02:00",
          "ttl": null,
          "algorithm": 1,
          "hash_type": 1,
          "fingerprint": "12345678abcde",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host sshfp_show bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host sshfp_show bar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "SSHFPs:       Algorithm     Hash Type     Fingerprint   ",
      "              1             1             12345678abcde "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [
            {
              "created_at": "2025-06-19T13:09:15.967843+02:00",
              "updated_at": "2025-06-19T13:09:15.967849+02:00",
              "ttl": null,
              "algorithm": 1,
              "hash_type": 1,
              "fingerprint": "12345678abcde",
              "host": 19
            }
          ],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host sshfp_remove -fingerprint 394875985 bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host sshfp_remove -fingerprint 394875985 bar   # not found",
    "ok": [],
    "warning": [
      "SSHFP with query {'fingerprint': '394875985', 'host': 19} not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/sshfps/?fingerprint=394875985&host=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "host sshfp_remove bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host sshfp_remove bar",
    "ok": [
      "Removed SSHFP record with fingerprint 12345678abcde for bar.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/sshfps/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host ttl_set bar 3600",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ttl_set bar 3600",
    "ok": [
      "Set TTL for bar.example.org to 3600."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:11.270412+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {
          "ttl": 3600
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-06-19T13:09:11.489496+02:00",
                  "updated_at": "2025-06-19T13:09:11.845269+02:00",
                  "ipaddress": "10.0.0.14",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:66",
                  "created_at": "2025-06-19T13:09:11.658060+02:00",
                  "updated_at": "2025-06-19T13:09:12.012542+02:00",
                  "ipaddress": "10.0.0.15",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:09.945029+02:00",
                  "updated_at": "2025-06-19T13:09:09.945036+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:09.942915+02:00",
              "updated_at": "2025-06-19T13:09:16.207212+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": 3600,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ttl_show bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ttl_show bar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "TTL:          3600"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:16.207212+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": 3600,
          "comment": "This is the comment",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ttl_remove bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ttl_remove bar",
    "ok": [
      "Set TTL for bar.example.org to default."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {
          "ttl": null
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=19",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "",
                  "created_at": "2025-08-26T11:56:54.782509+02:00",
                  "updated_at": "2025-08-26T11:56:55.340478+02:00",
                  "ipaddress": "10.0.0.14",
                  "host": 19
                },
                {
                  "macaddress": "11:22:33:44:55:66",
                  "created_at": "2025-08-26T11:56:55.103884+02:00",
                  "updated_at": "2025-08-26T11:56:55.613257+02:00",
                  "ipaddress": "10.0.0.15",
                  "host": 19
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-08-26T11:56:52.619543+02:00",
                  "updated_at": "2025-08-26T11:56:52.619576+02:00",
                  "txt": "v=spf1 -all",
                  "host": 19
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-08-26T11:56:52.606852+02:00",
              "updated_at": "2025-08-26T11:57:01.618739+02:00",
              "name": "bar.example.org",
              "contact": "me@example.org",
              "ttl": null,
              "comment": "This is the comment",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host txt_add bar \"Lorem ipsum dolor sit amet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host txt_add bar \"Lorem ipsum dolor sit amet\"",
    "ok": [
      "Added TXT record to bar.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:16.379596+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/txts/",
        "data": {
          "host": 19,
          "txt": "Lorem ipsum dolor sit amet"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:16.496986+02:00",
          "updated_at": "2025-06-19T13:09:16.496993+02:00",
          "txt": "Lorem ipsum dolor sit amet",
          "host": 19
        }
      }
    ],
    "time": null
  },
  {
    "command": "host txt_show bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host txt_show bar",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "TXT: v=spf1 -all",
      "TXT: Lorem ipsum dolor sit amet"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            },
            {
              "created_at": "2025-06-19T13:09:16.496986+02:00",
              "updated_at": "2025-06-19T13:09:16.496993+02:00",
              "txt": "Lorem ipsum dolor sit amet",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:16.379596+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host txt_remove bar \"Whatever\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host txt_remove bar \"Whatever\"   # no match",
    "ok": [],
    "warning": [
      "bar.example.org has no TXT record matching 'Whatever'"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/txts/?host=19&txt=Whatever",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "host txt_remove bar \"Lorem ipsum dolor sit amet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host txt_remove bar \"Lorem ipsum dolor sit amet\"",
    "ok": [
      "Removed TXT record 'Lorem ipsum dolor sit amet' from bar.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/txts/?host=19&txt=Lorem+ipsum+dolor+sit+amet",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-08-26T11:57:01.730234+02:00",
              "updated_at": "2025-08-26T11:57:01.730241+02:00",
              "txt": "Lorem ipsum dolor sit amet",
              "host": 19
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/txts/21",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add *.example.org -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add *.example.org -force",
    "ok": [
      "Created host *.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         *.example.org",
      "Contact:      ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:16 2025",
      "Updated:      Thu Jun 19 13:09:16 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/%2A.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/%2A.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/%2A.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:16.661329+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "*.example.org"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/*.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:16.741076+02:00",
              "updated_at": "2025-06-19T13:09:16.741081+02:00",
              "txt": "v=spf1 -all",
              "host": 22
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:16.739223+02:00",
          "updated_at": "2025-06-19T13:09:16.739230+02:00",
          "name": "*.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove *.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove *.example.org",
    "ok": [
      "removed *.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/%2A.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:16.741076+02:00",
              "updated_at": "2025-06-19T13:09:16.741081+02:00",
              "txt": "v=spf1 -all",
              "host": 22
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:16.739223+02:00",
          "updated_at": "2025-06-19T13:09:16.739230+02:00",
          "name": "*.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/%2A.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove bar -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove bar -f",
    "ok": [
      "removed bar.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:11.489496+02:00",
              "updated_at": "2025-06-19T13:09:11.845269+02:00",
              "ipaddress": "10.0.0.14",
              "host": 19
            },
            {
              "macaddress": "11:22:33:44:55:66",
              "created_at": "2025-06-19T13:09:11.658060+02:00",
              "updated_at": "2025-06-19T13:09:12.012542+02:00",
              "ipaddress": "10.0.0.15",
              "host": 19
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:09.945029+02:00",
              "updated_at": "2025-06-19T13:09:09.945036+02:00",
              "txt": "v=spf1 -all",
              "host": 19
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.942915+02:00",
          "updated_at": "2025-06-19T13:09:16.379596+02:00",
          "name": "bar.example.org",
          "contact": "me@example.org",
          "ttl": null,
          "comment": "This is the comment",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.15",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/bar.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove baz -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove baz -f",
    "ok": [
      "removed baz.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:09.968166+02:00",
              "updated_at": "2025-06-19T13:09:12.300460+02:00",
              "ipaddress": "10.0.0.10",
              "host": 20
            },
            {
              "macaddress": "11:22:33:44:55:67",
              "created_at": "2025-06-19T13:09:12.648868+02:00",
              "updated_at": "2025-06-19T13:09:13.288692+02:00",
              "ipaddress": "2001:db8::14",
              "host": 20
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:12.150069+02:00",
              "updated_at": "2025-06-19T13:09:12.150078+02:00",
              "txt": "v=spf1 -all",
              "host": 20
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:12.147666+02:00",
          "updated_at": "2025-06-19T13:09:12.147677+02:00",
          "name": "baz.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/2001%3Adb8%3A%3A14",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.737206+02:00",
          "updated_at": "2025-06-19T13:09:09.737214+02:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/baz.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove clover",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove clover",
    "ok": [
      "removed clover.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:15.266692+02:00",
              "updated_at": "2025-06-19T13:09:15.266698+02:00",
              "txt": "v=spf1 -all",
              "host": 21
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:15.264970+02:00",
          "updated_at": "2025-06-19T13:09:15.264978+02:00",
          "name": "clover.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/clover.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add -ip 10.0.0.0/24 -macaddress aa:bb:cc:cc:bb:aa directok",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add -ip 10.0.0.0/24 -macaddress aa:bb:cc:cc:bb:aa directok",
    "ok": [
      "Created host directok.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         directok.example.org",
      "Contact:      ",
      "A_Records:",
      "              IP         MAC                 ",
      "              10.0.0.4   aa:bb:cc:cc:bb:aa   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:17 2025",
      "Updated:      Thu Jun 19 13:09:17 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Acc%3Abb%3Aaa",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/directok.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/directok.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/directok.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:17.153864+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "directok.example.org",
          "network": "10.0.0.0/24"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/directok.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:17.300277+02:00",
              "updated_at": "2025-06-19T13:09:17.300283+02:00",
              "ipaddress": "10.0.0.4",
              "host": 23
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:17.282562+02:00",
              "updated_at": "2025-06-19T13:09:17.282568+02:00",
              "txt": "v=spf1 -all",
              "host": 23
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:17.279593+02:00",
          "updated_at": "2025-06-19T13:09:17.279600+02:00",
          "name": "directok.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Acc%3Abb%3Aaa&ordering=ipaddress",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/26",
        "data": {
          "macaddress": "aa:bb:cc:cc:bb:aa"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/26",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "aa:bb:cc:cc:bb:aa",
          "created_at": "2025-06-19T13:09:17.300277+02:00",
          "updated_at": "2025-06-19T13:09:17.385183+02:00",
          "ipaddress": "10.0.0.4",
          "host": 23
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=23",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "aa:bb:cc:cc:bb:aa",
                  "created_at": "2025-06-19T13:09:17.300277+02:00",
                  "updated_at": "2025-06-19T13:09:17.385183+02:00",
                  "ipaddress": "10.0.0.4",
                  "host": 23
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:17.282562+02:00",
                  "updated_at": "2025-06-19T13:09:17.282568+02:00",
                  "txt": "v=spf1 -all",
                  "host": 23
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:17.279593+02:00",
              "updated_at": "2025-06-19T13:09:17.279600+02:00",
              "name": "directok.example.org",
              "contact": "",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add -ip 10.0.0.0/24 -macaddress aa:bb:cc:cc:bb:aa directfail",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add -ip 10.0.0.0/24 -macaddress aa:bb:cc:cc:bb:aa directfail",
    "ok": [],
    "warning": [
      "MAC address aa:bb:cc:cc:bb:aa is already associated with IP address 10.0.0.4, must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=aa%3Abb%3Acc%3Acc%3Abb%3Aaa",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "macaddress": "aa:bb:cc:cc:bb:aa",
              "created_at": "2025-06-19T13:09:17.300277+02:00",
              "updated_at": "2025-06-19T13:09:17.385183+02:00",
              "ipaddress": "10.0.0.4",
              "host": 23
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove directok",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove directok",
    "ok": [
      "removed directok.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/directok.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "aa:bb:cc:cc:bb:aa",
              "created_at": "2025-06-19T13:09:17.300277+02:00",
              "updated_at": "2025-06-19T13:09:17.385183+02:00",
              "ipaddress": "10.0.0.4",
              "host": 23
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:17.282562+02:00",
              "updated_at": "2025-06-19T13:09:17.282568+02:00",
              "txt": "v=spf1 -all",
              "host": 23
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:17.279593+02:00",
          "updated_at": "2025-06-19T13:09:17.279600+02:00",
          "name": "directok.example.org",
          "contact": "",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/directok.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:18 2025",
      "Updated:      Thu Jun 19 13:09:18 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:18.149894+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:18.752804+02:00",
              "updated_at": "2025-06-19T13:09:18.752813+02:00",
              "ipaddress": "10.0.0.10",
              "host": 24
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:18.714858+02:00",
              "updated_at": "2025-06-19T13:09:18.714865+02:00",
              "txt": "v=spf1 -all",
              "host": 24
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:18.711816+02:00",
          "updated_at": "2025-06-19T13:09:18.711843+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host mx_add foo 10 mail.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host mx_add foo 10 mail.example.org",
    "ok": [
      "Added MX record to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:18.752804+02:00",
              "updated_at": "2025-06-19T13:09:18.752813+02:00",
              "ipaddress": "10.0.0.10",
              "host": 24
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:18.714858+02:00",
              "updated_at": "2025-06-19T13:09:18.714865+02:00",
              "txt": "v=spf1 -all",
              "host": 24
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:18.711816+02:00",
          "updated_at": "2025-06-19T13:09:18.711843+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/mxs/",
        "data": {
          "host": 24,
          "priority": 10,
          "mx": "mail.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:18.884373+02:00",
          "updated_at": "2025-06-19T13:09:18.884384+02:00",
          "priority": 10,
          "mx": "mail.example.org",
          "host": 24
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo # Should fail, because it has an MX record, must force and override with 'mx'",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 MX records\n    - mail.example.org (priority: 10)\nUse `-force mx` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:18.752804+02:00",
              "updated_at": "2025-06-19T13:09:18.752813+02:00",
              "ipaddress": "10.0.0.10",
              "host": 24
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:18.884373+02:00",
              "updated_at": "2025-06-19T13:09:18.884384+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 24
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:18.714858+02:00",
              "updated_at": "2025-06-19T13:09:18.714865+02:00",
              "txt": "v=spf1 -all",
              "host": 24
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:18.711816+02:00",
          "updated_at": "2025-06-19T13:09:18.711843+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo -force -override mx",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override mx",
    "ok": [
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:19 2025",
      "Updated:      Thu Jun 19 13:09:19 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:19.014593+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.182163+02:00",
              "updated_at": "2025-06-19T13:09:19.182175+02:00",
              "ipaddress": "10.0.0.10",
              "host": 25
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.124521+02:00",
              "updated_at": "2025-06-19T13:09:19.124527+02:00",
              "txt": "v=spf1 -all",
              "host": 25
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.122473+02:00",
          "updated_at": "2025-06-19T13:09:19.122481+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_add 10.0.0.11 foo.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_add 10.0.0.11 foo.example.org",
    "ok": [
      "Added PTR record 10.0.0.11 to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.182163+02:00",
              "updated_at": "2025-06-19T13:09:19.182175+02:00",
              "ipaddress": "10.0.0.10",
              "host": 25
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.124521+02:00",
              "updated_at": "2025-06-19T13:09:19.124527+02:00",
              "txt": "v=spf1 -all",
              "host": 25
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.122473+02:00",
          "updated_at": "2025-06-19T13:09:19.122481+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ptroverrides/?ipaddress=10.0.0.11",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.11",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.0.0",
          "10.0.0.1",
          "10.0.0.2",
          "10.0.0.3",
          "10.0.0.255"
        ]
      },
      {
        "method": "POST",
        "url": "/api/v1/ptroverrides/",
        "data": {
          "host": 25,
          "ipaddress": "10.0.0.11"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:19.598259+02:00",
          "updated_at": "2025-06-19T13:09:19.598267+02:00",
          "ipaddress": "10.0.0.11",
          "host": 25
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo # Should fail, because it has a PTR record, must force and override with 'ptr'",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 PTR records\n    - 10.0.0.11\nUse `-force ptr` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.182163+02:00",
              "updated_at": "2025-06-19T13:09:19.182175+02:00",
              "ipaddress": "10.0.0.10",
              "host": 25
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.124521+02:00",
              "updated_at": "2025-06-19T13:09:19.124527+02:00",
              "txt": "v=spf1 -all",
              "host": 25
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:19.598259+02:00",
              "updated_at": "2025-06-19T13:09:19.598267+02:00",
              "ipaddress": "10.0.0.11",
              "host": 25
            }
          ],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.122473+02:00",
          "updated_at": "2025-06-19T13:09:19.122481+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo -force -override ptr",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override ptr",
    "ok": [
      "deleted PTR record 10.0.0.11 when removing foo.example.org",
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:19 2025",
      "Updated:      Thu Jun 19 13:09:19 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:19.729086+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.904349+02:00",
              "updated_at": "2025-06-19T13:09:19.904368+02:00",
              "ipaddress": "10.0.0.10",
              "host": 26
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.880837+02:00",
              "updated_at": "2025-06-19T13:09:19.880845+02:00",
              "txt": "v=spf1 -all",
              "host": 26
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.878789+02:00",
          "updated_at": "2025-06-19T13:09:19.878799+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host naptr_add -name foo -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host naptr_add -name foo -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "ok": [
      "Added NAPTR record to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.904349+02:00",
              "updated_at": "2025-06-19T13:09:19.904368+02:00",
              "ipaddress": "10.0.0.10",
              "host": 26
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.880837+02:00",
              "updated_at": "2025-06-19T13:09:19.880845+02:00",
              "txt": "v=spf1 -all",
              "host": 26
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.878789+02:00",
          "updated_at": "2025-06-19T13:09:19.878799+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/naptrs/?preference=16384&order=3&flag=u&service=SIP&regex=%5Babc%5D%2B&replacement=wonk&host=26",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/naptrs/",
        "data": {
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 26
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:20.143803+02:00",
          "updated_at": "2025-06-19T13:09:20.143814+02:00",
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 26
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 NAPTR records\n    - wonk\nUse `-force naptr` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:19.904349+02:00",
              "updated_at": "2025-06-19T13:09:19.904368+02:00",
              "ipaddress": "10.0.0.10",
              "host": 26
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:19.880837+02:00",
              "updated_at": "2025-06-19T13:09:19.880845+02:00",
              "txt": "v=spf1 -all",
              "host": 26
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [
            {
              "created_at": "2025-06-19T13:09:20.143803+02:00",
              "updated_at": "2025-06-19T13:09:20.143814+02:00",
              "preference": 16384,
              "order": 3,
              "flag": "u",
              "service": "sip",
              "regex": "[abc]+",
              "replacement": "wonk",
              "host": 26
            }
          ],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:19.878789+02:00",
          "updated_at": "2025-06-19T13:09:19.878799+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo -force -override naptr",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override naptr",
    "ok": [
      "deleted NAPTR record wonk when removing foo.example.org",
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:20 2025",
      "Updated:      Thu Jun 19 13:09:20 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:20.325379+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.455468+02:00",
              "updated_at": "2025-06-19T13:09:20.455475+02:00",
              "ipaddress": "10.0.0.10",
              "host": 27
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.437537+02:00",
              "updated_at": "2025-06-19T13:09:20.437544+02:00",
              "txt": "v=spf1 -all",
              "host": 27
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.435581+02:00",
          "updated_at": "2025-06-19T13:09:20.435588+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host foo.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host foo.example.org",
    "ok": [
      "Added SRV record _sip._tcp.example.org with target foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.455468+02:00",
              "updated_at": "2025-06-19T13:09:20.455475+02:00",
              "ipaddress": "10.0.0.10",
              "host": 27
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.437537+02:00",
              "updated_at": "2025-06-19T13:09:20.437544+02:00",
              "txt": "v=spf1 -all",
              "host": 27
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.435581+02:00",
          "updated_at": "2025-06-19T13:09:20.435588+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/_sip._tcp.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:20.454825+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:20.454825+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=_sip._tcp.example.org&priority=10&weight=5&port=3456&host=27&ttl=None",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/srvs/",
        "data": {
          "name": "_sip._tcp.example.org",
          "priority": "10",
          "weight": "5",
          "port": "3456",
          "host": 27
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:20.637233+02:00",
          "updated_at": "2025-06-19T13:09:20.637240+02:00",
          "name": "_sip._tcp.example.org",
          "priority": 10,
          "weight": 5,
          "port": 3456,
          "ttl": null,
          "zone": 1,
          "host": 27
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo # Should fail, because it has an SRV record, must force and override with 'srv'",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 SRV records\n    - _sip._tcp.example.org\nUse `-force srv` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.455468+02:00",
              "updated_at": "2025-06-19T13:09:20.455475+02:00",
              "ipaddress": "10.0.0.10",
              "host": 27
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.437537+02:00",
              "updated_at": "2025-06-19T13:09:20.437544+02:00",
              "txt": "v=spf1 -all",
              "host": 27
            }
          ],
          "ptr_overrides": [],
          "srvs": [
            {
              "created_at": "2025-06-19T13:09:20.637233+02:00",
              "updated_at": "2025-06-19T13:09:20.637240+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 27
            }
          ],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.435581+02:00",
          "updated_at": "2025-06-19T13:09:20.435588+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo -force -override srv",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override srv",
    "ok": [
      "deleted SRV record _sip._tcp.example.org when removing foo.example.org",
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:20 2025",
      "Updated:      Thu Jun 19 13:09:20 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:20.753067+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.871148+02:00",
              "updated_at": "2025-06-19T13:09:20.871156+02:00",
              "ipaddress": "10.0.0.10",
              "host": 28
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.855535+02:00",
              "updated_at": "2025-06-19T13:09:20.855540+02:00",
              "txt": "v=spf1 -all",
              "host": 28
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.853583+02:00",
          "updated_at": "2025-06-19T13:09:20.853593+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host cname_add foo fubar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host cname_add foo fubar",
    "ok": [
      "Added CNAME fubar.example.org for foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.871148+02:00",
              "updated_at": "2025-06-19T13:09:20.871156+02:00",
              "ipaddress": "10.0.0.10",
              "host": 28
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.855535+02:00",
              "updated_at": "2025-06-19T13:09:20.855540+02:00",
              "txt": "v=spf1 -all",
              "host": 28
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.853583+02:00",
          "updated_at": "2025-06-19T13:09:20.853593+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:20.870491+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/cnames/",
        "data": {
          "host": "28",
          "name": "fubar.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:21.039050+02:00",
          "updated_at": "2025-06-19T13:09:21.039058+02:00",
          "name": "fubar.example.org",
          "ttl": null,
          "zone": 1,
          "host": 28
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:20.871148+02:00",
              "updated_at": "2025-06-19T13:09:20.871156+02:00",
              "ipaddress": "10.0.0.10",
              "host": 28
            }
          ],
          "cnames": [
            {
              "created_at": "2025-06-19T13:09:21.039050+02:00",
              "updated_at": "2025-06-19T13:09:21.039058+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 28
            }
          ],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:20.855535+02:00",
              "updated_at": "2025-06-19T13:09:20.855540+02:00",
              "txt": "v=spf1 -all",
              "host": 28
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:20.853583+02:00",
          "updated_at": "2025-06-19T13:09:20.853593+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/?host=28&name=fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-06-19T13:09:21.039050+02:00",
              "updated_at": "2025-06-19T13:09:21.039058+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 28
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo # Should fail, because it has a CNAME record, must force and override with 'cname'",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 cnames\n    - fubar.example.org\nUse `-force cname` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host remove foo -force -override cname",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override cname",
    "ok": [
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add foo -ip 10.0.0.10 -contact \"foo@example.org\"",
    "ok": [
      "Created host foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo.example.org",
      "Contact:      foo@example.org",
      "A_Records:",
      "              IP          MAC         ",
      "              10.0.0.10   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:21 2025",
      "Updated:      Thu Jun 19 13:09:21 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/foo.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:21.279200+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ipaddress": "10.0.0.10"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.10",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host mx_add foo 10 mail.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host mx_add foo 10 mail.example.org",
    "ok": [
      "Added MX record to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/mxs/",
        "data": {
          "host": 29,
          "priority": 10,
          "mx": "mail.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:21.529516+02:00",
          "updated_at": "2025-06-19T13:09:21.529525+02:00",
          "priority": 10,
          "mx": "mail.example.org",
          "host": 29
        }
      }
    ],
    "time": null
  },
  {
    "command": "host ptr_add 10.0.0.11 foo.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host ptr_add 10.0.0.11 foo.example.org",
    "ok": [
      "Added PTR record 10.0.0.11 to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:21.529516+02:00",
              "updated_at": "2025-06-19T13:09:21.529525+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 29
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ptroverrides/?ipaddress=10.0.0.11",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.11",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:09.671414+02:00",
          "updated_at": "2025-06-19T13:09:09.671430+02:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.0.0",
          "10.0.0.1",
          "10.0.0.2",
          "10.0.0.3",
          "10.0.0.255"
        ]
      },
      {
        "method": "POST",
        "url": "/api/v1/ptroverrides/",
        "data": {
          "host": 29,
          "ipaddress": "10.0.0.11"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:21.681379+02:00",
          "updated_at": "2025-06-19T13:09:21.681387+02:00",
          "ipaddress": "10.0.0.11",
          "host": 29
        }
      }
    ],
    "time": null
  },
  {
    "command": "host naptr_add -name foo -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host naptr_add -name foo -preference 16384 -order 3 -flag u -service \"SIP\" -regex \"[abc]+\" -replacement \"wonk\"",
    "ok": [
      "Added NAPTR record to foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:21.529516+02:00",
              "updated_at": "2025-06-19T13:09:21.529525+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 29
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:21.681379+02:00",
              "updated_at": "2025-06-19T13:09:21.681387+02:00",
              "ipaddress": "10.0.0.11",
              "host": 29
            }
          ],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/naptrs/?preference=16384&order=3&flag=u&service=SIP&regex=%5Babc%5D%2B&replacement=wonk&host=29",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/naptrs/",
        "data": {
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 29
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:21.991643+02:00",
          "updated_at": "2025-06-19T13:09:21.991651+02:00",
          "preference": 16384,
          "order": 3,
          "flag": "u",
          "service": "SIP",
          "regex": "[abc]+",
          "replacement": "wonk",
          "host": 29
        }
      }
    ],
    "time": null
  },
  {
    "command": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host foo.example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host srv_add -name \"_sip._tcp.example.org\" -priority 10 -weight 5 -port 3456 -host foo.example.org",
    "ok": [
      "Added SRV record _sip._tcp.example.org with target foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:21.529516+02:00",
              "updated_at": "2025-06-19T13:09:21.529525+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 29
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:21.681379+02:00",
              "updated_at": "2025-06-19T13:09:21.681387+02:00",
              "ipaddress": "10.0.0.11",
              "host": 29
            }
          ],
          "srvs": [],
          "naptrs": [
            {
              "created_at": "2025-06-19T13:09:21.991643+02:00",
              "updated_at": "2025-06-19T13:09:21.991651+02:00",
              "preference": 16384,
              "order": 3,
              "flag": "u",
              "service": "sip",
              "regex": "[abc]+",
              "replacement": "wonk",
              "host": 29
            }
          ],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/_sip._tcp.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:21.990588+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:21.990588+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/srvs/?name=_sip._tcp.example.org&priority=10&weight=5&port=3456&host=29&ttl=None",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/srvs/",
        "data": {
          "name": "_sip._tcp.example.org",
          "priority": "10",
          "weight": "5",
          "port": "3456",
          "host": 29
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:22.144577+02:00",
          "updated_at": "2025-06-19T13:09:22.144585+02:00",
          "name": "_sip._tcp.example.org",
          "priority": 10,
          "weight": 5,
          "port": 3456,
          "ttl": null,
          "zone": 1,
          "host": 29
        }
      }
    ],
    "time": null
  },
  {
    "command": "host cname_add foo fubar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host cname_add foo fubar",
    "ok": [
      "Added CNAME fubar.example.org for foo.example.org."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:21.529516+02:00",
              "updated_at": "2025-06-19T13:09:21.529525+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 29
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:21.681379+02:00",
              "updated_at": "2025-06-19T13:09:21.681387+02:00",
              "ipaddress": "10.0.0.11",
              "host": 29
            }
          ],
          "srvs": [
            {
              "created_at": "2025-06-19T13:09:22.144577+02:00",
              "updated_at": "2025-06-19T13:09:22.144585+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 29
            }
          ],
          "naptrs": [
            {
              "created_at": "2025-06-19T13:09:21.991643+02:00",
              "updated_at": "2025-06-19T13:09:21.991651+02:00",
              "preference": 16384,
              "order": 3,
              "flag": "u",
              "service": "sip",
              "regex": "[abc]+",
              "replacement": "wonk",
              "host": 29
            }
          ],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/fubar.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:22.143306+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/cnames/",
        "data": {
          "host": "29",
          "name": "fubar.example.org"
        },
        "status": 201,
        "response": {
          "created_at": "2025-06-19T13:09:22.259207+02:00",
          "updated_at": "2025-06-19T13:09:22.259214+02:00",
          "name": "fubar.example.org",
          "ttl": null,
          "zone": 1,
          "host": 29
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:21.423104+02:00",
              "updated_at": "2025-06-19T13:09:21.423114+02:00",
              "ipaddress": "10.0.0.10",
              "host": 29
            }
          ],
          "cnames": [
            {
              "created_at": "2025-06-19T13:09:22.259207+02:00",
              "updated_at": "2025-06-19T13:09:22.259214+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 29
            }
          ],
          "mxs": [
            {
              "created_at": "2025-06-19T13:09:21.529516+02:00",
              "updated_at": "2025-06-19T13:09:21.529525+02:00",
              "priority": 10,
              "mx": "mail.example.org",
              "host": 29
            }
          ],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:21.402387+02:00",
              "updated_at": "2025-06-19T13:09:21.402394+02:00",
              "txt": "v=spf1 -all",
              "host": 29
            }
          ],
          "ptr_overrides": [
            {
              "created_at": "2025-06-19T13:09:21.681379+02:00",
              "updated_at": "2025-06-19T13:09:21.681387+02:00",
              "ipaddress": "10.0.0.11",
              "host": 29
            }
          ],
          "srvs": [
            {
              "created_at": "2025-06-19T13:09:22.144577+02:00",
              "updated_at": "2025-06-19T13:09:22.144585+02:00",
              "name": "_sip._tcp.example.org",
              "priority": 10,
              "weight": 5,
              "port": 3456,
              "ttl": null,
              "zone": 1,
              "host": 29
            }
          ],
          "naptrs": [
            {
              "created_at": "2025-06-19T13:09:21.991643+02:00",
              "updated_at": "2025-06-19T13:09:21.991651+02:00",
              "preference": 16384,
              "order": 3,
              "flag": "u",
              "service": "sip",
              "regex": "[abc]+",
              "replacement": "wonk",
              "host": 29
            }
          ],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:21.400433+02:00",
          "updated_at": "2025-06-19T13:09:21.400440+02:00",
          "name": "foo.example.org",
          "contact": "foo@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/?host=29&name=fubar.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-06-19T13:09:22.259207+02:00",
              "updated_at": "2025-06-19T13:09:22.259214+02:00",
              "name": "fubar.example.org",
              "ttl": null,
              "zone": 1,
              "host": 29
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo # Should fail, because it has multiple records, must force and override with everything.",
    "ok": [],
    "warning": [
      "foo.example.org requires force and override for deletion:\n  1 cnames\n    - fubar.example.org\n  1 MX records\n    - mail.example.org (priority: 10)\n  1 NAPTR records\n    - wonk\n  1 SRV records\n    - _sip._tcp.example.org\n  1 PTR records\n    - 10.0.0.11\nUse `-force cname mx naptr ptr srv` to override."
    ],
    "error": [],
    "output": [],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host remove foo -force -override mx,ptr,naptr,srv,cname",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove foo -force -override mx,ptr,naptr,srv,cname",
    "ok": [
      "deleted NAPTR record wonk when removing foo.example.org",
      "deleted SRV record _sip._tcp.example.org when removing foo.example.org",
      "deleted PTR record 10.0.0.11 when removing foo.example.org",
      "removed foo.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/foo.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.0.0/24 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.0.0/24 -f",
    "ok": [
      "Removed network 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:58.258082+01:00",
          "updated_at": "2025-03-19T10:10:58.258094+01:00",
          "network": "10.0.0.0/24",
          "description": "lorem ipsum",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 2001:db8::/64 -f",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 2001:db8::/64 -f",
    "ok": [
      "Removed network 2001:db8::/64"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-19T10:10:58.349561+01:00",
          "updated_at": "2025-03-19T10:10:58.349577+01:00",
          "network": "2001:db8::/64",
          "description": "dolor sit amet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/2001%3Adb8%3A%3A/64",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "label add postit 'This is a label'",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label add postit 'This is a label'",
    "ok": [
      "Added label \"postit\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/labels/",
        "data": {
          "name": "postit",
          "description": "This is a label"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "label list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name     Description       ",
      "postit   This is a label   "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.097351+01:00",
              "updated_at": "2024-12-11T16:45:38.097369+01:00",
              "name": "postit",
              "description": "This is a label"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "label info postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label info postit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         postit",
      "Description:  This is a label",
      "Roles with this label:",
      "None",
      "Permissions with this label:",
      "None"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.097351+01:00",
              "updated_at": "2024-12-11T16:45:38.097369+01:00",
              "name": "postit",
              "description": "This is a label"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?labels=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?labels=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "label rename postit mylabel",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label rename postit mylabel",
    "ok": [
      "Renamed label \"postit\" to \"mylabel\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/labels/1",
        "data": {
          "name": "mylabel"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/1",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2025-08-26T11:57:08.510558+02:00",
          "updated_at": "2025-08-26T11:57:08.656676+02:00",
          "name": "mylabel",
          "description": "This is a label"
        }
      }
    ],
    "time": null
  },
  {
    "command": "label set_description mylabel 'This is the new description'",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label set_description mylabel 'This is the new description'",
    "ok": [
      "Set description for label \"mylabel\" to \"This is the new description\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=mylabel",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.097351+01:00",
              "updated_at": "2024-12-11T16:45:38.353381+01:00",
              "name": "mylabel",
              "description": "This is a label"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/labels/1",
        "data": {
          "description": "This is the new description"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/1",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2024-12-11T16:45:38.097351+01:00",
          "updated_at": "2024-12-11T16:45:38.486049+01:00",
          "name": "mylabel",
          "description": "This is the new description"
        }
      }
    ],
    "time": null
  },
  {
    "command": "label remove mylabel",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label remove mylabel",
    "ok": [
      "Removed label \"mylabel\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=mylabel",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.097351+01:00",
              "updated_at": "2024-12-11T16:45:38.486049+01:00",
              "name": "mylabel",
              "description": "This is the new description"
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/labels/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "label add postit 'A label again'",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label add postit 'A label again'",
    "ok": [
      "Added label \"postit\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "POST",
        "url": "/api/v1/labels/",
        "data": {
          "name": "postit",
          "description": "A label again"
        },
        "status": 201
      }
    ],
    "time": null
  },
  {
    "command": "policy role_create myrole 'This is the description'",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_create myrole 'This is the description'",
    "ok": [
      "Created new role 'myrole'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hostpolicy/roles/",
        "data": {
          "name": "myrole",
          "description": "This is the description"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2025-05-19T10:28:07.397081+02:00",
          "description": "This is the description",
          "name": "myrole",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy label_add postit myrole",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy label_add postit myrole",
    "ok": [
      "Added the label 'postit' to the role 'myrole'."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2024-12-11T16:45:38.788140+01:00",
          "description": "This is the description",
          "name": "myrole",
          "labels": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {
          "labels": [
            2
          ]
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?id=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2024-12-11T16:45:39.026164+01:00",
              "description": "This is the description",
              "name": "myrole",
              "labels": [
                2
              ]
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy list_roles *",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy list_roles *",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name     Description               Labels   ",
      "myrole   This is the description   postit   "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?name__regex=.",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2024-12-11T16:45:39.026164+01:00",
              "description": "This is the description",
              "name": "myrole",
              "labels": [
                2
              ]
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/2",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2024-12-11T16:45:38.691439+01:00",
          "updated_at": "2024-12-11T16:45:38.691461+01:00",
          "name": "postit",
          "description": "A label again"
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy info myrole",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy info myrole",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         myrole",
      "Created:      Tue Aug 26 00:00:00 2025",
      "Updated:      Tue Aug 26 11:57:09 2025",
      "Description:  This is the description",
      "Atom members:",
      "Labels:",
      "               postit"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/atoms/myrole",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2025-08-26T11:57:09.273647+02:00",
          "description": "This is the description",
          "name": "myrole",
          "labels": [
            2
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "label info postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label info postit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         postit",
      "Description:  A label again",
      "Roles with this label:",
      "    myrole",
      "Permissions with this label:",
      "None"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?labels=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2024-12-11T16:45:39.026164+01:00",
              "description": "This is the description",
              "name": "myrole",
              "labels": [
                2
              ]
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?labels=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy label_remove postit myrole",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy label_remove postit myrole",
    "ok": [
      "Removed the label 'postit' from the role 'myrole'."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {
          "labels": []
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?id=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "hosts": [],
              "atoms": [],
              "updated_at": "2025-08-26T11:57:09.516781+02:00",
              "description": "This is the description",
              "name": "myrole",
              "labels": []
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "policy role_delete myrole",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "policy role_delete myrole",
    "ok": [
      "Deleted role 'myrole'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 200,
        "response": {
          "hosts": [],
          "atoms": [],
          "updated_at": "2024-12-11T16:45:39.632188+01:00",
          "description": "This is the description",
          "name": "myrole",
          "labels": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hostpolicy/roles/myrole",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "permission network_add 192.168.0.0/16 mygroup .*",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_add 192.168.0.0/16 mygroup .*",
    "ok": [
      "Added permission to 192.168.0.0/16"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?range=192.168.0.0%2F16&group=mygroup&regex=.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/permissions/netgroupregex/",
        "data": {
          "range": "192.168.0.0/16",
          "group": "mygroup",
          "regex": ".*"
        },
        "status": 201,
        "response": {
          "created_at": "2024-12-11T16:45:39.885936+01:00",
          "updated_at": "2024-12-11T16:45:39.885950+01:00",
          "group": "mygroup",
          "range": "192.168.0.0/16",
          "regex": ".*",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission label_add 192.168.0.0/16 mygroup .* postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission label_add 192.168.0.0/16 mygroup .* postit",
    "ok": [
      "Added the label 'postit' to the permission."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?group=mygroup&range=192.168.0.0%2F16&regex=.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:39.885936+01:00",
              "updated_at": "2024-12-11T16:45:39.885950+01:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": []
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/permissions/netgroupregex/2",
        "data": {
          "labels": [
            2
          ]
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/2",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2024-12-11T16:45:39.885936+01:00",
          "updated_at": "2024-12-11T16:45:40.035819+01:00",
          "group": "mygroup",
          "range": "192.168.0.0/16",
          "regex": ".*",
          "labels": [
            2
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Range            Group     Regex   Labels   ",
      "192.168.0.0/16   mygroup   .*      postit   "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?ordering=range%2Cgroup",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:39.885936+01:00",
              "updated_at": "2024-12-11T16:45:40.035819+01:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": [
                2
              ]
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/?ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "label info postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label info postit",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         postit",
      "Description:  A label again",
      "Roles with this label:",
      "None",
      "Permissions with this label:",
      "    IP range         Group     Reg.exp.   ",
      "    192.168.0.0/16   mygroup   .*         "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hostpolicy/roles/?labels=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?labels=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:39.885936+01:00",
              "updated_at": "2024-12-11T16:45:40.035819+01:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": [
                2
              ]
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission label_remove 192.168.0.0/16 mygroup .* postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission label_remove 192.168.0.0/16 mygroup .* postit",
    "ok": [
      "Removed the label 'postit' from the permission."
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?group=mygroup&range=192.168.0.0%2F16&regex=.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2025-08-26T11:57:09.653456+02:00",
              "updated_at": "2025-08-26T11:57:09.783797+02:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": [
                2
              ]
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/permissions/netgroupregex/2",
        "data": {
          "labels": []
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/2",
        "data": {},
        "status": 200,
        "response": {
          "created_at": "2025-08-26T11:57:09.653456+02:00",
          "updated_at": "2025-08-26T11:57:10.070646+02:00",
          "group": "mygroup",
          "range": "192.168.0.0/16",
          "regex": ".*",
          "labels": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Range            Group     Regex   Labels   ",
      "192.168.0.0/16   mygroup   .*               "
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?ordering=range%2Cgroup",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:39.885936+01:00",
              "updated_at": "2024-12-11T16:45:40.433444+01:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": []
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/labels/?ordering=name",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "permission network_remove 192.168.0.0/16 mygroup .*",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "permission network_remove 192.168.0.0/16 mygroup .*",
    "ok": [
      "Removed permission for 192.168.0.0/16"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/permissions/netgroupregex/?group=mygroup&range=192.168.0.0%2F16&regex=.%2A",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:39.885936+01:00",
              "updated_at": "2024-12-11T16:45:40.433444+01:00",
              "group": "mygroup",
              "range": "192.168.0.0/16",
              "regex": ".*",
              "labels": []
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/permissions/netgroupregex/2",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "label remove postit",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "label remove postit",
    "ok": [
      "Removed label \"postit\""
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/labels/?name=postit",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "created_at": "2024-12-11T16:45:38.691439+01:00",
              "updated_at": "2024-12-11T16:45:38.691461+01:00",
              "name": "postit",
              "description": "A label again"
            }
          ]
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/labels/2",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.2.0/28 -desc \"TinyNet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.2.0/28 -desc \"TinyNet\"",
    "ok": [
      "created network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-21T16:15:43.196305+01:00",
          "updated_at": "2025-03-21T16:15:43.196315+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_create foo \"Foo attribute\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_create foo \"Foo attribute\"",
    "ok": [
      "Created network policy attribute 'foo'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=foo",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicyattributes/",
        "data": {
          "name": "foo",
          "description": "Foo attribute"
        },
        "status": 201,
        "response": {
          "name": "foo",
          "description": "Foo attribute",
          "created_at": "2025-03-21T16:15:43.256009+01:00",
          "updated_at": "2025-03-21T16:15:43.256016+01:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/2",
        "data": {},
        "status": 200,
        "response": {
          "name": "foo",
          "description": "Foo attribute",
          "created_at": "2025-03-21T16:15:43.256009+01:00",
          "updated_at": "2025-03-21T16:15:43.256016+01:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_create bar \"Bar attribute\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_create bar \"Bar attribute\"",
    "ok": [
      "Created network policy attribute 'bar'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=bar",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicyattributes/",
        "data": {
          "name": "bar",
          "description": "Bar attribute"
        },
        "status": 201,
        "response": {
          "name": "bar",
          "description": "Bar attribute",
          "created_at": "2025-03-21T16:15:43.324192+01:00",
          "updated_at": "2025-03-21T16:15:43.324202+01:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/3",
        "data": {},
        "status": 200,
        "response": {
          "name": "bar",
          "description": "Bar attribute",
          "created_at": "2025-03-21T16:15:43.324192+01:00",
          "updated_at": "2025-03-21T16:15:43.324202+01:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_create baz \"Baz attribute\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_create baz \"Baz attribute\"",
    "ok": [
      "Created network policy attribute 'baz'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=baz",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicyattributes/",
        "data": {
          "name": "baz",
          "description": "Baz attribute"
        },
        "status": 201,
        "response": {
          "name": "baz",
          "description": "Baz attribute",
          "created_at": "2025-03-21T16:15:43.402037+01:00",
          "updated_at": "2025-03-21T16:15:43.402047+01:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/4",
        "data": {},
        "status": 200,
        "response": {
          "name": "baz",
          "description": "Baz attribute",
          "created_at": "2025-03-21T16:15:43.402037+01:00",
          "updated_at": "2025-03-21T16:15:43.402047+01:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_create SecurePolicy \"Secure policy for a network\" -attribute foo -attribute bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_create SecurePolicy \"Secure policy for a network\" -attribute foo -attribute bar",
    "ok": [
      "Created network policy 'SecurePolicy'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=securepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=foo",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "foo",
              "description": "Foo attribute",
              "created_at": "2025-05-13T11:03:24.663143+02:00",
              "updated_at": "2025-05-13T11:03:24.663153+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=bar",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "bar",
              "description": "Bar attribute",
              "created_at": "2025-05-13T11:03:24.750314+02:00",
              "updated_at": "2025-05-13T11:03:24.750327+02:00"
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicies/",
        "data": {
          "name": "SecurePolicy",
          "description": "Secure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ]
        },
        "status": 201,
        "response": {
          "name": "securepolicy",
          "description": "Secure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:24.946081+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/1",
        "data": {},
        "status": 200,
        "response": {
          "name": "securepolicy",
          "description": "Secure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:24.946081+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_create Autoconfigure \"Automatic host configuration\" -attribute baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_create Autoconfigure \"Automatic host configuration\" -attribute baz",
    "ok": [
      "Created network policy 'Autoconfigure'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=autoconfigure",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=baz",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "baz",
              "description": "Baz attribute",
              "created_at": "2025-05-13T11:03:24.830069+02:00",
              "updated_at": "2025-05-13T11:03:24.830077+02:00"
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicies/",
        "data": {
          "name": "Autoconfigure",
          "description": "Automatic host configuration",
          "attributes": [
            {
              "name": "baz",
              "value": true
            }
          ]
        },
        "status": 201,
        "response": {
          "name": "autoconfigure",
          "description": "Automatic host configuration",
          "attributes": [
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:25.047003+02:00",
          "updated_at": "2025-05-13T11:03:25.047017+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/2",
        "data": {},
        "status": 200,
        "response": {
          "name": "autoconfigure",
          "description": "Automatic host configuration",
          "attributes": [
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:25.047003+02:00",
          "updated_at": "2025-05-13T11:03:25.047017+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_create NoICMP \"ICMP disallowed\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_create NoICMP \"ICMP disallowed\" # no attributes",
    "ok": [
      "Created network policy 'NoICMP'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=noicmp",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicies/",
        "data": {
          "name": "NoICMP",
          "description": "ICMP disallowed",
          "attributes": []
        },
        "status": 201,
        "response": {
          "name": "noicmp",
          "description": "ICMP disallowed",
          "attributes": [],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:25.119085+02:00",
          "updated_at": "2025-05-13T11:03:25.119098+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/3",
        "data": {},
        "status": 200,
        "response": {
          "name": "noicmp",
          "description": "ICMP disallowed",
          "attributes": [],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:25.119085+02:00",
          "updated_at": "2025-05-13T11:03:25.119098+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: securepolicy",
      "Description: Secure policy for a network",
      "Attributes:",
      " foo: True",
      " bar: True",
      "Created:      Tue May 13 11:03:24 2025",
      "Updated:      Tue May 13 11:03:24 2025",
      "",
      "Name: autoconfigure",
      "Description: Automatic host configuration",
      "Attributes:",
      " baz: True",
      "Created:      Tue May 13 11:03:25 2025",
      "Updated:      Tue May 13 11:03:25 2025",
      "",
      "Name: noicmp",
      "Description: ICMP disallowed",
      "Created:      Tue May 13 11:03:25 2025",
      "Updated:      Tue May 13 11:03:25 2025",
      ""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/",
        "data": {},
        "status": 200,
        "response": {
          "count": 3,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "securepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:24.946081+02:00"
            },
            {
              "name": "autoconfigure",
              "description": "Automatic host configuration",
              "attributes": [
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.047003+02:00",
              "updated_at": "2025-05-13T11:03:25.047017+02:00"
            },
            {
              "name": "noicmp",
              "description": "ICMP disallowed",
              "attributes": [],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.119085+02:00",
              "updated_at": "2025-05-13T11:03:25.119098+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_info SecurePolicy",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_info SecurePolicy",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: securepolicy",
      "Description: Secure policy for a network",
      "Attributes:",
      " foo: True",
      " bar: True",
      "Created:      Tue Aug 26 11:57:10 2025",
      "Updated:      Tue Aug 26 11:57:10 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=securepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "securepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-08-26T11:57:10.778366+02:00",
              "updated_at": "2025-08-26T11:57:10.778380+02:00"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_info Autoconfigure",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_info Autoconfigure",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: autoconfigure",
      "Description: Automatic host configuration",
      "Attributes:",
      " baz: True",
      "Created:      Tue Aug 26 11:57:10 2025",
      "Updated:      Tue Aug 26 11:57:10 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=autoconfigure",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "autoconfigure",
              "description": "Automatic host configuration",
              "attributes": [
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-08-26T11:57:10.902897+02:00",
              "updated_at": "2025-08-26T11:57:10.902914+02:00"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_add 10.0.2.0/28 SecurePolicy",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_add 10.0.2.0/28 SecurePolicy",
    "ok": [
      "Added network policy 'securepolicy' to 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-08-26T11:57:10.295797+02:00",
          "updated_at": "2025-08-26T11:57:10.295808+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {
          "policy": 1
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "securepolicy",
                "description": "Secure policy for a network",
                "attributes": [
                  {
                    "name": "foo",
                    "value": true
                  },
                  {
                    "name": "bar",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:10.778380+02:00"
              },
              "communities": [],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.250049+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_add 10.0.2.0/28 Autoconfigure",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_add 10.0.2.0/28 Autoconfigure # requires force",
    "ok": [],
    "warning": [
      "Network 10.0.2.0/28 already has the policy 'securepolicy'. Must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=autoconfigure",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "autoconfigure",
              "description": "Automatic host configuration",
              "attributes": [
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.047003+02:00",
              "updated_at": "2025-05-13T11:03:25.047017+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "securepolicy",
            "description": "Secure policy for a network",
            "attributes": [
              {
                "name": "foo",
                "value": true
              },
              {
                "name": "bar",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-13T11:03:24.946070+02:00",
            "updated_at": "2025-05-13T11:03:24.946081+02:00"
          },
          "communities": [],
          "created_at": "2025-05-13T11:03:24.588229+02:00",
          "updated_at": "2025-05-13T11:03:25.469906+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_add 10.0.2.0/28 Autoconfigure -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_add 10.0.2.0/28 Autoconfigure -force",
    "ok": [
      "Added network policy 'autoconfigure' to 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {
          "policy": 2
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "autoconfigure",
                "description": "Automatic host configuration",
                "attributes": [
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.902897+02:00",
                "updated_at": "2025-08-26T11:57:10.902914+02:00"
              },
              "communities": [],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.371629+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network info 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network info 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Network:                 10.0.2.0/28",
      "Netmask:                 255.255.255.240",
      "Description:             TinyNet",
      "Category:                ",
      "Network policy:          autoconfigure",
      "Communities:             ",
      "Location:                ",
      "VLAN:                    None",
      "DNS delegated:           False",
      "Frozen:                  False",
      "IP-range:                10.0.2.0 - 10.0.2.15",
      "Reserved host addresses: 3",
      "                         10.0.2.0 (net)",
      "                         10.0.2.1",
      "                         10.0.2.2",
      "                         10.0.2.3",
      "                         10.0.2.15 (broadcast)",
      "Used addresses:          0",
      "Unused addresses:        11 (excluding reserved adr.)"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "autoconfigure",
            "description": "Automatic host configuration",
            "attributes": [
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-13T11:03:25.047003+02:00",
            "updated_at": "2025-05-13T11:03:25.047017+02:00"
          },
          "communities": [],
          "created_at": "2025-05-13T11:03:24.588229+02:00",
          "updated_at": "2025-05-13T11:03:25.634174+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.2.0",
          "10.0.2.1",
          "10.0.2.2",
          "10.0.2.3",
          "10.0.2.15"
        ]
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/unused_count",
        "data": {},
        "status": 200,
        "response": 11
      }
    ],
    "time": null
  },
  {
    "command": "network policy_delete Autoconfigure",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_delete Autoconfigure # requires force",
    "ok": [],
    "warning": [
      "Policy 'autoconfigure' is assigned to the following networks: '10.0.2.0/28'. Must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=autoconfigure",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "autoconfigure",
              "description": "Automatic host configuration",
              "attributes": [
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.047003+02:00",
              "updated_at": "2025-05-13T11:03:25.047017+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=2",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "autoconfigure",
                "description": "Automatic host configuration",
                "attributes": [
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-13T11:03:25.047003+02:00",
                "updated_at": "2025-05-13T11:03:25.047017+02:00"
              },
              "communities": [],
              "created_at": "2025-05-13T11:03:24.588229+02:00",
              "updated_at": "2025-05-13T11:03:25.634174+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_delete Autoconfigure -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_delete Autoconfigure -force",
    "ok": [
      "Deleted network policy 'Autoconfigure'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/networkpolicies/2",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network info 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network info 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Network:                 10.0.2.0/28",
      "Netmask:                 255.255.255.240",
      "Description:             TinyNet",
      "Category:                ",
      "Network policy:          ",
      "Communities:             ",
      "Location:                ",
      "VLAN:                    None",
      "DNS delegated:           False",
      "Frozen:                  False",
      "IP-range:                10.0.2.0 - 10.0.2.15",
      "Reserved host addresses: 3",
      "                         10.0.2.0 (net)",
      "                         10.0.2.1",
      "                         10.0.2.2",
      "                         10.0.2.3",
      "                         10.0.2.15 (broadcast)",
      "Used addresses:          0",
      "Unused addresses:        11 (excluding reserved adr.)"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-21T16:15:43.196305+01:00",
          "updated_at": "2025-03-21T16:15:44.128454+01:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.2.0",
          "10.0.2.1",
          "10.0.2.2",
          "10.0.2.3",
          "10.0.2.15"
        ]
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/unused_count",
        "data": {},
        "status": 200,
        "response": 11
      }
    ],
    "time": null
  },
  {
    "command": "network policy_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: securepolicy",
      "Description: Secure policy for a network",
      "Attributes:",
      " foo: True",
      " bar: True",
      "Created:      Tue May 13 11:03:24 2025",
      "Updated:      Tue May 13 11:03:24 2025",
      "",
      "Name: noicmp",
      "Description: ICMP disallowed",
      "Created:      Tue May 13 11:03:25 2025",
      "Updated:      Tue May 13 11:03:25 2025",
      ""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/",
        "data": {},
        "status": 200,
        "response": {
          "count": 2,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "securepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:24.946081+02:00"
            },
            {
              "name": "noicmp",
              "description": "ICMP disallowed",
              "attributes": [],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.119085+02:00",
              "updated_at": "2025-05-13T11:03:25.119098+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_add 10.0.2.0/28 SecurePolicy",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_add 10.0.2.0/28 SecurePolicy",
    "ok": [
      "Added network policy 'securepolicy' to 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=securepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "securepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-08-26T11:57:10.778366+02:00",
              "updated_at": "2025-08-26T11:57:10.778380+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {
          "policy": 1
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "securepolicy",
                "description": "Secure policy for a network",
                "attributes": [
                  {
                    "name": "foo",
                    "value": true
                  },
                  {
                    "name": "bar",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:10.778380+02:00"
              },
              "communities": [],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_rename SecurePolicy InsecurePolicy",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_rename SecurePolicy InsecurePolicy",
    "ok": [
      "Renamed network policy 'SecurePolicy' to 'InsecurePolicy'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=securepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "securepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:24.946081+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/1",
        "data": {
          "name": "insecurepolicy"
        },
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Secure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.284545+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/1",
        "data": {},
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Secure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.284545+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: insecurepolicy",
      "Description: Secure policy for a network",
      "Attributes:",
      " foo: True",
      " bar: True",
      "Networks:",
      " 10.0.2.0/28",
      "Created:      Tue May 13 11:03:24 2025",
      "Updated:      Tue May 13 11:03:26 2025",
      "",
      "Name: noicmp",
      "Description: ICMP disallowed",
      "Created:      Tue May 13 11:03:25 2025",
      "Updated:      Tue May 13 11:03:25 2025",
      ""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/",
        "data": {},
        "status": 200,
        "response": {
          "count": 2,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.284545+02:00"
            },
            {
              "name": "noicmp",
              "description": "ICMP disallowed",
              "attributes": [],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:25.119085+02:00",
              "updated_at": "2025-05-13T11:03:25.119098+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Secure policy for a network",
                "attributes": [
                  {
                    "name": "foo",
                    "value": true
                  },
                  {
                    "name": "bar",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-13T11:03:24.946070+02:00",
                "updated_at": "2025-05-13T11:03:26.284545+02:00"
              },
              "communities": [],
              "created_at": "2025-05-13T11:03:24.588229+02:00",
              "updated_at": "2025-05-13T11:03:26.187174+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      }
    ],
    "time": null
  },
  {
    "command": "network info 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network info 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Network:                 10.0.2.0/28",
      "Netmask:                 255.255.255.240",
      "Description:             TinyNet",
      "Category:                ",
      "Network policy:          insecurepolicy",
      "Communities:             ",
      "Location:                ",
      "VLAN:                    None",
      "DNS delegated:           False",
      "Frozen:                  False",
      "IP-range:                10.0.2.0 - 10.0.2.15",
      "Reserved host addresses: 3",
      "                         10.0.2.0 (net)",
      "                         10.0.2.1",
      "                         10.0.2.2",
      "                         10.0.2.3",
      "                         10.0.2.15 (broadcast)",
      "Used addresses:          0",
      "Unused addresses:        11 (excluding reserved adr.)"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Secure policy for a network",
            "attributes": [
              {
                "name": "foo",
                "value": true
              },
              {
                "name": "bar",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-13T11:03:24.946070+02:00",
            "updated_at": "2025-05-13T11:03:26.284545+02:00"
          },
          "communities": [],
          "created_at": "2025-05-13T11:03:24.588229+02:00",
          "updated_at": "2025-05-13T11:03:26.187174+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/reserved_list",
        "data": {},
        "status": 200,
        "response": [
          "10.0.2.0",
          "10.0.2.1",
          "10.0.2.2",
          "10.0.2.3",
          "10.0.2.15"
        ]
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/unused_count",
        "data": {},
        "status": 200,
        "response": 11
      }
    ],
    "time": null
  },
  {
    "command": "network policy_set_description InsecurePolicy \"Insecure policy for a network\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_set_description InsecurePolicy \"Insecure policy for a network\"",
    "ok": [
      "Set new description for network policy 'InsecurePolicy'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=insecurepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Secure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.284545+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/1",
        "data": {
          "description": "Insecure policy for a network"
        },
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.542190+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/1",
        "data": {},
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.542190+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_add InsecurePolicy baz",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_add InsecurePolicy baz",
    "ok": [
      "Added attribute 'baz' to policy 'insecurepolicy'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=baz",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "baz",
              "description": "Baz attribute",
              "created_at": "2025-05-13T11:03:24.830069+02:00",
              "updated_at": "2025-05-13T11:03:24.830077+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=insecurepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Insecure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.542190+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/1",
        "data": {
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ]
        },
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.647763+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/1",
        "data": {},
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "foo",
              "value": true
            },
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.647763+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_set_description baz \"Baz attribute (new)\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_set_description baz \"Baz attribute (new)\"",
    "ok": [
      "Set new description for network policy attribute 'baz'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=baz",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "baz",
              "description": "Baz attribute",
              "created_at": "2025-03-21T16:15:43.402037+01:00",
              "updated_at": "2025-03-21T16:15:43.402047+01:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicyattributes/4",
        "data": {
          "description": "Baz attribute (new)"
        },
        "status": 200,
        "response": {
          "name": "baz",
          "description": "Baz attribute (new)",
          "created_at": "2025-03-21T16:15:43.402037+01:00",
          "updated_at": "2025-03-21T16:15:45.059943+01:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/4",
        "data": {},
        "status": 200,
        "response": {
          "name": "baz",
          "description": "Baz attribute (new)",
          "created_at": "2025-03-21T16:15:43.402037+01:00",
          "updated_at": "2025-03-21T16:15:45.059943+01:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_list",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_list",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "isolated             'The network uses client isolation.'",
      "foo                  'Foo attribute'",
      "bar                  'Bar attribute'",
      "baz                  'Baz attribute (new)'"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/",
        "data": {},
        "status": 200,
        "response": {
          "count": 4,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "isolated",
              "description": "The network uses client isolation.",
              "created_at": "2025-03-21T16:15:06.245728+01:00",
              "updated_at": "2025-03-21T16:15:06.245744+01:00"
            },
            {
              "name": "foo",
              "description": "Foo attribute",
              "created_at": "2025-03-21T16:15:43.256009+01:00",
              "updated_at": "2025-03-21T16:15:43.256016+01:00"
            },
            {
              "name": "bar",
              "description": "Bar attribute",
              "created_at": "2025-03-21T16:15:43.324192+01:00",
              "updated_at": "2025-03-21T16:15:43.324202+01:00"
            },
            {
              "name": "baz",
              "description": "Baz attribute (new)",
              "created_at": "2025-03-21T16:15:43.402037+01:00",
              "updated_at": "2025-03-21T16:15:45.059943+01:00"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_remove InsecurePolicy foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_remove InsecurePolicy foo",
    "ok": [
      "Removed attribute 'foo' from policy 'insecurepolicy'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=foo",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "foo",
              "description": "Foo attribute",
              "created_at": "2025-05-13T11:03:24.663143+02:00",
              "updated_at": "2025-05-13T11:03:24.663153+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=insecurepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Insecure policy for a network",
              "attributes": [
                {
                  "name": "foo",
                  "value": true
                },
                {
                  "name": "bar",
                  "value": true
                },
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.647763+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/1",
        "data": {
          "attributes": [
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ]
        },
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.879990+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/1",
        "data": {},
        "status": 200,
        "response": {
          "name": "insecurepolicy",
          "description": "Insecure policy for a network",
          "attributes": [
            {
              "name": "bar",
              "value": true
            },
            {
              "name": "baz",
              "value": true
            }
          ],
          "community_mapping_prefix": null,
          "created_at": "2025-05-13T11:03:24.946070+02:00",
          "updated_at": "2025-05-13T11:03:26.879990+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_info InsecurePolicy",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_info InsecurePolicy",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: insecurepolicy",
      "Description: Insecure policy for a network",
      "Attributes:",
      " bar: True",
      " baz: True",
      "Networks:",
      " 10.0.2.0/28",
      "Created:      Tue May 13 11:03:24 2025",
      "Updated:      Tue May 13 11:03:26 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=insecurepolicy",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Insecure policy for a network",
              "attributes": [
                {
                  "name": "bar",
                  "value": true
                },
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.879990+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-13T11:03:24.946070+02:00",
                "updated_at": "2025-05-13T11:03:26.879990+02:00"
              },
              "communities": [],
              "created_at": "2025-05-13T11:03:24.588229+02:00",
              "updated_at": "2025-05-13T11:03:26.187174+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_delete bar",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_delete bar # requires force (in use)",
    "ok": [],
    "warning": [
      "Attribute 'bar' is used by the following policies: 'insecurepolicy'. Must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicyattributes/?name=bar",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "bar",
              "description": "Bar attribute",
              "created_at": "2025-05-13T11:03:24.750314+02:00",
              "updated_at": "2025-05-13T11:03:24.750327+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?attributes=3",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "insecurepolicy",
              "description": "Insecure policy for a network",
              "attributes": [
                {
                  "name": "bar",
                  "value": true
                },
                {
                  "name": "baz",
                  "value": true
                }
              ],
              "community_mapping_prefix": null,
              "created_at": "2025-05-13T11:03:24.946070+02:00",
              "updated_at": "2025-05-13T11:03:26.879990+02:00"
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_attribute_delete bar -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_attribute_delete bar -force",
    "ok": [
      "Deleted network policy attribute 'bar'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [],
    "time": null
  },
  {
    "command": "host add tinyhost -ip 10.0.2.0/28 -macaddress 11:22:33:aa:bb:cc -contact tinyhost@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add tinyhost -ip 10.0.2.0/28 -macaddress 11:22:33:aa:bb:cc -contact tinyhost@example.org",
    "ok": [
      "Created host tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinyhost.example.org",
      "Contact:      tinyhost@example.org",
      "A_Records:",
      "              IP         MAC                 ",
      "              10.0.2.4   11:22:33:aa:bb:cc   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:26 2025",
      "Updated:      Thu Jun 19 13:09:26 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A33%3Aaa%3Abb%3Acc",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/tinyhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:22.446824+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "network": "10.0.2.0/28"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.813146+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:26.792888+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A33%3Aaa%3Abb%3Acc&ordering=ipaddress",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/33",
        "data": {
          "macaddress": "11:22:33:aa:bb:cc"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/33",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:33:aa:bb:cc",
          "created_at": "2025-06-19T13:09:26.813141+02:00",
          "updated_at": "2025-06-19T13:09:26.907642+02:00",
          "ipaddress": "10.0.2.4",
          "host": 30
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=30",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:26.813141+02:00",
                  "updated_at": "2025-06-19T13:09:26.907642+02:00",
                  "ipaddress": "10.0.2.4",
                  "host": 30
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:26.794935+02:00",
                  "updated_at": "2025-06-19T13:09:26.794941+02:00",
                  "txt": "v=spf1 -all",
                  "host": 30
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:26.792878+02:00",
              "updated_at": "2025-06-19T13:09:26.792888+02:00",
              "name": "tinyhost.example.org",
              "contact": "tinyhost@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_create 10.0.2.0/28 guests \"Guest hosts.\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_create 10.0.2.0/28 guests \"Guest hosts.\"",
    "ok": [
      "Created community 'guests' for network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T10:28:08.859834+02:00",
            "updated_at": "2025-05-19T10:28:11.415014+02:00"
          },
          "communities": [],
          "created_at": "2025-05-19T10:28:08.477801+02:00",
          "updated_at": "2025-05-19T10:28:10.632088+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.2.0/28/communities/",
        "data": {
          "name": "guests",
          "description": "Guest hosts."
        },
        "status": 201,
        "response": {
          "name": "guests",
          "description": "Guest hosts.",
          "network": 10,
          "hosts": [],
          "global_name": "community01",
          "created_at": "2025-05-19T10:28:12.296707+02:00",
          "updated_at": "2025-05-19T10:28:12.296718+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_create 10.0.2.0/28 lab \"Lab hosts.\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_create 10.0.2.0/28 lab \"Lab hosts.\"",
    "ok": [
      "Created community 'lab' for network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T10:28:08.859834+02:00",
            "updated_at": "2025-05-19T10:28:11.415014+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T10:28:12.296707+02:00",
              "updated_at": "2025-05-19T10:28:12.296718+02:00"
            }
          ],
          "created_at": "2025-05-19T10:28:08.477801+02:00",
          "updated_at": "2025-05-19T10:28:10.632088+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.2.0/28/communities/",
        "data": {
          "name": "lab",
          "description": "Lab hosts."
        },
        "status": 201,
        "response": {
          "name": "lab",
          "description": "Lab hosts.",
          "network": 10,
          "hosts": [],
          "global_name": "community02",
          "created_at": "2025-05-19T10:28:12.364819+02:00",
          "updated_at": "2025-05-19T10:28:12.364828+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_list 10.0.2.0/28",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_list 10.0.2.0/28",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         guests",
      "Description:  Guest hosts.",
      "Global name:  community01",
      "Created:      Mon May 19 10:28:12 2025",
      "Updated:      Mon May 19 10:28:12 2025",
      "Hosts:        0",
      "",
      "Name:         lab",
      "Description:  Lab hosts.",
      "Global name:  community02",
      "Created:      Mon May 19 10:28:12 2025",
      "Updated:      Mon May 19 10:28:12 2025",
      "Hosts:        0",
      ""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T10:28:08.859834+02:00",
            "updated_at": "2025-05-19T10:28:11.415014+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T10:28:12.296707+02:00",
              "updated_at": "2025-05-19T10:28:12.296718+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community02",
              "created_at": "2025-05-19T10:28:12.364819+02:00",
              "updated_at": "2025-05-19T10:28:12.364828+02:00"
            }
          ],
          "created_at": "2025-05-19T10:28:08.477801+02:00",
          "updated_at": "2025-05-19T10:28:10.632088+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_host_add tinyhost guests",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_host_add tinyhost guests",
    "ok": [
      "Added host 'tinyhost.example.org' to community 'guests'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.907642+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:26.792888+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-06-19T13:09:27.063496+02:00",
              "updated_at": "2025-06-19T13:09:27.063505+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community02",
              "created_at": "2025-06-19T13:09:27.124655+02:00",
              "updated_at": "2025-06-19T13:09:27.124668+02:00"
            }
          ],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-06-19T13:09:24.724408+02:00",
                "updated_at": "2025-06-19T13:09:26.512391+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-06-19T13:09:27.063496+02:00",
                  "updated_at": "2025-06-19T13:09:27.063505+02:00"
                },
                {
                  "name": "lab",
                  "description": "Lab hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community02",
                  "created_at": "2025-06-19T13:09:27.124655+02:00",
                  "updated_at": "2025-06-19T13:09:27.124668+02:00"
                }
              ],
              "created_at": "2025-06-19T13:09:24.299643+02:00",
              "updated_at": "2025-06-19T13:09:25.887950+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.2.0/28/communities/1/hosts/",
        "data": {
          "id": 30,
          "ipaddress": "10.0.2.4"
        },
        "status": 201,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.907642+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [
            {
              "ipaddress": 33,
              "community": {
                "name": "guests",
                "description": "Guest hosts.",
                "network": 10,
                "hosts": [
                  "tinyhost.example.org"
                ],
                "global_name": "community01",
                "created_at": "2025-06-19T13:09:27.063496+02:00",
                "updated_at": "2025-06-19T13:09:27.063505+02:00"
              }
            }
          ],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:26.792888+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info tinyhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info tinyhost",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinyhost.example.org",
      "Contact:      tinyhost@example.org",
      "A_Records:",
      "              IP         MAC                 Policy           Community              ",
      "              10.0.2.4   11:22:33:aa:bb:cc   insecurepolicy   guests (community01)   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:26 2025",
      "Updated:      Thu Jun 19 13:09:26 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.907642+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [
            {
              "ipaddress": 33,
              "community": {
                "name": "guests",
                "description": "Guest hosts.",
                "network": 10,
                "hosts": [
                  "tinyhost.example.org"
                ],
                "global_name": "community01",
                "created_at": "2025-06-19T13:09:27.063496+02:00",
                "updated_at": "2025-06-19T13:09:27.063505+02:00"
              }
            }
          ],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:26.792888+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community01",
              "created_at": "2025-06-19T13:09:27.063496+02:00",
              "updated_at": "2025-06-19T13:09:27.063505+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community02",
              "created_at": "2025-06-19T13:09:27.124655+02:00",
              "updated_at": "2025-06-19T13:09:27.124668+02:00"
            }
          ],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_host_add tinyhost lab",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_host_add tinyhost lab",
    "ok": [
      "Added host 'tinyhost.example.org' to community 'lab'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:12.406598+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community01",
                  "created_at": "2025-08-26T11:57:12.991213+02:00",
                  "updated_at": "2025-08-26T11:57:12.991222+02:00"
                },
                {
                  "name": "lab",
                  "description": "Lab hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community02",
                  "created_at": "2025-08-26T11:57:13.046176+02:00",
                  "updated_at": "2025-08-26T11:57:13.046186+02:00"
                }
              ],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2/hosts/",
        "data": {
          "id": 30,
          "ipaddress": "10.0.2.4"
        },
        "status": 201,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-08-26T11:57:12.758134+02:00",
              "updated_at": "2025-08-26T11:57:12.848178+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:57:12.740145+02:00",
              "updated_at": "2025-08-26T11:57:12.740150+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [
            {
              "ipaddress": 33,
              "community": {
                "name": "lab",
                "description": "Lab hosts.",
                "network": 10,
                "hosts": [
                  "tinyhost.example.org"
                ],
                "global_name": "community02",
                "created_at": "2025-08-26T11:57:13.046176+02:00",
                "updated_at": "2025-08-26T11:57:13.046186+02:00"
              }
            }
          ],
          "created_at": "2025-08-26T11:57:12.737925+02:00",
          "updated_at": "2025-08-26T11:57:12.737933+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host info tinyhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host info tinyhost",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinyhost.example.org",
      "Contact:      tinyhost@example.org",
      "A_Records:",
      "              IP         MAC                 Policy           Community           ",
      "              10.0.2.4   11:22:33:aa:bb:cc   insecurepolicy   lab (community02)   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:26 2025",
      "Updated:      Thu Jun 19 13:09:26 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.907642+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [
            {
              "ipaddress": 33,
              "community": {
                "name": "lab",
                "description": "Lab hosts.",
                "network": 10,
                "hosts": [
                  "tinyhost.example.org"
                ],
                "global_name": "community02",
                "created_at": "2025-06-19T13:09:27.124655+02:00",
                "updated_at": "2025-06-19T13:09:27.124668+02:00"
              }
            }
          ],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:26.792888+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-06-19T13:09:27.063496+02:00",
              "updated_at": "2025-06-19T13:09:27.063505+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-06-19T13:09:27.124655+02:00",
              "updated_at": "2025-06-19T13:09:27.124668+02:00"
            }
          ],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.2.0/28 guests",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.2.0/28 guests",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         guests",
      "Description:  Guest hosts.",
      "Global name:  community01",
      "Created:      Mon May 19 10:28:12 2025",
      "Updated:      Mon May 19 10:28:12 2025",
      "Hosts:        0"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T10:28:08.859834+02:00",
            "updated_at": "2025-05-19T10:28:11.415014+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T10:28:12.296707+02:00",
              "updated_at": "2025-05-19T10:28:12.296718+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-05-19T10:28:12.364819+02:00",
              "updated_at": "2025-05-19T10:28:12.364828+02:00"
            }
          ],
          "created_at": "2025-05-19T10:28:08.477801+02:00",
          "updated_at": "2025-05-19T10:28:10.632088+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.2.0/28 lab",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.2.0/28 lab",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         lab",
      "Description:  Lab hosts.",
      "Global name:  community02",
      "Created:      Tue Aug 26 11:57:13 2025",
      "Updated:      Tue Aug 26 11:57:13 2025",
      "Hosts:",
      "              tinyhost.example.org"
    ],
    "api_requests": [],
    "time": null
  },
  {
    "command": "network policy_create CustomPrefix \"Custom community mapping prefix\" -prefix \"custom\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_create CustomPrefix \"Custom community mapping prefix\" -prefix \"custom\" # no attributes",
    "ok": [
      "Created network policy 'CustomPrefix'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networkpolicies/",
        "data": {
          "name": "CustomPrefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom"
        },
        "status": 201,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.403389+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/4",
        "data": {},
        "status": 200,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.403389+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.3.0/24 -desc \"CustomPrefixNet\" -policy CustomPrefix",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.3.0/24 -desc \"CustomPrefixNet\" -policy CustomPrefix # add policy during creation",
    "ok": [
      "created network 10.0.3.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "customprefix",
              "description": "Custom community mapping prefix",
              "attributes": [],
              "community_mapping_prefix": "custom",
              "created_at": "2025-05-19T15:03:51.281802+02:00",
              "updated_at": "2025-05-19T15:03:51.281810+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-19T15:03:47.982349+02:00",
                "updated_at": "2025-05-19T15:03:50.053933+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-05-19T15:03:50.668924+02:00",
                  "updated_at": "2025-05-19T15:03:50.668937+02:00"
                },
                {
                  "name": "lab",
                  "description": "Lab hosts.",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-05-19T15:03:50.725417+02:00",
                  "updated_at": "2025-05-19T15:03:50.725425+02:00"
                }
              ],
              "created_at": "2025-05-19T15:03:47.647864+02:00",
              "updated_at": "2025-05-19T15:03:49.267202+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T15:03:51.389153+02:00",
          "updated_at": "2025-05-19T15:03:51.389163+02:00",
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {
          "policy": 4
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=11",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "customprefix",
                "description": "Custom community mapping prefix",
                "attributes": [],
                "community_mapping_prefix": "custom",
                "created_at": "2025-05-19T15:03:51.281802+02:00",
                "updated_at": "2025-05-19T15:03:51.281810+02:00"
              },
              "communities": [],
              "created_at": "2025-05-19T15:03:51.389153+02:00",
              "updated_at": "2025-05-19T15:03:51.487147+02:00",
              "network": "10.0.3.0/24",
              "description": "CustomPrefixNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_info CustomPrefix",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_info CustomPrefix",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name: customprefix",
      "Description: Custom community mapping prefix",
      "Prefix: custom",
      "Networks:",
      " 10.0.3.0/24",
      "Created:      Mon May 19 15:03:51 2025",
      "Updated:      Mon May 19 15:03:51 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "customprefix",
              "description": "Custom community mapping prefix",
              "attributes": [],
              "community_mapping_prefix": "custom",
              "created_at": "2025-05-19T15:03:51.281802+02:00",
              "updated_at": "2025-05-19T15:03:51.281810+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "customprefix",
                "description": "Custom community mapping prefix",
                "attributes": [],
                "community_mapping_prefix": "custom",
                "created_at": "2025-05-19T15:03:51.281802+02:00",
                "updated_at": "2025-05-19T15:03:51.281810+02:00"
              },
              "communities": [],
              "created_at": "2025-05-19T15:03:51.389153+02:00",
              "updated_at": "2025-05-19T15:03:51.487147+02:00",
              "network": "10.0.3.0/24",
              "description": "CustomPrefixNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_create 10.0.3.0/24 foo \"Foo community\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_create 10.0.3.0/24 foo \"Foo community\"",
    "ok": [
      "Created community 'foo' for network 10.0.3.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "customprefix",
            "description": "Custom community mapping prefix",
            "attributes": [],
            "community_mapping_prefix": "custom",
            "created_at": "2025-05-19T15:03:51.281802+02:00",
            "updated_at": "2025-05-19T15:03:51.281810+02:00"
          },
          "communities": [],
          "created_at": "2025-05-19T15:03:51.389153+02:00",
          "updated_at": "2025-05-19T15:03:51.487147+02:00",
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.3.0/24/communities/",
        "data": {
          "name": "foo",
          "description": "Foo community"
        },
        "status": 201,
        "response": {
          "name": "foo",
          "description": "Foo community",
          "network": 11,
          "hosts": [],
          "global_name": "custom01",
          "created_at": "2025-05-19T15:03:51.631001+02:00",
          "updated_at": "2025-05-19T15:03:51.631022+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.3.0/24 foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.3.0/24 foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo",
      "Description:  Foo community",
      "Global name:  custom01",
      "Created:      Mon May 19 15:03:51 2025",
      "Updated:      Mon May 19 15:03:51 2025",
      "Hosts:        0"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "customprefix",
            "description": "Custom community mapping prefix",
            "attributes": [],
            "community_mapping_prefix": "custom",
            "created_at": "2025-05-19T15:03:51.281802+02:00",
            "updated_at": "2025-05-19T15:03:51.281810+02:00"
          },
          "communities": [
            {
              "name": "foo",
              "description": "Foo community",
              "network": 11,
              "hosts": [],
              "global_name": "custom01",
              "created_at": "2025-05-19T15:03:51.631001+02:00",
              "updated_at": "2025-05-19T15:03:51.631022+02:00"
            }
          ],
          "created_at": "2025-05-19T15:03:51.389153+02:00",
          "updated_at": "2025-05-19T15:03:51.487147+02:00",
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_set_prefix CustomPrefix \"newprefix\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_set_prefix CustomPrefix \"newprefix\"",
    "ok": [],
    "warning": [],
    "error": [
      "Could not get value for commmunity_mapping_prefix in patched object."
    ],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "customprefix",
              "description": "Custom community mapping prefix",
              "attributes": [],
              "community_mapping_prefix": "custom",
              "created_at": "2025-05-13T12:58:36.403379+02:00",
              "updated_at": "2025-05-13T12:58:36.403389+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/4",
        "data": {
          "commmunity_mapping_prefix": "newprefix"
        },
        "status": 200,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.792665+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/4",
        "data": {},
        "status": 200,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.792665+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.3.0/24 foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.3.0/24 foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo",
      "Description:  Foo community",
      "Global name:  custom01",
      "Created:      Mon May 19 15:03:51 2025",
      "Updated:      Mon May 19 15:03:51 2025",
      "Hosts:        0"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "customprefix",
            "description": "Custom community mapping prefix",
            "attributes": [],
            "community_mapping_prefix": "custom",
            "created_at": "2025-05-19T15:03:51.281802+02:00",
            "updated_at": "2025-05-19T15:03:51.716638+02:00"
          },
          "communities": [
            {
              "name": "foo",
              "description": "Foo community",
              "network": 11,
              "hosts": [],
              "global_name": "custom01",
              "created_at": "2025-05-19T15:03:51.631001+02:00",
              "updated_at": "2025-05-19T15:03:51.631022+02:00"
            }
          ],
          "created_at": "2025-05-19T15:03:51.389153+02:00",
          "updated_at": "2025-05-19T15:03:51.487147+02:00",
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network policy_unset_prefix CustomPrefix",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_unset_prefix CustomPrefix",
    "ok": [],
    "warning": [],
    "error": [
      "Could not get value for commmunity_mapping_prefix in patched object."
    ],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "customprefix",
              "description": "Custom community mapping prefix",
              "attributes": [],
              "community_mapping_prefix": "custom",
              "created_at": "2025-05-13T12:58:36.403379+02:00",
              "updated_at": "2025-05-13T12:58:36.792665+02:00"
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networkpolicies/4",
        "data": {
          "commmunity_mapping_prefix": null
        },
        "status": 200,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.896803+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/4",
        "data": {},
        "status": 200,
        "response": {
          "name": "customprefix",
          "description": "Custom community mapping prefix",
          "attributes": [],
          "community_mapping_prefix": "custom",
          "created_at": "2025-05-13T12:58:36.403379+02:00",
          "updated_at": "2025-05-13T12:58:36.896803+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.3.0/24 foo",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.3.0/24 foo",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         foo",
      "Description:  Foo community",
      "Global name:  custom01",
      "Created:      Mon May 19 15:03:51 2025",
      "Updated:      Mon May 19 15:03:51 2025",
      "Hosts:        0"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "customprefix",
            "description": "Custom community mapping prefix",
            "attributes": [],
            "community_mapping_prefix": "custom",
            "created_at": "2025-05-19T15:03:51.281802+02:00",
            "updated_at": "2025-05-19T15:03:51.817521+02:00"
          },
          "communities": [
            {
              "name": "foo",
              "description": "Foo community",
              "network": 11,
              "hosts": [],
              "global_name": "custom01",
              "created_at": "2025-05-19T15:03:51.631001+02:00",
              "updated_at": "2025-05-19T15:03:51.631022+02:00"
            }
          ],
          "created_at": "2025-05-19T15:03:51.389153+02:00",
          "updated_at": "2025-05-19T15:03:51.487147+02:00",
          "network": "10.0.3.0/24",
          "description": "CustomPrefixNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.3.0/24 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.3.0/24 -force",
    "ok": [
      "Removed network 10.0.3.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.3.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.3.0/24",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network policy_delete CustomPrefix",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network policy_delete CustomPrefix",
    "ok": [
      "Deleted network policy 'CustomPrefix'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networkpolicies/?name=customprefix",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "name": "customprefix",
              "description": "Custom community mapping prefix",
              "attributes": [],
              "community_mapping_prefix": "custom",
              "created_at": "2025-05-13T13:06:39.172844+02:00",
              "updated_at": "2025-05-13T13:06:39.727106+02:00"
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?policy=4",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networkpolicies/4",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network community_rename 10.0.2.0/28 lab labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_rename 10.0.2.0/28 lab labequipment",
    "ok": [
      "Renamed community 'lab' to 'labequipment'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T14:13:39.226705+02:00",
            "updated_at": "2025-05-19T14:13:41.357575+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T14:13:42.346255+02:00",
              "updated_at": "2025-05-19T14:13:42.346270+02:00"
            },
            {
              "name": "lab",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-05-19T14:13:42.444081+02:00",
              "updated_at": "2025-05-19T14:13:42.444096+02:00"
            }
          ],
          "created_at": "2025-05-19T14:13:38.844138+02:00",
          "updated_at": "2025-05-19T14:13:40.451944+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-19T14:13:39.226705+02:00",
                "updated_at": "2025-05-19T14:13:41.357575+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-05-19T14:13:42.346255+02:00",
                  "updated_at": "2025-05-19T14:13:42.346270+02:00"
                },
                {
                  "name": "lab",
                  "description": "Lab hosts.",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-05-19T14:13:42.444081+02:00",
                  "updated_at": "2025-05-19T14:13:42.444096+02:00"
                }
              ],
              "created_at": "2025-05-19T14:13:38.844138+02:00",
              "updated_at": "2025-05-19T14:13:40.451944+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2",
        "data": {
          "name": "labequipment"
        },
        "status": 200,
        "response": {
          "name": "labequipment",
          "description": "Lab hosts.",
          "network": 10,
          "hosts": [
            "tinyhost.example.org"
          ],
          "global_name": "community02",
          "created_at": "2025-05-19T14:13:42.444081+02:00",
          "updated_at": "2025-05-19T14:13:43.922436+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-19T14:13:39.226705+02:00",
                "updated_at": "2025-05-19T14:13:41.357575+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-05-19T14:13:42.346255+02:00",
                  "updated_at": "2025-05-19T14:13:42.346270+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab hosts.",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-05-19T14:13:42.444081+02:00",
                  "updated_at": "2025-05-19T14:13:43.922436+02:00"
                }
              ],
              "created_at": "2025-05-19T14:13:38.844138+02:00",
              "updated_at": "2025-05-19T14:13:40.451944+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2",
        "data": {},
        "status": 200,
        "response": {
          "name": "labequipment",
          "description": "Lab hosts.",
          "network": 10,
          "hosts": [
            "tinyhost.example.org"
          ],
          "global_name": "community02",
          "created_at": "2025-05-19T14:13:42.444081+02:00",
          "updated_at": "2025-05-19T14:13:43.922436+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_set_description 10.0.2.0/28 labequipment \"Lab equipment (expensive)\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_set_description 10.0.2.0/28 labequipment \"Lab equipment (expensive)\"",
    "ok": [
      "Set new description for community 'labequipment'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-08-26T11:57:10.778366+02:00",
            "updated_at": "2025-08-26T11:57:12.406598+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-08-26T11:57:12.991213+02:00",
              "updated_at": "2025-08-26T11:57:12.991222+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab hosts.",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-08-26T11:57:13.046176+02:00",
              "updated_at": "2025-08-26T11:57:14.191052+02:00"
            }
          ],
          "created_at": "2025-08-26T11:57:10.295797+02:00",
          "updated_at": "2025-08-26T11:57:11.801533+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2",
        "data": {
          "description": "Lab equipment (expensive)"
        },
        "status": 200,
        "response": {
          "name": "labequipment",
          "description": "Lab equipment (expensive)",
          "network": 10,
          "hosts": [
            "tinyhost.example.org"
          ],
          "global_name": "community02",
          "created_at": "2025-08-26T11:57:13.046176+02:00",
          "updated_at": "2025-08-26T11:57:14.329854+02:00"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:12.406598+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-08-26T11:57:12.991213+02:00",
                  "updated_at": "2025-08-26T11:57:12.991222+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab equipment (expensive)",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-08-26T11:57:13.046176+02:00",
                  "updated_at": "2025-08-26T11:57:14.329854+02:00"
                }
              ],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2",
        "data": {},
        "status": 200,
        "response": {
          "name": "labequipment",
          "description": "Lab equipment (expensive)",
          "network": 10,
          "hosts": [
            "tinyhost.example.org"
          ],
          "global_name": "community02",
          "created_at": "2025-08-26T11:57:13.046176+02:00",
          "updated_at": "2025-08-26T11:57:14.329854+02:00"
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_info 10.0.2.0/28 labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_info 10.0.2.0/28 labequipment",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         labequipment",
      "Description:  Lab equipment (expensive)",
      "Global name:  community02",
      "Created:      Mon May 19 14:13:42 2025",
      "Updated:      Mon May 19 14:13:44 2025",
      "Hosts:",
      "              tinyhost.example.org"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T14:13:39.226705+02:00",
            "updated_at": "2025-05-19T14:13:41.357575+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T14:13:42.346255+02:00",
              "updated_at": "2025-05-19T14:13:42.346270+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab equipment (expensive)",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-05-19T14:13:42.444081+02:00",
              "updated_at": "2025-05-19T14:13:44.080076+02:00"
            }
          ],
          "created_at": "2025-05-19T14:13:38.844138+02:00",
          "updated_at": "2025-05-19T14:13:40.451944+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add tinierhost -ip 10.0.2.0/28 -contact tinierhost@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add tinierhost -ip 10.0.2.0/28 -contact tinierhost@example.org",
    "ok": [
      "Created host tinierhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         tinierhost.example.org",
      "Contact:      tinierhost@example.org",
      "A_Records:",
      "              IP         MAC         ",
      "              10.0.2.5   <not set>   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Tue Aug 26 11:57:14 2025",
      "Updated:      Tue Aug 26 11:57:14 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinierhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/tinierhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/tinierhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-08-26T11:56:35.781651+02:00",
                "updated_at": "2025-08-26T11:56:35.781663+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-08-26T11:56:35.478972+02:00",
            "updated_at": "2025-08-26T11:57:12.847631+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-08-26T11:56:36.090230+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "tinierhost.example.org",
          "contact": "tinierhost@example.org",
          "network": "10.0.2.0/28"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinierhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:57:14.509299+02:00",
              "updated_at": "2025-08-26T11:57:14.509305+02:00",
              "ipaddress": "10.0.2.5",
              "host": 31
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:57:14.494113+02:00",
              "updated_at": "2025-08-26T11:57:14.494120+02:00",
              "txt": "v=spf1 -all",
              "host": 31
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:57:14.491950+02:00",
          "updated_at": "2025-08-26T11:57:14.491957+02:00",
          "name": "tinierhost.example.org",
          "contact": "tinierhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.2.5",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-08-26T11:57:10.778366+02:00",
            "updated_at": "2025-08-26T11:57:12.406598+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-08-26T11:57:12.991213+02:00",
              "updated_at": "2025-08-26T11:57:12.991222+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab equipment (expensive)",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-08-26T11:57:13.046176+02:00",
              "updated_at": "2025-08-26T11:57:14.329854+02:00"
            }
          ],
          "created_at": "2025-08-26T11:57:10.295797+02:00",
          "updated_at": "2025-08-26T11:57:11.801533+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_host_add tinierhost guests",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_host_add tinierhost guests",
    "ok": [],
    "warning": [
      "POST \"http://127.0.0.1:8000/api/v1/networks/10.0.2.0/28/communities/1/hosts/\": 406: Not Acceptable\n{\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_acceptable\",\n      \"detail\": \"The IP must have a MAC address to bind it to a community.\",\n      \"attr\": null\n    }\n  ]\n}"
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinierhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-08-26T11:57:14.509299+02:00",
              "updated_at": "2025-08-26T11:57:14.509305+02:00",
              "ipaddress": "10.0.2.5",
              "host": 31
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:57:14.494113+02:00",
              "updated_at": "2025-08-26T11:57:14.494120+02:00",
              "txt": "v=spf1 -all",
              "host": 31
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:57:14.491950+02:00",
          "updated_at": "2025-08-26T11:57:14.491957+02:00",
          "name": "tinierhost.example.org",
          "contact": "tinierhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:12.406598+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-08-26T11:57:12.991213+02:00",
                  "updated_at": "2025-08-26T11:57:12.991222+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab equipment (expensive)",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-08-26T11:57:13.046176+02:00",
                  "updated_at": "2025-08-26T11:57:14.329854+02:00"
                }
              ],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/10.0.2.0/28/communities/1/hosts/",
        "data": {
          "id": 31,
          "ipaddress": "10.0.2.5"
        },
        "status": 406,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_acceptable",
              "detail": "The IP must have a MAC address to bind it to a community.",
              "attr": null
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_list 10.0.2.0/28 -hosts",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_list 10.0.2.0/28 -hosts",
    "ok": [],
    "warning": [],
    "error": [],
    "output": [
      "Name:         guests",
      "Description:  Guest hosts.",
      "Global name:  community01",
      "Created:      Mon May 19 14:13:42 2025",
      "Updated:      Mon May 19 14:13:42 2025",
      "Hosts:        0",
      "",
      "Name:         labequipment",
      "Description:  Lab equipment (expensive)",
      "Global name:  community02",
      "Created:      Mon May 19 14:13:42 2025",
      "Updated:      Mon May 19 14:13:44 2025",
      "Hosts:",
      "              tinyhost.example.org",
      ""
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-19T14:13:39.226705+02:00",
            "updated_at": "2025-05-19T14:13:41.357575+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-05-19T14:13:42.346255+02:00",
              "updated_at": "2025-05-19T14:13:42.346270+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab equipment (expensive)",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-05-19T14:13:42.444081+02:00",
              "updated_at": "2025-05-19T14:13:44.080076+02:00"
            }
          ],
          "created_at": "2025-05-19T14:13:38.844138+02:00",
          "updated_at": "2025-05-19T14:13:40.451944+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network create -network 10.0.0.0/24 -desc \"MediumNet\"",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network create -network 10.0.0.0/24 -desc \"MediumNet\"",
    "ok": [
      "created network 10.0.0.0/24"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-05-19T14:13:39.226705+02:00",
                "updated_at": "2025-05-19T14:13:41.357575+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-05-19T14:13:42.346255+02:00",
                  "updated_at": "2025-05-19T14:13:42.346270+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab equipment (expensive)",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-05-19T14:13:42.444081+02:00",
                  "updated_at": "2025-05-19T14:13:44.080076+02:00"
                }
              ],
              "created_at": "2025-05-19T14:13:38.844138+02:00",
              "updated_at": "2025-05-19T14:13:40.451944+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/networks/",
        "data": {
          "network": "10.0.0.0/24",
          "description": "MediumNet",
          "frozen": false
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-05-19T14:13:44.761444+02:00",
          "updated_at": "2025-05-19T14:13:44.761455+02:00",
          "network": "10.0.0.0/24",
          "description": "MediumNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host add mediumhost -ip 10.0.0.0/24 -macaddress 11:22:34:aa:bb:cd -contact mediumhost@example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host add mediumhost -ip 10.0.0.0/24 -macaddress 11:22:34:aa:bb:cd -contact mediumhost@example.org",
    "ok": [
      "Created host mediumhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [
      "Name:         mediumhost.example.org",
      "Contact:      mediumhost@example.org",
      "A_Records:",
      "              IP         MAC                 ",
      "              10.0.0.4   11:22:34:aa:bb:cd   ",
      "TTL:          (Default)",
      "TXT:          v=spf1 -all",
      "Created:      Thu Jun 19 13:09:29 2025",
      "Updated:      Thu Jun 19 13:09:29 2025"
    ],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A34%3Aaa%3Abb%3Acd",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/mediumhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/cnames/mediumhost.example.org",
        "data": {},
        "status": 404,
        "response": {
          "type": "client_error",
          "errors": [
            {
              "code": "not_found",
              "detail": "Not found.",
              "attr": null
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/hostname/mediumhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "zone": {
            "nameservers": [
              {
                "created_at": "2025-06-19T13:08:49.394396+02:00",
                "updated_at": "2025-06-19T13:08:49.394408+02:00",
                "name": "ns2.example.org",
                "ttl": null
              }
            ],
            "created_at": "2025-06-19T13:08:48.992266+02:00",
            "updated_at": "2025-06-19T13:09:28.718615+02:00",
            "updated": true,
            "primary_ns": "ns2.example.org",
            "email": "hostperson@example.org",
            "serialno_updated_at": "2025-06-19T13:08:49.869830+02:00",
            "refresh": 360,
            "retry": 1800,
            "expire": 2400,
            "soa_ttl": 1800,
            "default_ttl": 300,
            "name": "example.org"
          }
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:28.960243+02:00",
          "updated_at": "2025-06-19T13:09:28.960252+02:00",
          "network": "10.0.0.0/24",
          "description": "MediumNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "POST",
        "url": "/api/v1/hosts/",
        "data": {
          "name": "mediumhost.example.org",
          "contact": "mediumhost@example.org",
          "network": "10.0.0.0/24"
        },
        "status": 201
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/mediumhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:29.183899+02:00",
              "updated_at": "2025-06-19T13:09:29.183906+02:00",
              "ipaddress": "10.0.0.4",
              "host": 32
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:29.164111+02:00",
              "updated_at": "2025-06-19T13:09:29.164117+02:00",
              "txt": "v=spf1 -all",
              "host": 32
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:29.161836+02:00",
          "updated_at": "2025-06-19T13:09:29.161847+02:00",
          "name": "mediumhost.example.org",
          "contact": "mediumhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/?macaddress=11%3A22%3A34%3Aaa%3Abb%3Acd&ordering=ipaddress",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "PATCH",
        "url": "/api/v1/ipaddresses/35",
        "data": {
          "macaddress": "11:22:34:aa:bb:cd"
        },
        "status": 204
      },
      {
        "method": "GET",
        "url": "/api/v1/ipaddresses/35",
        "data": {},
        "status": 200,
        "response": {
          "macaddress": "11:22:34:aa:bb:cd",
          "created_at": "2025-06-19T13:09:29.183899+02:00",
          "updated_at": "2025-06-19T13:09:29.272173+02:00",
          "ipaddress": "10.0.0.4",
          "host": 32
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?id=32",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:34:aa:bb:cd",
                  "created_at": "2025-06-19T13:09:29.183899+02:00",
                  "updated_at": "2025-06-19T13:09:29.272173+02:00",
                  "ipaddress": "10.0.0.4",
                  "host": 32
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:29.164111+02:00",
                  "updated_at": "2025-06-19T13:09:29.164117+02:00",
                  "txt": "v=spf1 -all",
                  "host": 32
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [],
              "created_at": "2025-06-19T13:09:29.161836+02:00",
              "updated_at": "2025-06-19T13:09:29.161847+02:00",
              "name": "mediumhost.example.org",
              "contact": "mediumhost@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/ip/10.0.0.4",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:28.960243+02:00",
          "updated_at": "2025-06-19T13:09:28.960252+02:00",
          "network": "10.0.0.0/24",
          "description": "MediumNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_host_add mediumhost labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_host_add mediumhost labequipment # fails, community not found in network",
    "ok": [],
    "warning": [
      "Community 'labequipment' not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/mediumhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:34:aa:bb:cd",
              "created_at": "2025-08-26T11:57:14.957408+02:00",
              "updated_at": "2025-08-26T11:57:15.059190+02:00",
              "ipaddress": "10.0.0.4",
              "host": 32
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:57:14.937138+02:00",
              "updated_at": "2025-08-26T11:57:14.937147+02:00",
              "txt": "v=spf1 -all",
              "host": 32
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-08-26T11:57:14.935007+02:00",
          "updated_at": "2025-08-26T11:57:14.935016+02:00",
          "name": "mediumhost.example.org",
          "contact": "mediumhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove mediumhost -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove mediumhost -force",
    "ok": [
      "removed mediumhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/mediumhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.0.0/24",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.0.0/24",
    "ok": [],
    "warning": [
      "Must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": null,
          "communities": [],
          "created_at": "2025-03-21T16:15:46.886868+01:00",
          "updated_at": "2025-03-21T16:15:46.886878+01:00",
          "network": "10.0.0.0/24",
          "description": "MediumNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.0.0/24/used_count",
        "data": {},
        "status": 200,
        "response": 0
      }
    ],
    "time": null
  },
  {
    "command": "network community_delete 10.0.2.0/28 labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_delete 10.0.2.0/28 labequipment # fails",
    "ok": [],
    "warning": [
      "Community 'labequipment' has hosts. Must force."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-06-19T13:09:24.724408+02:00",
            "updated_at": "2025-06-19T13:09:26.512391+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-06-19T13:09:27.063496+02:00",
              "updated_at": "2025-06-19T13:09:27.063505+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab equipment (expensive)",
              "network": 10,
              "hosts": [
                "tinyhost.example.org"
              ],
              "global_name": "community02",
              "created_at": "2025-06-19T13:09:27.124655+02:00",
              "updated_at": "2025-06-19T13:09:28.512444+02:00"
            }
          ],
          "created_at": "2025-06-19T13:09:24.299643+02:00",
          "updated_at": "2025-06-19T13:09:25.887950+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-06-19T13:09:24.724408+02:00",
                "updated_at": "2025-06-19T13:09:26.512391+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-06-19T13:09:27.063496+02:00",
                  "updated_at": "2025-06-19T13:09:27.063505+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab equipment (expensive)",
                  "network": 10,
                  "hosts": [
                    "tinyhost.example.org"
                  ],
                  "global_name": "community02",
                  "created_at": "2025-06-19T13:09:27.124655+02:00",
                  "updated_at": "2025-06-19T13:09:28.512444+02:00"
                }
              ],
              "created_at": "2025-06-19T13:09:24.299643+02:00",
              "updated_at": "2025-06-19T13:09:25.887950+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2/hosts/",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "ipaddresses": [
                {
                  "macaddress": "11:22:33:aa:bb:cc",
                  "created_at": "2025-06-19T13:09:26.813141+02:00",
                  "updated_at": "2025-06-19T13:09:26.907642+02:00",
                  "ipaddress": "10.0.2.4",
                  "host": 30
                }
              ],
              "cnames": [],
              "mxs": [],
              "txts": [
                {
                  "created_at": "2025-06-19T13:09:26.794935+02:00",
                  "updated_at": "2025-06-19T13:09:26.794941+02:00",
                  "txt": "v=spf1 -all",
                  "host": 30
                }
              ],
              "ptr_overrides": [],
              "srvs": [],
              "naptrs": [],
              "sshfps": [],
              "hostgroups": [],
              "roles": [],
              "hinfo": null,
              "loc": null,
              "bacnetid": null,
              "communities": [
                {
                  "ipaddress": 33,
                  "community": {
                    "name": "labequipment",
                    "description": "Lab equipment (expensive)",
                    "network": 10,
                    "hosts": [
                      "tinyhost.example.org"
                    ],
                    "global_name": "community02",
                    "created_at": "2025-06-19T13:09:27.124655+02:00",
                    "updated_at": "2025-06-19T13:09:28.512444+02:00"
                  }
                }
              ],
              "created_at": "2025-06-19T13:09:26.792878+02:00",
              "updated_at": "2025-06-19T13:09:26.792888+02:00",
              "name": "tinyhost.example.org",
              "contact": "tinyhost@example.org",
              "ttl": null,
              "comment": "",
              "zone": 1
            }
          ]
        }
      }
    ],
    "time": null
  },
  {
    "command": "network community_host_remove tinyhost labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_host_remove tinyhost labequipment",
    "ok": [
      "Removed host 'tinyhost.example.org' (IP: 10.0.2.4) from community 'labequipment'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-08-26T11:57:12.758134+02:00",
              "updated_at": "2025-08-26T11:57:12.848178+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-08-26T11:57:12.740145+02:00",
              "updated_at": "2025-08-26T11:57:12.740150+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [
            {
              "ipaddress": 33,
              "community": {
                "name": "labequipment",
                "description": "Lab equipment (expensive)",
                "network": 10,
                "hosts": [
                  "tinyhost.example.org"
                ],
                "global_name": "community02",
                "created_at": "2025-08-26T11:57:13.046176+02:00",
                "updated_at": "2025-08-26T11:57:14.329854+02:00"
              }
            }
          ],
          "created_at": "2025-08-26T11:57:12.737925+02:00",
          "updated_at": "2025-08-26T11:57:12.737933+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2/hosts/30",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network community_delete 10.0.2.0/28 labequipment",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_delete 10.0.2.0/28 labequipment",
    "ok": [
      "Deleted community 'labequipment'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-08-26T11:57:10.778366+02:00",
            "updated_at": "2025-08-26T11:57:12.406598+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-08-26T11:57:12.991213+02:00",
              "updated_at": "2025-08-26T11:57:12.991222+02:00"
            },
            {
              "name": "labequipment",
              "description": "Lab equipment (expensive)",
              "network": 10,
              "hosts": [],
              "global_name": "community02",
              "created_at": "2025-08-26T11:57:13.046176+02:00",
              "updated_at": "2025-08-26T11:57:14.329854+02:00"
            }
          ],
          "created_at": "2025-08-26T11:57:10.295797+02:00",
          "updated_at": "2025-08-26T11:57:11.801533+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:12.406598+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-08-26T11:57:12.991213+02:00",
                  "updated_at": "2025-08-26T11:57:12.991222+02:00"
                },
                {
                  "name": "labequipment",
                  "description": "Lab equipment (expensive)",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community02",
                  "created_at": "2025-08-26T11:57:13.046176+02:00",
                  "updated_at": "2025-08-26T11:57:14.329854+02:00"
                }
              ],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2/hosts/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.2.0/28/communities/2",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network community_delete 10.0.2.0/28 guests",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_delete 10.0.2.0/28 guests # fails",
    "ok": [
      "Deleted community 'guests'"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-08-26T11:57:10.778366+02:00",
            "updated_at": "2025-08-26T11:57:12.406598+02:00"
          },
          "communities": [
            {
              "name": "guests",
              "description": "Guest hosts.",
              "network": 10,
              "hosts": [],
              "global_name": "community01",
              "created_at": "2025-08-26T11:57:12.991213+02:00",
              "updated_at": "2025-08-26T11:57:12.991222+02:00"
            }
          ],
          "created_at": "2025-08-26T11:57:10.295797+02:00",
          "updated_at": "2025-08-26T11:57:11.801533+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/?id=10",
        "data": {},
        "status": 200,
        "response": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "excluded_ranges": [],
              "policy": {
                "name": "insecurepolicy",
                "description": "Insecure policy for a network",
                "attributes": [
                  {
                    "name": "bar",
                    "value": true
                  },
                  {
                    "name": "baz",
                    "value": true
                  }
                ],
                "community_mapping_prefix": null,
                "created_at": "2025-08-26T11:57:10.778366+02:00",
                "updated_at": "2025-08-26T11:57:12.406598+02:00"
              },
              "communities": [
                {
                  "name": "guests",
                  "description": "Guest hosts.",
                  "network": 10,
                  "hosts": [],
                  "global_name": "community01",
                  "created_at": "2025-08-26T11:57:12.991213+02:00",
                  "updated_at": "2025-08-26T11:57:12.991222+02:00"
                }
              ],
              "created_at": "2025-08-26T11:57:10.295797+02:00",
              "updated_at": "2025-08-26T11:57:11.801533+02:00",
              "network": "10.0.2.0/28",
              "description": "TinyNet",
              "vlan": null,
              "dns_delegated": false,
              "category": "",
              "location": "",
              "frozen": false,
              "reserved": 3
            }
          ]
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/communities/1/hosts/",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.2.0/28/communities/1",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network community_delete 10.0.2.0/28 guests -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network community_delete 10.0.2.0/28 guests -force",
    "ok": [],
    "warning": [
      "Community 'guests' not found."
    ],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-13T11:03:24.946070+02:00",
            "updated_at": "2025-05-13T11:03:26.879990+02:00"
          },
          "communities": [],
          "created_at": "2025-05-13T11:03:24.588229+02:00",
          "updated_at": "2025-05-13T11:03:26.187174+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      }
    ],
    "time": null
  },
  {
    "command": "host remove tinyhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove tinyhost",
    "ok": [
      "removed tinyhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "11:22:33:aa:bb:cc",
              "created_at": "2025-06-19T13:09:26.813141+02:00",
              "updated_at": "2025-06-19T13:09:26.907642+02:00",
              "ipaddress": "10.0.2.4",
              "host": 30
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:26.794935+02:00",
              "updated_at": "2025-06-19T13:09:26.794941+02:00",
              "txt": "v=spf1 -all",
              "host": 30
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:26.792878+02:00",
          "updated_at": "2025-06-19T13:09:29.776794+02:00",
          "name": "tinyhost.example.org",
          "contact": "tinyhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/tinyhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "host remove tinierhost",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "host remove tinierhost",
    "ok": [
      "removed tinierhost.example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/hosts/tinierhost.example.org",
        "data": {},
        "status": 200,
        "response": {
          "ipaddresses": [
            {
              "macaddress": "",
              "created_at": "2025-06-19T13:09:28.719290+02:00",
              "updated_at": "2025-06-19T13:09:28.719298+02:00",
              "ipaddress": "10.0.2.5",
              "host": 31
            }
          ],
          "cnames": [],
          "mxs": [],
          "txts": [
            {
              "created_at": "2025-06-19T13:09:28.702377+02:00",
              "updated_at": "2025-06-19T13:09:28.702388+02:00",
              "txt": "v=spf1 -all",
              "host": 31
            }
          ],
          "ptr_overrides": [],
          "srvs": [],
          "naptrs": [],
          "sshfps": [],
          "hostgroups": [],
          "roles": [],
          "hinfo": null,
          "loc": null,
          "bacnetid": null,
          "communities": [],
          "created_at": "2025-06-19T13:09:28.699734+02:00",
          "updated_at": "2025-06-19T13:09:28.699754+02:00",
          "name": "tinierhost.example.org",
          "contact": "tinierhost@example.org",
          "ttl": null,
          "comment": "",
          "zone": 1
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/hosts/tinierhost.example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "network remove 10.0.2.0/28 -force",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "network remove 10.0.2.0/28 -force",
    "ok": [
      "Removed network 10.0.2.0/28"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 200,
        "response": {
          "excluded_ranges": [],
          "policy": {
            "name": "insecurepolicy",
            "description": "Insecure policy for a network",
            "attributes": [
              {
                "name": "bar",
                "value": true
              },
              {
                "name": "baz",
                "value": true
              }
            ],
            "community_mapping_prefix": null,
            "created_at": "2025-05-13T11:03:24.946070+02:00",
            "updated_at": "2025-05-13T11:03:26.879990+02:00"
          },
          "communities": [],
          "created_at": "2025-05-13T11:03:24.588229+02:00",
          "updated_at": "2025-05-13T11:03:26.187174+02:00",
          "network": "10.0.2.0/28",
          "description": "TinyNet",
          "vlan": null,
          "dns_delegated": false,
          "category": "",
          "location": "",
          "frozen": false,
          "reserved": 3
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/networks/10.0.2.0/28/used_count",
        "data": {},
        "status": 200,
        "response": 0
      },
      {
        "method": "DELETE",
        "url": "/api/v1/networks/10.0.2.0/28",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  },
  {
    "command": "zone delete example.org",
    "command_filter": null,
    "command_filter_negate": false,
    "command_issued": "zone delete example.org",
    "ok": [
      "Deleted zone example.org"
    ],
    "warning": [],
    "error": [],
    "output": [],
    "api_requests": [
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 200,
        "response": {
          "nameservers": [
            {
              "created_at": "2025-03-21T16:15:20.056277+01:00",
              "updated_at": "2025-03-21T16:15:20.056555+01:00",
              "name": "ns2.example.org",
              "ttl": null
            }
          ],
          "created_at": "2025-03-21T16:15:19.590868+01:00",
          "updated_at": "2025-03-21T16:15:47.979368+01:00",
          "updated": true,
          "primary_ns": "ns2.example.org",
          "email": "hostperson@example.org",
          "serialno_updated_at": "2025-03-21T16:15:20.380448+01:00",
          "refresh": 360,
          "retry": 1800,
          "expire": 2400,
          "soa_ttl": 1800,
          "default_ttl": 300,
          "name": "example.org"
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/hosts/?zone=1",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "GET",
        "url": "/api/v1/zones/forward/?name__endswith=.example.org",
        "data": {},
        "status": 200,
        "response": {
          "count": 0,
          "next": null,
          "previous": null,
          "results": []
        }
      },
      {
        "method": "DELETE",
        "url": "/api/v1/zones/forward/example.org",
        "data": {},
        "status": 204
      }
    ],
    "time": null
  }
]