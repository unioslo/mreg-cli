from __future__ import annotations

from typing import Literal, NoReturn, overload

@overload
def cli_error(msg: str) -> NoReturn: ...
@overload
def cli_error(
    msg: str, raise_exception: Literal[True] = True, exception: type[Exception] = ...
) -> NoReturn: ...
@overload
def cli_error(
    msg: str,
    raise_exception: Literal[False] = False,
    exception: type[Exception] = ...,
) -> None: ...
@overload
def cli_error(
    msg: str, raise_exception: bool = ..., exception: type[Exception] = ...
) -> NoReturn | None: ...
@overload
def cli_warning(msg: str) -> NoReturn: ...
@overload
def cli_warning(
    msg: str, raise_exception: Literal[True] = True, exception: type[Exception] = ...
) -> NoReturn: ...
@overload
def cli_warning(
    msg: str,
    raise_exception: Literal[False] = False,
    exception: type[Exception] = ...,
) -> None: ...
@overload
def cli_warning(
    msg: str, raise_exception: bool = ..., exception: type[Exception] = ...
) -> NoReturn | None: ...
def cli_info(msg: str, print_msg: bool = ...) -> None: ...
